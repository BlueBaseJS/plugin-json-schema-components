1c1e0371c24d3f49d69bbd6471c05275
"use strict";

/* istanbul ignore next */
var cov_2j0ttpri8g = function () {
  var path = "/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonSchemaParser.ts";
  var hash = "493c7e0efbc482a9b5380074a5913029b672af74";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonSchemaParser.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 23
        },
        end: {
          line: 5,
          column: 95
        }
      },
      "2": {
        start: {
          line: 7,
          column: 20
        },
        end: {
          line: 7,
          column: 89
        }
      },
      "3": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 14
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "5": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "6": {
        start: {
          line: 17,
          column: 21
        },
        end: {
          line: 17,
          column: 69
        }
      },
      "7": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 19,
          column: 75
        }
      },
      "8": {
        start: {
          line: 21,
          column: 23
        },
        end: {
          line: 106,
          column: 3
        }
      },
      "9": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "10": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 18
        }
      },
      "11": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 58
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 37
        }
      },
      "13": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 104,
          column: 6
        }
      },
      "14": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 35,
          column: 7
        }
      },
      "15": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 44
        }
      },
      "16": {
        start: {
          line: 37,
          column: 6
        },
        end: {
          line: 37,
          column: 42
        }
      },
      "17": {
        start: {
          line: 42,
          column: 23
        },
        end: {
          line: 42,
          column: 93
        }
      },
      "18": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 25
        }
      },
      "19": {
        start: {
          line: 44,
          column: 18
        },
        end: {
          line: 44,
          column: 19
        }
      },
      "20": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 64,
          column: 7
        }
      },
      "21": {
        start: {
          line: 46,
          column: 27
        },
        end: {
          line: 46,
          column: 37
        }
      },
      "22": {
        start: {
          line: 46,
          column: 50
        },
        end: {
          line: 46,
          column: 74
        }
      },
      "23": {
        start: {
          line: 46,
          column: 81
        },
        end: {
          line: 46,
          column: 82
        }
      },
      "24": {
        start: {
          line: 46,
          column: 96
        },
        end: {
          line: 46,
          column: 193
        }
      },
      "25": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "26": {
        start: {
          line: 50,
          column: 10
        },
        end: {
          line: 50,
          column: 44
        }
      },
      "27": {
        start: {
          line: 50,
          column: 38
        },
        end: {
          line: 50,
          column: 44
        }
      },
      "28": {
        start: {
          line: 51,
          column: 10
        },
        end: {
          line: 51,
          column: 33
        }
      },
      "29": {
        start: {
          line: 53,
          column: 10
        },
        end: {
          line: 53,
          column: 32
        }
      },
      "30": {
        start: {
          line: 54,
          column: 10
        },
        end: {
          line: 54,
          column: 29
        }
      },
      "31": {
        start: {
          line: 54,
          column: 23
        },
        end: {
          line: 54,
          column: 29
        }
      },
      "32": {
        start: {
          line: 55,
          column: 10
        },
        end: {
          line: 55,
          column: 26
        }
      },
      "33": {
        start: {
          line: 58,
          column: 25
        },
        end: {
          line: 58,
          column: 29
        }
      },
      "34": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 50
        }
      },
      "35": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 69
        }
      },
      "36": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 61,
          column: 52
        }
      },
      "37": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 35
        }
      },
      "38": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 16
        }
      },
      "39": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 24
        }
      },
      "40": {
        start: {
          line: 71,
          column: 17
        },
        end: {
          line: 71,
          column: 28
        }
      },
      "41": {
        start: {
          line: 72,
          column: 18
        },
        end: {
          line: 72,
          column: 30
        }
      },
      "42": {
        start: {
          line: 73,
          column: 22
        },
        end: {
          line: 73,
          column: 38
        }
      },
      "43": {
        start: {
          line: 75,
          column: 6
        },
        end: {
          line: 77,
          column: 7
        }
      },
      "44": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 76,
          column: 115
        }
      },
      "45": {
        start: {
          line: 79,
          column: 22
        },
        end: {
          line: 79,
          column: 51
        }
      },
      "46": {
        start: {
          line: 80,
          column: 21
        },
        end: {
          line: 80,
          column: 66
        }
      },
      "47": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 81,
          column: 71
        }
      },
      "48": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 88,
          column: 7
        }
      },
      "49": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 87,
          column: 30
        }
      },
      "50": {
        start: {
          line: 90,
          column: 22
        },
        end: {
          line: 90,
          column: 45
        }
      },
      "51": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 94,
          column: 7
        }
      },
      "52": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 25
        }
      },
      "53": {
        start: {
          line: 96,
          column: 6
        },
        end: {
          line: 96,
          column: 93
        }
      },
      "54": {
        start: {
          line: 101,
          column: 21
        },
        end: {
          line: 101,
          column: 35
        }
      },
      "55": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 102,
          column: 88
        }
      },
      "56": {
        start: {
          line: 105,
          column: 2
        },
        end: {
          line: 105,
          column: 26
        }
      },
      "57": {
        start: {
          line: 108,
          column: 0
        },
        end: {
          line: 108,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 23
          },
          end: {
            line: 21,
            column: 24
          }
        },
        loc: {
          start: {
            line: 21,
            column: 35
          },
          end: {
            line: 106,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "JsonSchemaParser",
        decl: {
          start: {
            line: 22,
            column: 11
          },
          end: {
            line: 22,
            column: 27
          }
        },
        loc: {
          start: {
            line: 22,
            column: 30
          },
          end: {
            line: 28,
            column: 3
          }
        },
        line: 22
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 91
          },
          end: {
            line: 23,
            column: 92
          }
        },
        loc: {
          start: {
            line: 23,
            column: 103
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "parseSchema",
        decl: {
          start: {
            line: 32,
            column: 20
          },
          end: {
            line: 32,
            column: 31
          }
        },
        loc: {
          start: {
            line: 32,
            column: 40
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 32
      },
      "4": {
        name: "parseSubSchemas",
        decl: {
          start: {
            line: 41,
            column: 20
          },
          end: {
            line: 41,
            column: 35
          }
        },
        loc: {
          start: {
            line: 41,
            column: 38
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 41
      },
      "5": {
        name: "createComponent",
        decl: {
          start: {
            line: 70,
            column: 20
          },
          end: {
            line: 70,
            column: 35
          }
        },
        loc: {
          start: {
            line: 70,
            column: 44
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 70
      },
      "6": {
        name: "resolveComponent",
        decl: {
          start: {
            line: 85,
            column: 20
          },
          end: {
            line: 85,
            column: 36
          }
        },
        loc: {
          start: {
            line: 85,
            column: 43
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 85
      },
      "7": {
        name: "resolveComponentChildren",
        decl: {
          start: {
            line: 100,
            column: 20
          },
          end: {
            line: 100,
            column: 44
          }
        },
        loc: {
          start: {
            line: 100,
            column: 52
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 100
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 23,
            column: 76
          },
          end: {
            line: 23,
            column: 88
          }
        }, {
          start: {
            line: 23,
            column: 91
          },
          end: {
            line: 25,
            column: 5
          }
        }],
        line: 23
      },
      "1": {
        loc: {
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 23,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 23,
            column: 23
          },
          end: {
            line: 23,
            column: 43
          }
        }, {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 23,
            column: 73
          }
        }],
        line: 23
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 35,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 35,
            column: 7
          }
        }, {
          start: {
            line: 33,
            column: 6
          },
          end: {
            line: 35,
            column: 7
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 76
          },
          end: {
            line: 42,
            column: 88
          }
        }, {
          start: {
            line: 42,
            column: 91
          },
          end: {
            line: 42,
            column: 93
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 73
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 23
          },
          end: {
            line: 42,
            column: 43
          }
        }, {
          start: {
            line: 42,
            column: 47
          },
          end: {
            line: 42,
            column: 73
          }
        }],
        line: 42
      },
      "5": {
        loc: {
          start: {
            line: 46,
            column: 96
          },
          end: {
            line: 46,
            column: 193
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 107
          },
          end: {
            line: 46,
            column: 116
          }
        }, {
          start: {
            line: 46,
            column: 119
          },
          end: {
            line: 46,
            column: 193
          }
        }],
        line: 46
      },
      "6": {
        loc: {
          start: {
            line: 46,
            column: 129
          },
          end: {
            line: 46,
            column: 190
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 46,
            column: 160
          },
          end: {
            line: 46,
            column: 175
          }
        }, {
          start: {
            line: 46,
            column: 178
          },
          end: {
            line: 46,
            column: 190
          }
        }],
        line: 46
      },
      "7": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }],
        line: 49
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 10
          },
          end: {
            line: 50,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 10
          },
          end: {
            line: 50,
            column: 44
          }
        }, {
          start: {
            line: 50,
            column: 10
          },
          end: {
            line: 50,
            column: 44
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 54,
            column: 10
          },
          end: {
            line: 54,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 10
          },
          end: {
            line: 54,
            column: 29
          }
        }, {
          start: {
            line: 54,
            column: 10
          },
          end: {
            line: 54,
            column: 29
          }
        }],
        line: 54
      },
      "10": {
        loc: {
          start: {
            line: 59,
            column: 27
          },
          end: {
            line: 59,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 59,
            column: 27
          },
          end: {
            line: 59,
            column: 43
          }
        }, {
          start: {
            line: 59,
            column: 47
          },
          end: {
            line: 59,
            column: 49
          }
        }],
        line: 59
      },
      "11": {
        loc: {
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 60,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 60,
            column: 51
          }
        }, {
          start: {
            line: 60,
            column: 55
          },
          end: {
            line: 60,
            column: 68
          }
        }],
        line: 60
      },
      "12": {
        loc: {
          start: {
            line: 75,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        }, {
          start: {
            line: 75,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        }],
        line: 75
      },
      "13": {
        loc: {
          start: {
            line: 80,
            column: 21
          },
          end: {
            line: 80,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 21
          },
          end: {
            line: 80,
            column: 25
          }
        }, {
          start: {
            line: 80,
            column: 29
          },
          end: {
            line: 80,
            column: 66
          }
        }],
        line: 80
      },
      "14": {
        loc: {
          start: {
            line: 86,
            column: 6
          },
          end: {
            line: 88,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 6
          },
          end: {
            line: 88,
            column: 7
          }
        }, {
          start: {
            line: 86,
            column: 6
          },
          end: {
            line: 88,
            column: 7
          }
        }],
        line: 86
      },
      "15": {
        loc: {
          start: {
            line: 86,
            column: 10
          },
          end: {
            line: 86,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 10
          },
          end: {
            line: 86,
            column: 52
          }
        }, {
          start: {
            line: 86,
            column: 56
          },
          end: {
            line: 86,
            column: 97
          }
        }],
        line: 86
      },
      "16": {
        loc: {
          start: {
            line: 92,
            column: 6
          },
          end: {
            line: 94,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 6
          },
          end: {
            line: 94,
            column: 7
          }
        }, {
          start: {
            line: 92,
            column: 6
          },
          end: {
            line: 94,
            column: 7
          }
        }],
        line: 92
      },
      "17": {
        loc: {
          start: {
            line: 102,
            column: 13
          },
          end: {
            line: 102,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 102,
            column: 49
          },
          end: {
            line: 102,
            column: 75
          }
        }, {
          start: {
            line: 102,
            column: 78
          },
          end: {
            line: 102,
            column: 87
          }
        }],
        line: 102
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_2j0ttpri8g.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

var _classCallCheck2 =
/* istanbul ignore next */
(cov_2j0ttpri8g.s[1]++, _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck")));

var _createClass2 =
/* istanbul ignore next */
(cov_2j0ttpri8g.s[2]++, _interopRequireDefault(require("@babel/runtime/helpers/createClass")));

/* istanbul ignore next */
cov_2j0ttpri8g.s[3]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
var tslib_1 =
/* istanbul ignore next */
(cov_2j0ttpri8g.s[4]++, require("tslib"));
var react_1 =
/* istanbul ignore next */
(cov_2j0ttpri8g.s[5]++, tslib_1.__importDefault(require("react")));
var lodash_isnil_1 =
/* istanbul ignore next */
(cov_2j0ttpri8g.s[6]++, tslib_1.__importDefault(require("lodash.isnil")));
var lodash_isstring_1 =
/* istanbul ignore next */
(cov_2j0ttpri8g.s[7]++, tslib_1.__importDefault(require("lodash.isstring")));
var JsonSchemaParser =
/* istanbul ignore next */
(cov_2j0ttpri8g.s[8]++, function () {
  /* istanbul ignore next */
  cov_2j0ttpri8g.f[0]++;

  function JsonSchemaParser() {
    /* istanbul ignore next */
    cov_2j0ttpri8g.f[1]++;
    var getComponent =
    /* istanbul ignore next */
    (cov_2j0ttpri8g.s[9]++,
    /* istanbul ignore next */
    (cov_2j0ttpri8g.b[1][0]++, arguments.length > 0) &&
    /* istanbul ignore next */
    (cov_2j0ttpri8g.b[1][1]++, arguments[0] !== undefined) ?
    /* istanbul ignore next */
    (cov_2j0ttpri8g.b[0][0]++, arguments[0]) :
    /* istanbul ignore next */
    (cov_2j0ttpri8g.b[0][1]++, function () {
      /* istanbul ignore next */
      cov_2j0ttpri8g.f[2]++;
      cov_2j0ttpri8g.s[10]++;
      return null;
    }));

    /* istanbul ignore next */
    cov_2j0ttpri8g.s[11]++;
    (0, _classCallCheck2.default)(this, JsonSchemaParser);

    /* istanbul ignore next */
    cov_2j0ttpri8g.s[12]++;
    this.getComponent = getComponent;
  }

  /* istanbul ignore next */
  cov_2j0ttpri8g.s[13]++;
  (0, _createClass2.default)(JsonSchemaParser, [{
    key: "parseSchema",
    value: function parseSchema(schema) {
      /* istanbul ignore next */
      cov_2j0ttpri8g.f[3]++;
      cov_2j0ttpri8g.s[14]++;

      if (Array.isArray(schema)) {
        /* istanbul ignore next */
        cov_2j0ttpri8g.b[2][0]++;
        cov_2j0ttpri8g.s[15]++;
        return this.parseSubSchemas(schema);
      } else
      /* istanbul ignore next */
      {
        cov_2j0ttpri8g.b[2][1]++;
      }

      cov_2j0ttpri8g.s[16]++;
      return this.createComponent(schema);
    }
  }, {
    key: "parseSubSchemas",
    value: function parseSubSchemas() {
      /* istanbul ignore next */
      cov_2j0ttpri8g.f[4]++;
      var subSchemas =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[17]++,
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[4][0]++, arguments.length > 0) &&
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[4][1]++, arguments[0] !== undefined) ?
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[3][0]++, arguments[0]) :
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[3][1]++, []));
      var Components =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[18]++, []);
      var index =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[19]++, 0);

      /* istanbul ignore next */
      cov_2j0ttpri8g.s[20]++;

      for (var _iterator =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[21]++, subSchemas), _isArray =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[22]++, Array.isArray(_iterator)), _i =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[23]++, 0), _iterator =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[24]++, _isArray ?
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[5][0]++, _iterator) :
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[5][1]++, _iterator[typeof Symbol === "function" ?
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[6][0]++, Symbol.iterator) :
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[6][1]++, "@@iterator")]()));;) {
        var _ref;

        /* istanbul ignore next */
        cov_2j0ttpri8g.s[25]++;

        if (_isArray) {
          /* istanbul ignore next */
          cov_2j0ttpri8g.b[7][0]++;
          cov_2j0ttpri8g.s[26]++;

          if (_i >= _iterator.length) {
            /* istanbul ignore next */
            cov_2j0ttpri8g.b[8][0]++;
            cov_2j0ttpri8g.s[27]++;
            break;
          } else
          /* istanbul ignore next */
          {
            cov_2j0ttpri8g.b[8][1]++;
          }

          cov_2j0ttpri8g.s[28]++;
          _ref = _iterator[_i++];
        } else {
          /* istanbul ignore next */
          cov_2j0ttpri8g.b[7][1]++;
          cov_2j0ttpri8g.s[29]++;
          _i = _iterator.next();

          /* istanbul ignore next */
          cov_2j0ttpri8g.s[30]++;

          if (_i.done) {
            /* istanbul ignore next */
            cov_2j0ttpri8g.b[9][0]++;
            cov_2j0ttpri8g.s[31]++;
            break;
          } else
          /* istanbul ignore next */
          {
            cov_2j0ttpri8g.b[9][1]++;
          }

          cov_2j0ttpri8g.s[32]++;
          _ref = _i.value;
        }

        var _subSchema =
        /* istanbul ignore next */
        (cov_2j0ttpri8g.s[33]++, _ref);

        /* istanbul ignore next */
        cov_2j0ttpri8g.s[34]++;
        _subSchema.props =
        /* istanbul ignore next */
        (cov_2j0ttpri8g.b[10][0]++, _subSchema.props) ||
        /* istanbul ignore next */
        (cov_2j0ttpri8g.b[10][1]++, {});

        /* istanbul ignore next */
        cov_2j0ttpri8g.s[35]++;
        _subSchema.props.key =
        /* istanbul ignore next */
        (cov_2j0ttpri8g.b[11][0]++, _subSchema.props.key) ||
        /* istanbul ignore next */
        (cov_2j0ttpri8g.b[11][1]++, String(index));
        var Component =
        /* istanbul ignore next */
        (cov_2j0ttpri8g.s[36]++, this.parseSchema(_subSchema));

        /* istanbul ignore next */
        cov_2j0ttpri8g.s[37]++;
        Components.push(Component);

        /* istanbul ignore next */
        cov_2j0ttpri8g.s[38]++;
        index++;
      }

      /* istanbul ignore next */
      cov_2j0ttpri8g.s[39]++;
      return Components;
    }
  }, {
    key: "createComponent",
    value: function createComponent(schema) {
      /* istanbul ignore next */
      cov_2j0ttpri8g.f[5]++;
      var text =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[40]++, schema.text),
          props =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[41]++, schema.props),
          component =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[42]++, schema.component);

      /* istanbul ignore next */
      cov_2j0ttpri8g.s[43]++;

      if (lodash_isnil_1.default(component)) {
        /* istanbul ignore next */
        cov_2j0ttpri8g.b[12][0]++;
        cov_2j0ttpri8g.s[44]++;
        throw Error('Could not parse React JSON Schema. Reason: "component" property is required, but not given.');
      } else
      /* istanbul ignore next */
      {
        cov_2j0ttpri8g.b[12][1]++;
      }

      var Component =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[45]++, this.resolveComponent(schema));
      var Children =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[46]++,
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[13][0]++, text) ||
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[13][1]++, this.resolveComponentChildren(schema)));

      /* istanbul ignore next */
      cov_2j0ttpri8g.s[47]++;
      return react_1.default.createElement(Component, props, Children);
    }
  }, {
    key: "resolveComponent",
    value: function resolveComponent(node) {
      /* istanbul ignore next */
      cov_2j0ttpri8g.f[6]++;
      cov_2j0ttpri8g.s[48]++;

      if (
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[15][0]++, !lodash_isstring_1.default(node.component)) &&
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[15][1]++, node.component === Object(node.component))) {
        /* istanbul ignore next */
        cov_2j0ttpri8g.b[14][0]++;
        cov_2j0ttpri8g.s[49]++;
        return node.component;
      } else
      /* istanbul ignore next */
      {
        cov_2j0ttpri8g.b[14][1]++;
      }

      var Component =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[50]++, this.getComponent(node));

      /* istanbul ignore next */
      cov_2j0ttpri8g.s[51]++;

      if (Component) {
        /* istanbul ignore next */
        cov_2j0ttpri8g.b[16][0]++;
        cov_2j0ttpri8g.s[52]++;
        return Component;
      } else
      /* istanbul ignore next */
      {
        cov_2j0ttpri8g.b[16][1]++;
      }

      cov_2j0ttpri8g.s[53]++;
      throw Error('Could not parse React JSON Schema. Reason: Could not resolve component.');
    }
  }, {
    key: "resolveComponentChildren",
    value: function resolveComponentChildren(_ref2) {
      /* istanbul ignore next */
      cov_2j0ttpri8g.f[7]++;
      var children =
      /* istanbul ignore next */
      (cov_2j0ttpri8g.s[54]++, _ref2.children);

      /* istanbul ignore next */
      cov_2j0ttpri8g.s[55]++;
      return !lodash_isnil_1.default(children) ?
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[17][0]++, this.parseSchema(children)) :
      /* istanbul ignore next */
      (cov_2j0ttpri8g.b[17][1]++, undefined);
    }
  }]);

  /* istanbul ignore next */
  cov_2j0ttpri8g.s[56]++;
  return JsonSchemaParser;
}());

/* istanbul ignore next */
cov_2j0ttpri8g.s[57]++;
exports.JsonSchemaParser = JsonSchemaParser;