15e2ad5b12edc78f863ca1d3c73c14de
"use strict";

/* istanbul ignore next */
var cov_il92y2djs = function () {
  var path = "/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/JsonForm.tsx";
  var hash = "611f50027aedd905cac83892ed69a0e7071b3e9b";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/JsonForm.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 81
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "3": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 11,
          column: 30
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "5": {
        start: {
          line: 15,
          column: 13
        },
        end: {
          line: 15,
          column: 38
        }
      },
      "6": {
        start: {
          line: 17,
          column: 13
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "7": {
        start: {
          line: 19,
          column: 19
        },
        end: {
          line: 19,
          column: 42
        }
      },
      "8": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 55
        }
      },
      "9": {
        start: {
          line: 23,
          column: 23
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "10": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 27
        }
      },
      "11": {
        start: {
          line: 26,
          column: 15
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "12": {
        start: {
          line: 27,
          column: 13
        },
        end: {
          line: 27,
          column: 47
        }
      },
      "13": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 31,
          column: 7
        }
      },
      "14": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 57,
          column: 2
        }
      },
      "15": {
        start: {
          line: 35,
          column: 13
        },
        end: {
          line: 35,
          column: 23
        }
      },
      "16": {
        start: {
          line: 36,
          column: 15
        },
        end: {
          line: 36,
          column: 27
        }
      },
      "17": {
        start: {
          line: 37,
          column: 15
        },
        end: {
          line: 37,
          column: 27
        }
      },
      "18": {
        start: {
          line: 39,
          column: 15
        },
        end: {
          line: 39,
          column: 28
        }
      },
      "19": {
        start: {
          line: 40,
          column: 13
        },
        end: {
          line: 40,
          column: 47
        }
      },
      "20": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 46,
          column: 3
        }
      },
      "21": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 45,
          column: 14
        }
      },
      "22": {
        start: {
          line: 48,
          column: 2
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "23": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 14
        }
      }
    },
    fnMap: {
      "0": {
        name: "JsonFormInternal",
        decl: {
          start: {
            line: 23,
            column: 32
          },
          end: {
            line: 23,
            column: 48
          }
        },
        loc: {
          start: {
            line: 23,
            column: 56
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 23
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 34,
            column: 19
          },
          end: {
            line: 34,
            column: 20
          }
        },
        loc: {
          start: {
            line: 34,
            column: 36
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 34
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 52,
            column: 5
          },
          end: {
            line: 52,
            column: 6
          }
        },
        loc: {
          start: {
            line: 52,
            column: 31
          },
          end: {
            line: 56,
            column: 3
          }
        },
        line: 52
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 42,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        }, {
          start: {
            line: 42,
            column: 2
          },
          end: {
            line: 46,
            column: 3
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_il92y2djs.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

var _extends2 =
/* istanbul ignore next */
(cov_il92y2djs.s[1]++, _interopRequireDefault(require("@babel/runtime/helpers/extends")));

/* istanbul ignore next */
cov_il92y2djs.s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
var tslib_1 =
/* istanbul ignore next */
(cov_il92y2djs.s[3]++, require("tslib"));
var formik_1 =
/* istanbul ignore next */
(cov_il92y2djs.s[4]++, require("formik"));
var core_1 =
/* istanbul ignore next */
(cov_il92y2djs.s[5]++, require("@bluebase/core"));
var Form_1 =
/* istanbul ignore next */
(cov_il92y2djs.s[6]++, require("./Form"));
var FormFields_1 =
/* istanbul ignore next */
(cov_il92y2djs.s[7]++, require("./FormFields"));
var react_1 =
/* istanbul ignore next */
(cov_il92y2djs.s[8]++, tslib_1.__importDefault(require("react")));

/* istanbul ignore next */
cov_il92y2djs.s[9]++;

var JsonFormInternal = function JsonFormInternal(props) {
  /* istanbul ignore next */
  cov_il92y2djs.f[0]++;
  var schema =
  /* istanbul ignore next */
  (cov_il92y2djs.s[10]++, props.schema);
  var fields =
  /* istanbul ignore next */
  (cov_il92y2djs.s[11]++, schema.fields),
      rest =
  /* istanbul ignore next */
  (cov_il92y2djs.s[12]++, tslib_1.__rest(schema, ["fields"]));

  /* istanbul ignore next */
  cov_il92y2djs.s[13]++;
  return react_1.default.createElement(formik_1.Formik, (0, _extends2.default)({}, rest), react_1.default.createElement(Form_1.Form, null, react_1.default.createElement(FormFields_1.FormFields, {
    fields: fields
  })));
};

/* istanbul ignore next */
cov_il92y2djs.s[14]++;

exports.JsonForm = function (props) {
  /* istanbul ignore next */
  cov_il92y2djs.f[1]++;
  var args =
  /* istanbul ignore next */
  (cov_il92y2djs.s[15]++, props.args),
      filter =
  /* istanbul ignore next */
  (cov_il92y2djs.s[16]++, props.filter),
      schema =
  /* istanbul ignore next */
  (cov_il92y2djs.s[17]++, props.schema);
  var fields =
  /* istanbul ignore next */
  (cov_il92y2djs.s[18]++, schema.fields),
      rest =
  /* istanbul ignore next */
  (cov_il92y2djs.s[19]++, tslib_1.__rest(schema, ["fields"]));

  /* istanbul ignore next */
  cov_il92y2djs.s[20]++;

  if (!filter) {
    /* istanbul ignore next */
    cov_il92y2djs.b[0][0]++;
    cov_il92y2djs.s[21]++;
    return react_1.default.createElement(JsonFormInternal, (0, _extends2.default)({
      schema: schema
    }, rest));
  } else
  /* istanbul ignore next */
  {
    cov_il92y2djs.b[0][1]++;
  }

  cov_il92y2djs.s[22]++;
  return react_1.default.createElement(core_1.BlueBaseFilter, {
    filter: filter,
    value: schema,
    args: args
  }, function (filteredSchema) {
    /* istanbul ignore next */
    cov_il92y2djs.f[2]++;
    cov_il92y2djs.s[23]++;
    return react_1.default.createElement(JsonFormInternal, (0, _extends2.default)({
      schema: filteredSchema
    }, rest));
  });
};