0a68e83166d78c9accaee8e0b6477b53
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var formik_1 = require("formik");

var components_1 = require("@bluebase/components");

var react_1 = tslib_1.__importDefault(require("react"));

var BaseFormField = components_1.getComponent('BaseFormField');

exports.FormSwitchInput = function (_a) {
  var type = _a.type,
      props = tslib_1.__rest(_a, ["type"]);

  return react_1.default.createElement(formik_1.Field, (0, _extends2.default)({}, props), function (_ref) {
    var field = _ref.field,
        form = _ref.form;
    var name = props.name;
    var k = props.label;
    console.log('before', k);
    var k2 = formik_1.getIn(form.values, k);
    console.log('after', k2);
    var value = formik_1.getIn(form.values, name);
    console.log('valll', value);
    var inputProps = (0, _extends2.default)({
      labelPlacement: 'start'
    }, props, {
      checked: Boolean(value),
      onValueChange: function onValueChange(_value, checked) {
        form.setFieldValue(field.name, checked);
        value ? props.onValueChange ? props.onValueChange(value, checked) : null : props.onValueChange ? props.onValueChange(value, checked) : null;
      }
    });
    return react_1.default.createElement(BaseFormField, (0, _extends2.default)({
      MainComponent: components_1.Switch
    }, inputProps));
  });
};

exports.FormSwitchInput.defaultProps = {};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vRmllbGRzL0Zvcm1Td2l0Y2hJbnB1dC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxRQUFBLEdBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBQTs7QUFDQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsc0JBQUEsQ0FBQTs7QUFFQSxJQUFBLE9BQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFPQSxJQUFNLGFBQWEsR0FBRyxZQUFBLENBQUEsWUFBQSxDQUFpQyxlQUFqQyxDQUF0Qjs7QUFFYSxPQUFBLENBQUEsZUFBQSxHQUFrQixVQUFDLEVBQUQsRUFBNkM7QUFBNUMsTUFBRSxJQUFGLEdBQU0sRUFBTixDQUFFLElBQUY7QUFBQSxNQUFRLEtBQVIsR0FBUSxPQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsRUFBQSxDQUFBLE1BQUEsQ0FBQSxDQUFSOztBQUUvQixTQUNDLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLFFBQUEsQ0FBQSxLQUFELEVBQU0sdUJBQUEsRUFBQSxFQUFLLEtBQUwsQ0FBTixFQUNDLGdCQUEwQjtBQUFBLFFBQXZCLEtBQXVCLFFBQXZCLEtBQXVCO0FBQUEsUUFBaEIsSUFBZ0IsUUFBaEIsSUFBZ0I7QUFFMUIsUUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQW5CO0FBQ0EsUUFBTSxDQUFDLEdBQU8sS0FBSyxDQUFDLEtBQXBCO0FBRUEsSUFBQSxPQUFPLENBQUMsR0FBUixDQUFZLFFBQVosRUFBcUIsQ0FBckI7QUFDQSxRQUFNLEVBQUUsR0FBRSxRQUFBLENBQUEsS0FBQSxDQUFNLElBQUksQ0FBQyxNQUFYLEVBQW1CLENBQW5CLENBQVY7QUFDQSxJQUFBLE9BQU8sQ0FBQyxHQUFSLENBQVksT0FBWixFQUFvQixFQUFwQjtBQUlBLFFBQU0sS0FBSyxHQUFHLFFBQUEsQ0FBQSxLQUFBLENBQU0sSUFBSSxDQUFDLE1BQVgsRUFBbUIsSUFBbkIsQ0FBZDtBQUNBLElBQUEsT0FBTyxDQUFDLEdBQVIsQ0FBWSxPQUFaLEVBQW9CLEtBQXBCO0FBQ0EsUUFBTSxVQUFVLEdBQUEsdUJBQUE7QUFDZixNQUFBLGNBQWMsRUFBRTtBQURELEtBQUEsRUFFWixLQUZZLEVBRVA7QUFDUixNQUFBLE9BQU8sRUFBRSxPQUFPLENBQUMsS0FBRCxDQURSO0FBRVIsTUFBQSxhQUFhLEVBQUUsdUJBQUMsTUFBRCxFQUFjLE9BQWQsRUFBa0M7QUFDaEQsUUFBQSxJQUFJLENBQUMsYUFBTCxDQUFtQixLQUFLLENBQUMsSUFBekIsRUFBK0IsT0FBL0I7QUFFQSxRQUFBLEtBQUssR0FBRyxLQUFLLENBQUMsYUFBTixHQUFzQixLQUFLLENBQUMsYUFBTixDQUFvQixLQUFwQixFQUEwQixPQUExQixDQUF0QixHQUF5RCxJQUE1RCxHQUFzRSxLQUFLLENBQUMsYUFBTixHQUFzQixLQUFLLENBQUMsYUFBTixDQUFvQixLQUFwQixFQUEwQixPQUExQixDQUF0QixHQUEwRCxJQUFySTtBQWlCQTtBQXRCTyxLQUZPLENBQWhCO0FBMkJBLFdBQVEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsYUFBRCxFQUFjLHVCQUFBO0FBQUMsTUFBQSxhQUFhLEVBQUUsWUFBQSxDQUFBO0FBQWhCLEtBQUEsRUFBNEIsVUFBNUIsQ0FBZCxDQUFSO0FBQ0EsR0ExQ0QsQ0FERDtBQThDQSxDQWhEWTs7QUFrRGIsT0FBQSxDQUFBLGVBQUEsQ0FBZ0IsWUFBaEIsR0FBK0IsRUFBL0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGaWVsZCwgZ2V0SW4gfSBmcm9tICdmb3JtaWsnO1xuaW1wb3J0IHsgU3dpdGNoLCBTd2l0Y2hQcm9wcywgZ2V0Q29tcG9uZW50IH0gZnJvbSAnQGJsdWViYXNlL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgQmFzZUZvcm1GaWVsZFByb3BzIH0gZnJvbSAnLi4vQmFzZUZvcm1GaWVsZCc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEZvcm1Td2l0Y2hJbnB1dFByb3BzIGV4dGVuZHMgU3dpdGNoUHJvcHMge1xuXHR0eXBlOiAnc3dpdGNoJyxcblx0bmFtZTogc3RyaW5nLFxufVxuXG5jb25zdCBCYXNlRm9ybUZpZWxkID0gZ2V0Q29tcG9uZW50PEJhc2VGb3JtRmllbGRQcm9wcz4oJ0Jhc2VGb3JtRmllbGQnKTtcblxuZXhwb3J0IGNvbnN0IEZvcm1Td2l0Y2hJbnB1dCA9ICh7IHR5cGUsIC4uLnByb3BzIH06IEZvcm1Td2l0Y2hJbnB1dFByb3BzKSA9PiB7XG5cblx0cmV0dXJuIChcblx0XHQ8RmllbGQgey4uLnByb3BzfT5cblx0XHR7KHsgZmllbGQsIGZvcm0gIH06IGFueSkgPT4ge1xuXG5cdFx0XHRjb25zdCBuYW1lID0gcHJvcHMubmFtZTtcblx0XHRcdGNvbnN0IGs6YW55ID0gcHJvcHMubGFiZWw7XG5cblx0XHRcdGNvbnNvbGUubG9nKCdiZWZvcmUnLGspXG5cdFx0XHRjb25zdCBrMj0gZ2V0SW4oZm9ybS52YWx1ZXMsIGspO1xuXHRcdFx0Y29uc29sZS5sb2coJ2FmdGVyJyxrMilcblxuXG5cblx0XHRcdGNvbnN0IHZhbHVlID0gZ2V0SW4oZm9ybS52YWx1ZXMsIG5hbWUpO1xuXHRcdFx0Y29uc29sZS5sb2coJ3ZhbGxsJyx2YWx1ZSlcblx0XHRcdGNvbnN0IGlucHV0UHJvcHM6IGFueSA9IHtcblx0XHRcdFx0bGFiZWxQbGFjZW1lbnQ6ICdzdGFydCcsXG5cdFx0XHRcdC4uLnByb3BzLFxuXHRcdFx0XHRjaGVja2VkOiBCb29sZWFuKHZhbHVlKSxcblx0XHRcdFx0b25WYWx1ZUNoYW5nZTogKF92YWx1ZTogYW55LCBjaGVja2VkOiBib29sZWFuKSA9PiB7XG5cdFx0XHRcdFx0Zm9ybS5zZXRGaWVsZFZhbHVlKGZpZWxkLm5hbWUsIGNoZWNrZWQpO1xuXHRcdFx0XHRcblx0XHRcdFx0XHR2YWx1ZSA/IHByb3BzLm9uVmFsdWVDaGFuZ2UgPyBwcm9wcy5vblZhbHVlQ2hhbmdlKHZhbHVlLGNoZWNrZWQpOm51bGwgOiAgIChwcm9wcy5vblZhbHVlQ2hhbmdlID8gcHJvcHMub25WYWx1ZUNoYW5nZSh2YWx1ZSxjaGVja2VkKSA6bnVsbCkgXG5cblx0XHRcdFx0XHQvLyBpZiAodmFsdWUpe1xuXHRcdFx0XHRcdC8vIFx0aWYocHJvcHMub25WYWx1ZUNoYW5nZSl7XG5cdFx0XHRcdFx0Ly8gXHRcdHByb3BzLm9uVmFsdWVDaGFuZ2UodmFsdWUsY2hlY2tlZClcblx0XHRcdFx0XHQvLyBcdH1cblx0XHRcdFx0XHQvLyB9XG5cdFx0XHRcdFx0Ly8gZWxzZSBpZiAoIXZhbHVlKXtcblx0XHRcdFx0XHQvLyBcdGlmKHByb3BzLm9uVmFsdWVDaGFuZ2Upe1xuXHRcdFx0XHRcdC8vIFx0XHRwcm9wcy5vblZhbHVlQ2hhbmdlKHZhbHVlLGNoZWNrZWQpXG5cdFx0XHRcdFx0Ly8gXHR9XG5cdFx0XHRcdFx0Ly8gfVxuXHRcdFx0XHRcdC8vIGlmICh2YWwpe1xuXHRcdFx0XHRcdC8vIFx0aWYocHJvcHMub25WYWx1ZUNoYW5nZSl7XG5cdFx0XHRcdFx0Ly8gXHRcdHByb3BzLm9uVmFsdWVDaGFuZ2UodmFsdWUsY2hlY2tlZClcblx0XHRcdFx0XHQvLyBcdH1cblx0XHRcdFx0XHQvLyB9XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRcdHJldHVybiAoPEJhc2VGb3JtRmllbGQgTWFpbkNvbXBvbmVudD17U3dpdGNofSB7Li4uaW5wdXRQcm9wc30gLz4pO1xuXHRcdH19XG5cdDwvRmllbGQ+XG5cdCk7XG59O1xuXG5Gb3JtU3dpdGNoSW5wdXQuZGVmYXVsdFByb3BzID0ge1xufTtcbiJdfQ==