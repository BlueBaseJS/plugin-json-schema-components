{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/FormCheckboxInput.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAOA,IAAM,aAAa,GAAG,YAAA,CAAA,YAAA,CAAiC,eAAjC,CAAtB;;AAEa,OAAA,CAAA,iBAAA,GAAoB,UAAC,KAAD,EAAkC;AAElE,SACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAA,CAAA,KAAD,EAAM,uBAAA,EAAA,EAAK,KAAL,CAAN,EACC,gBAAyB;AAAA,QAAtB,KAAsB,QAAtB,KAAsB;AAAA,QAAf,IAAe,QAAf,IAAe;AAEzB,QAAM,IAAI,GAAG,KAAK,CAAC,IAAnB;AACA,QAAM,KAAK,GAAG,QAAA,CAAA,KAAA,CAAM,IAAI,CAAC,MAAX,EAAmB,IAAnB,CAAd;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAkB,IAAlB;AACA,QAAM,UAAU,GAAA,uBAAA,EAAA,EACZ,KADY,EACP;AACR,MAAA,OAAO,EAAE,OAAO,CAAC,KAAD,CADR;AAER,MAAA,aAAa,EAAE,uBAAC,MAAD,EAAc,OAAd,EAAkC;AAEhD,QAAA,IAAI,CAAC,aAAL,CAAmB,KAAK,CAAC,IAAzB,EAA+B,OAA/B;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,WAAZ,EAAyB,KAAK,CAAC,aAA/B;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,KAArB;AAED,QAAA,KAAK,KAAK,IAAV,IAAkB,KAAK,KAAK,KAA5B,GACC,KAAK,CAAC,aAAN,GACE,KAAK,CAAC,aAAN,CAAoB,KAApB,EAA0B,OAA1B,CADF,GACqC,IAFtC,GAE2C,IAF3C;AAQC;AAhBO,KADO,CAAhB;AAoBA,WAAQ,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,aAAD,EAAc,uBAAA;AAAC,MAAA,aAAa,EAAE,YAAA,CAAA;AAAhB,KAAA,EAA8B,UAA9B,CAAd,CAAR;AACA,GA3BD,CADD;AA+BA,CAjCY;;AAmCb,OAAA,CAAA,iBAAA,CAAkB,YAAlB,GAAiC,EAAjC","sourcesContent":["import { Checkbox, CheckboxProps, getComponent } from '@bluebase/components';\nimport { Field, getIn } from 'formik';\nimport { BaseFormFieldProps } from '../BaseFormField';\nimport React from 'react';\n\nexport interface FormCheckboxInputProps extends CheckboxProps {\n\ttype: 'checkbox',\n\tname: string,\n}\n\nconst BaseFormField = getComponent<BaseFormFieldProps>('BaseFormField');\n\nexport const FormCheckboxInput = (props: FormCheckboxInputProps) => {\n\n\treturn (\n\t\t<Field {...props}>\n\t\t{({ field, form }: any) => {\n\n\t\t\tconst name = props.name;\n\t\t\tconst value = getIn(form.values, name);\n\t\t\tconsole.log('abc',name);\n\t\t\tconst inputProps = {\n\t\t\t\t...props,\n\t\t\t\tchecked: Boolean(value),\n\t\t\t\tonValueChange: (_value: any, checked: boolean) => \n\t\t\t\t{\n\t\t\t\t\tform.setFieldValue(field.name, checked)\n\t\t\t\t\tconsole.log('Funjdkjnk', props.onValueChange)\n\t\t\t\t\tconsole.log('value', value)\n\n\t\t\t\tvalue === true && value === false ? \n\t\t\t\t\tprops.onValueChange ?\n\t\t\t\t\t  props.onValueChange(value,checked):null:null\n\t\t\t\t\t  \n\t\t\t\t//  :value === false ?\n\t\t\t\t// \tprops.onValueChange ?\n\t\t\t\t// \t   props.onValueChange(value,checked) :\n\t\t\t\t// \t\t  https://github.com/Muzzamil75/Bill-manager-Exponull:null\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn (<BaseFormField MainComponent={Checkbox} {...inputProps} />);\n\t\t}}\n\t</Field>\n\t);\n};\n\nFormCheckboxInput.defaultProps = {\n};\n"]}