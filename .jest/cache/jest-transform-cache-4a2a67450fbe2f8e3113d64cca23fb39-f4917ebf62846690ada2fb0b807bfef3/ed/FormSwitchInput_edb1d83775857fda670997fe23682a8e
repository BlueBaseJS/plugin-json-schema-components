8ca559ffb0d3ffa2c4b13c182d6b5057
"use strict";

/* istanbul ignore next */
var cov_e4d7614tl = function () {
  var path = "/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/FormSwitchInput.tsx";
  var hash = "dfad4522d510e5bc0c962290b938090299df559c";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/FormSwitchInput.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 81
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "3": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 11,
          column: 30
        }
      },
      "4": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 32
        }
      },
      "5": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 50
        }
      },
      "6": {
        start: {
          line: 17,
          column: 14
        },
        end: {
          line: 17,
          column: 55
        }
      },
      "7": {
        start: {
          line: 19,
          column: 20
        },
        end: {
          line: 19,
          column: 62
        }
      },
      "8": {
        start: {
          line: 21,
          column: 0
        },
        end: {
          line: 45,
          column: 2
        }
      },
      "9": {
        start: {
          line: 22,
          column: 13
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "10": {
        start: {
          line: 23,
          column: 14
        },
        end: {
          line: 23,
          column: 42
        }
      },
      "11": {
        start: {
          line: 25,
          column: 2
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "12": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 26
        }
      },
      "13": {
        start: {
          line: 27,
          column: 15
        },
        end: {
          line: 27,
          column: 24
        }
      },
      "14": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 28,
          column: 25
        }
      },
      "15": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 29,
          column: 32
        }
      },
      "16": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 49
        }
      },
      "17": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "18": {
        start: {
          line: 32,
          column: 21
        },
        end: {
          line: 40,
          column: 6
        }
      },
      "19": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 48
        }
      },
      "20": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 148
        }
      },
      "21": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 20
        }
      },
      "22": {
        start: {
          line: 47,
          column: 0
        },
        end: {
          line: 47,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 21,
            column: 27
          }
        },
        loc: {
          start: {
            line: 21,
            column: 40
          },
          end: {
            line: 45,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 25,
            column: 90
          },
          end: {
            line: 25,
            column: 91
          }
        },
        loc: {
          start: {
            line: 25,
            column: 106
          },
          end: {
            line: 44,
            column: 3
          }
        },
        line: 25
      },
      "2": {
        name: "onValueChange",
        decl: {
          start: {
            line: 36,
            column: 30
          },
          end: {
            line: 36,
            column: 43
          }
        },
        loc: {
          start: {
            line: 36,
            column: 61
          },
          end: {
            line: 39,
            column: 7
          }
        },
        line: 36
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 147
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 80
          }
        }, {
          start: {
            line: 38,
            column: 83
          },
          end: {
            line: 38,
            column: 147
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 38,
            column: 16
          },
          end: {
            line: 38,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 38
          },
          end: {
            line: 38,
            column: 73
          }
        }, {
          start: {
            line: 38,
            column: 76
          },
          end: {
            line: 38,
            column: 80
          }
        }],
        line: 38
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 83
          },
          end: {
            line: 38,
            column: 147
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 38,
            column: 105
          },
          end: {
            line: 38,
            column: 140
          }
        }, {
          start: {
            line: 38,
            column: 143
          },
          end: {
            line: 38,
            column: 147
          }
        }],
        line: 38
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_e4d7614tl.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

var _extends2 =
/* istanbul ignore next */
(cov_e4d7614tl.s[1]++, _interopRequireDefault(require("@babel/runtime/helpers/extends")));

/* istanbul ignore next */
cov_e4d7614tl.s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
var tslib_1 =
/* istanbul ignore next */
(cov_e4d7614tl.s[3]++, require("tslib"));
var formik_1 =
/* istanbul ignore next */
(cov_e4d7614tl.s[4]++, require("formik"));
var components_1 =
/* istanbul ignore next */
(cov_e4d7614tl.s[5]++, require("@bluebase/components"));
var react_1 =
/* istanbul ignore next */
(cov_e4d7614tl.s[6]++, tslib_1.__importDefault(require("react")));
var BaseFormField =
/* istanbul ignore next */
(cov_e4d7614tl.s[7]++, components_1.getComponent('BaseFormField'));

/* istanbul ignore next */
cov_e4d7614tl.s[8]++;

exports.FormSwitchInput = function (_a) {
  /* istanbul ignore next */
  cov_e4d7614tl.f[0]++;
  var type =
  /* istanbul ignore next */
  (cov_e4d7614tl.s[9]++, _a.type),
      props =
  /* istanbul ignore next */
  (cov_e4d7614tl.s[10]++, tslib_1.__rest(_a, ["type"]));

  /* istanbul ignore next */
  cov_e4d7614tl.s[11]++;
  return react_1.default.createElement(formik_1.Field, (0, _extends2.default)({}, props), function (_ref) {
    /* istanbul ignore next */
    cov_e4d7614tl.f[1]++;
    var field =
    /* istanbul ignore next */
    (cov_e4d7614tl.s[12]++, _ref.field),
        form =
    /* istanbul ignore next */
    (cov_e4d7614tl.s[13]++, _ref.form);
    var name =
    /* istanbul ignore next */
    (cov_e4d7614tl.s[14]++, props.name);

    /* istanbul ignore next */
    cov_e4d7614tl.s[15]++;
    console.log('valllb', name);
    var value =
    /* istanbul ignore next */
    (cov_e4d7614tl.s[16]++, formik_1.getIn(form.values, name));

    /* istanbul ignore next */
    cov_e4d7614tl.s[17]++;
    console.log('valll', value);
    var inputProps =
    /* istanbul ignore next */
    (cov_e4d7614tl.s[18]++, (0, _extends2.default)({
      labelPlacement: 'start'
    }, props, {
      checked: Boolean(value),
      onValueChange: function onValueChange(_value, checked) {
        /* istanbul ignore next */
        cov_e4d7614tl.f[2]++;
        cov_e4d7614tl.s[19]++;
        form.setFieldValue(field.name, checked);

        /* istanbul ignore next */
        cov_e4d7614tl.s[20]++;
        value ?
        /* istanbul ignore next */
        (cov_e4d7614tl.b[0][0]++, props.onValueChange ?
        /* istanbul ignore next */
        (cov_e4d7614tl.b[1][0]++, props.onValueChange(value, checked)) :
        /* istanbul ignore next */
        (cov_e4d7614tl.b[1][1]++, null)) :
        /* istanbul ignore next */
        (cov_e4d7614tl.b[0][1]++, props.onValueChange ?
        /* istanbul ignore next */
        (cov_e4d7614tl.b[2][0]++, props.onValueChange(value, checked)) :
        /* istanbul ignore next */
        (cov_e4d7614tl.b[2][1]++, null));
      }
    }));

    /* istanbul ignore next */
    cov_e4d7614tl.s[21]++;
    return react_1.default.createElement(BaseFormField, (0, _extends2.default)({
      MainComponent: components_1.Switch
    }, inputProps));
  });
};

/* istanbul ignore next */
cov_e4d7614tl.s[22]++;
exports.FormSwitchInput.defaultProps = {};