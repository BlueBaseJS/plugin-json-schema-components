{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/FormPickerInput.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAQA,IAAM,aAAa,GAAG,YAAA,CAAA,YAAA,CAAiC,eAAjC,CAAtB;;AAEa,OAAA,CAAA,eAAA,GAAkB,UAAC,EAAD,EAAoD;AAAA,MAAjD,IAAiD,GAAtC,EAAsC,CAAjD,IAAiD;AAAA,MAA3C,KAA2C,GAAtC,EAAsC,CAA3C,KAA2C;AAAA,MAApC,KAAoC,GAApC,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,MAAA,EAAA,OAAA,CAAA,CAAoC;;AAElF,SACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAA,CAAA,KAAD,EAAM,uBAAA,EAAA,EAAK,KAAL,CAAN,EACC,gBAAyB;AAAA,QAAtB,KAAsB,QAAtB,KAAsB;AAAA,QAAf,IAAe,QAAf,IAAe;AAEzB,QAAM,UAAU,GAAA,uBAAA,EAAA,EACZ,KADY,EAEZ,KAFY,EAEP;AACR,MAAA,aAAa,EAAE,uBAAC,KAAD,EAAe;AAC9B,QAAA,IAAI,CAAC,aAAL,CAAmB,KAAK,CAAC,IAAzB,EAA+B,KAA/B,GAEA,CAAC,KAAD,GAAU,IAAV,GAAiB,KAAK,CAAC,aAAN,GAAsB,KAAK,CAAC,aAAN,CAAoB,KAAK,CAAC,IAA1B,EAA+B,KAA/B,CAAtB,GAA8D,IAF/E;AAGC;AALO,KAFO,CAAhB;AAUA,WACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,aAAD,EAAc,uBAAA;AAAC,MAAA,aAAa,EAAE,YAAA,CAAA;AAAhB,KAAA,EAA4B,UAA5B,CAAd,EACC,KAAK,CAAC,GAAN,CAAU,UAAA,CAAC;AAAA,aAAI,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,MAAA,CAAO,IAAR,EAAY,uBAAA;AAAC,QAAA,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,KAAH;AAAZ,OAAA,EAA2B,CAA3B,CAAZ,CAAJ;AAAA,KAAX,CADD,CADD;AAKA,GAlBD,CADD;AAsBA,CAxBY;;AA0Bb,OAAA,CAAA,eAAA,CAAgB,YAAhB,GAA+B,EAA/B","sourcesContent":["import { Picker, PickerItemProps, PickerProps, getComponent } from '@bluebase/components';\nimport { BaseFormFieldProps } from '../BaseFormField';\nimport { Field } from 'formik';\nimport React from 'react';\n\nexport interface FormPickerInputProps extends PickerProps {\n\ttype: 'picker',\n\tname: string,\n\titems: PickerItemProps[],\n}\n\nconst BaseFormField = getComponent<BaseFormFieldProps>('BaseFormField');\n\nexport const FormPickerInput = ({ type, items, ...props }: FormPickerInputProps) => {\n\n\treturn (\n\t\t<Field {...props}>\n\t\t{({ field, form }: any) => {\n\n\t\t\tconst inputProps: any = {\n\t\t\t\t...props,\n\t\t\t\t...field,\n\t\t\t\tonValueChange: (value: any) => {\n\t\t\t\tform.setFieldValue(field.name, value),\n\t\t\t\t//selectedValue: field.value,\n\t\t\t\t!value ?  null : props.onValueChange ? props.onValueChange(field.name,value) : null;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn (\n\t\t\t\t<BaseFormField MainComponent={Picker} {...inputProps}>\n\t\t\t\t{items.map(i => <Picker.Item key={String(i.value)} {...i} />)}\n\t\t\t\t</BaseFormField>\n\t\t\t);\n\t\t}}\n\t\t</Field>\n\t);\n};\n\nFormPickerInput.defaultProps = {\n};\n"]}