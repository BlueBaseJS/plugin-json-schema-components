{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/__tests__/FormActions.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlueBaseApp } from '@bluebase/core';\nimport { Formik } from 'formik';\nimport MaterialUIPlugin from '@bluebase/plugin-material-ui';\nimport Plugin from '../../../index';\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport { waitForElement } from 'enzyme-async-helpers';\nimport { getComponent } from '@bluebase/components';\nimport deepmerge from 'deepmerge';\n\n\nconst fieldProps = {\n\tdirection: 'left',\n\tname: 'form-actions',\n\ttype: 'actions',\n\n\tfields: [{\n\t\tname: 'reset',\n\t\ttype: 'reset',\n\t\ttitle:'babajee',\n\t\tnested : true,\n\n\t},\n\t {\n\t\tname: 'submit',\n\t\ttitle: 'Login',\n\t\ttype: 'submit',\n\t}\n]\n};\n\nconst initialValues = {\n};\n\n\ndescribe('FormActions', () => {\n\n\tit('should render all form fields in the schema', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst FormActions = getComponent('FormActions');\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormActions {...fieldProps as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormActions);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\tconst root: any = component.find('[testID=\"form-actions\"]').first().prop('style');\n\t\tconst rootStyles: any = deepmerge.all(root.filter((x: any) => !!x));\n\t\t const childStyles: any = component.find('FieldWrapper View').first().prop('style');\n\t\t// Check fields\n\t\texpect(rootStyles.justifyContent).toBe('flex-end');\n\t\t expect(childStyles.marginRight).toBe(16);\n\t\t\n\t});\n\n\n\tit('should render all form fields in the schema', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\t\tconst FormActions = getComponent('FormActions');\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormActions {...fieldProps as any} direction=\"left\" />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormActions);\n\n\t\t //expect(component).toMatchSnapshot();\n\n\t\tconst root: any = component.find('[testID=\"form-actions\"]').first().prop('style');\n\t\tconst rootStyles: any = deepmerge.all(root.filter((x: any) => !!x));\n\t\tconst childStyles: any = component.find('FieldWrapper View').first().prop('style');\n\n\t\t// Check fields\n\t\texpect(rootStyles.justifyContent).toBe('flex-start');\n\t\texpect(childStyles.marginLeft).toBe(16);\n\t});\n});\n"]}