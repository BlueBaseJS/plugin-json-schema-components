{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/__tests__/FormRadioGroupInput.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlueBaseApp } from '@bluebase/core';\nimport { FormRadioGroupInput } from '../FormRadioGroupInput';\nimport { Formik } from 'formik';\nimport MaterialUIPlugin from '@bluebase/plugin-material-ui';\nimport Plugin from '../../../index';\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport { waitForElement } from 'enzyme-async-helpers';\n\nconst fieldProps = {\n\tlabel: 'Language',\n\tname: 'lang',\n\ttype: 'radio-group',\n\n\titems: [{\n\t\tlabel: 'JavaScript',\n\t\tvalue: 'js'\n\t}, {\n\t\tlabel: 'Java',\n\t\tvalue: 'java'\n\t}]\n};\n\nconst initialValues = {\n\t'lang': 'js',\n};\n\n\ndescribe('FormRadioGroupInput', () => {\n\n\n\tit('should render a radio-group with value \"js\"', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormRadioGroupInput {...fieldProps as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormRadioGroupInput);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\texpect(component.find('RadioGroup').last().prop('name')).toBe('lang');\n\t\texpect(component.find('RadioGroup').last().prop('value')).toBe('js');\n\t});\n\n\tit('should update radio-group value from onValueChange callback', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormRadioGroupInput {...fieldProps as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormRadioGroupInput);\n\n\t\t// Initial state should be false\n\n\t\t// Check fields\n\t\texpect(component.find('RadioGroup').first().prop('name')).toBe('lang');\n\t\texpect(component.find('RadioGroup').first().prop('value')).toBe('js');\n\n\t\t// Update State\n\t\tconst onValueChange: any = component.find('RadioGroup').first().prop('onValueChange');\n\n\t\tonValueChange('java');\n\t\tcomponent.update();\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// New state should be true\n\t\texpect(component.find('RadioGroup').first().prop('name')).toBe('lang');\n\t\texpect(component.find('RadioGroup').first().prop('value')).toBe('java');\n\t});\n});\n"]}