82c766f0bcba61cf0696f43ad47d1a4f
"use strict";

/* istanbul ignore next */
var cov_qa4mzev9e = function () {
  var path = "/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/FormSubmitButton.tsx";
  var hash = "2062f57c454824822b2c153215363027ee4aada4";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/FormSubmitButton.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 81
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "3": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 11,
          column: 30
        }
      },
      "4": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 50
        }
      },
      "5": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 32
        }
      },
      "6": {
        start: {
          line: 17,
          column: 14
        },
        end: {
          line: 17,
          column: 55
        }
      },
      "7": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "8": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 39
        }
      },
      "9": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 39
        }
      },
      "10": {
        start: {
          line: 22,
          column: 15
        },
        end: {
          line: 22,
          column: 27
        }
      },
      "11": {
        start: {
          line: 23,
          column: 15
        },
        end: {
          line: 23,
          column: 27
        }
      },
      "12": {
        start: {
          line: 24,
          column: 2
        },
        end: {
          line: 32,
          column: 7
        }
      },
      "13": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 39,
          column: 2
        }
      },
      "14": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 48,
          column: 2
        }
      },
      "15": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 47,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 44
          },
          end: {
            line: 19,
            column: 45
          }
        },
        loc: {
          start: {
            line: 19,
            column: 61
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 41,
            column: 41
          },
          end: {
            line: 41,
            column: 42
          }
        },
        loc: {
          start: {
            line: 41,
            column: 58
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 41
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 25,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 25,
            column: 44
          }
        }, {
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 25,
            column: 51
          }
        }],
        line: 25
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_qa4mzev9e.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

var _extends2 =
/* istanbul ignore next */
(cov_qa4mzev9e.s[1]++, _interopRequireDefault(require("@babel/runtime/helpers/extends")));

/* istanbul ignore next */
cov_qa4mzev9e.s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
var tslib_1 =
/* istanbul ignore next */
(cov_qa4mzev9e.s[3]++, require("tslib"));
var components_1 =
/* istanbul ignore next */
(cov_qa4mzev9e.s[4]++, require("@bluebase/components"));
var formik_1 =
/* istanbul ignore next */
(cov_qa4mzev9e.s[5]++, require("formik"));
var react_1 =
/* istanbul ignore next */
(cov_qa4mzev9e.s[6]++, tslib_1.__importDefault(require("react")));

/* istanbul ignore next */
cov_qa4mzev9e.s[7]++;
exports.FormSubmitButton = formik_1.connect(function (props) {
  /* istanbul ignore next */
  cov_qa4mzev9e.f[0]++;
  var handleSubmit =
  /* istanbul ignore next */
  (cov_qa4mzev9e.s[8]++, props.handleSubmit),
      isSubmitting =
  /* istanbul ignore next */
  (cov_qa4mzev9e.s[9]++, props.isSubmitting),
      styles =
  /* istanbul ignore next */
  (cov_qa4mzev9e.s[10]++, props.styles),
      nested =
  /* istanbul ignore next */
  (cov_qa4mzev9e.s[11]++, props.nested);

  /* istanbul ignore next */
  cov_qa4mzev9e.s[12]++;
  return react_1.default.createElement(components_1.View, {
    style: nested === false ?
    /* istanbul ignore next */
    (cov_qa4mzev9e.b[0][0]++, styles.wrapper) :
    /* istanbul ignore next */
    (cov_qa4mzev9e.b[0][1]++, null)
  }, react_1.default.createElement(components_1.Button, (0, _extends2.default)({
    disabled: isSubmitting,
    loading: isSubmitting
  }, props, {
    onPress: handleSubmit,
    type: "submit"
  })));
});

/* istanbul ignore next */
cov_qa4mzev9e.s[13]++;
exports.FormSubmitButton.defaultProps = {
  color: 'primary',
  name: 'submit',
  title: 'Submit',
  variant: 'contained'
};

/* istanbul ignore next */
cov_qa4mzev9e.s[14]++;

exports.FormSubmitButton.defaultStyles = function (theme) {
  /* istanbul ignore next */
  cov_qa4mzev9e.f[1]++;
  cov_qa4mzev9e.s[15]++;
  return {
    wrapper: {
      paddingHorizontal: theme.spacing.unit * 2,
      paddingVertical: 2
    }
  };
};