{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/FormSwitchInput.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAOA,IAAM,aAAa,GAAG,YAAA,CAAA,YAAA,CAAiC,eAAjC,CAAtB;;AAEa,OAAA,CAAA,eAAA,GAAkB,UAAC,EAAD,EAA6C;AAA5C,MAAE,IAAF,GAAM,EAAN,CAAE,IAAF;AAAA,MAAQ,KAAR,GAAQ,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,CAAR;;AAE/B,SACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAA,CAAA,KAAD,EAAM,uBAAA,EAAA,EAAK,KAAL,CAAN,EACC,gBAAyB;AAAA,QAAtB,KAAsB,QAAtB,KAAsB;AAAA,QAAf,IAAe,QAAf,IAAe;AAEzB,QAAM,IAAI,GAAG,KAAK,CAAC,IAAnB;AACA,QAAM,KAAK,GAAG,QAAA,CAAA,KAAA,CAAM,IAAI,CAAC,MAAX,EAAmB,IAAnB,CAAd;AAEA,QAAM,UAAU,GAAA,uBAAA;AACf,MAAA,cAAc,EAAE;AADD,KAAA,EAEZ,KAFY,EAEP;AACR,MAAA,OAAO,EAAE,OAAO,CAAC,KAAD,CADR;AAER,MAAA,aAAa,EAAE,uBAAC,MAAD,EAAc,OAAd,EAAkC;AAChD,QAAA,IAAI,CAAC,aAAL,CAAmB,KAAK,CAAC,IAAzB,EAA+B,OAA/B;AACA,SAAC,KAAD,GAAU,IAAV,GAAiB,KAAK,CAAC,aAAN,GAAsB,KAAK,CAAC,aAAN,CAAoB,KAApB,EAA0B,OAA1B,CAAtB,GAA2D,IAA5E;AAGA;AAPO,KAFO,CAAhB;AAYA,WAAQ,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,aAAD,EAAc,uBAAA;AAAC,MAAA,aAAa,EAAE,YAAA,CAAA;AAAhB,KAAA,EAA4B,UAA5B,CAAd,CAAR;AACA,GAnBD,CADD;AAuBA,CAzBY;;AA2Bb,OAAA,CAAA,eAAA,CAAgB,YAAhB,GAA+B,EAA/B","sourcesContent":["import { Field, getIn } from 'formik';\nimport { Switch, SwitchProps, getComponent } from '@bluebase/components';\nimport { BaseFormFieldProps } from '../BaseFormField';\nimport React from 'react';\n\nexport interface FormSwitchInputProps extends SwitchProps {\n\ttype: 'switch',\n\tname: string,\n}\n\nconst BaseFormField = getComponent<BaseFormFieldProps>('BaseFormField');\n\nexport const FormSwitchInput = ({ type, ...props }: FormSwitchInputProps) => {\n\n\treturn (\n\t\t<Field {...props}>\n\t\t{({ field, form }: any) => {\n\n\t\t\tconst name = props.name;\n\t\t\tconst value = getIn(form.values, name);\n\n\t\t\tconst inputProps: any = {\n\t\t\t\tlabelPlacement: 'start',\n\t\t\t\t...props,\n\t\t\t\tchecked: Boolean(value),\n\t\t\t\tonValueChange: (_value: any, checked: boolean) => {\n\t\t\t\t\tform.setFieldValue(field.name, checked);\n\t\t\t\t\t!value ?  null : props.onValueChange ? props.onValueChange(value,checked) : null;\n\n\t\t\t\t\n\t\t\t\t}\n\t\t\t};\n\n\t\t\treturn (<BaseFormField MainComponent={Switch} {...inputProps} />);\n\t\t}}\n\t</Field>\n\t);\n};\n\nFormSwitchInput.defaultProps = {\n};\n"]}