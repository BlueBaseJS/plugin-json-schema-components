2f47e376faa9a06d86a78a8c32234df9
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var core_1 = require("@bluebase/core");

var FormPasswordInput_1 = require("../FormPasswordInput");

var formik_1 = require("formik");

var index_1 = tslib_1.__importDefault(require("../../../index"));

var react_1 = tslib_1.__importDefault(require("react"));

var enzyme_1 = require("enzyme");

var enzyme_async_helpers_1 = require("enzyme-async-helpers");

var fieldProps = {
  label: 'Password',
  name: 'password',
  required: true,
  type: 'password'
};
var initialValues = {
  'password': 'secret'
};
describe('FormPasswordInput', function () {
  it('should render all form fields in the schema', function _callee() {
    var onSubmit, component;
    return _regenerator.default.async(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            onSubmit = jest.fn();
            component = enzyme_1.mount(react_1.default.createElement(core_1.BlueBaseApp, {
              plugins: [index_1.default]
            }, react_1.default.createElement(formik_1.Formik, {
              initialValues: initialValues,
              onSubmit: onSubmit
            }, react_1.default.createElement(FormPasswordInput_1.FormPasswordInput, (0, _extends2.default)({}, fieldProps)))));
            _context.next = 4;
            return _regenerator.default.awrap(enzyme_async_helpers_1.waitForElement(component, FormPasswordInput_1.FormPasswordInput));

          case 4:
            expect(component.find('TextInput').last().prop('name')).toBe('password');
            expect(component.find('TextInput').last().prop('value')).toBe('secret');
            expect(component.find('TextInput').last().prop('type')).toBe('password');
            expect(component.find('TextInput').last().prop('secureTextEntry')).toBe(true);

          case 8:
          case "end":
            return _context.stop();
        }
      }
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vRmllbGRzL19fdGVzdHNfXy9Gb3JtUGFzc3dvcmRJbnB1dC50ZXN0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLElBQUEsTUFBQSxHQUFBLE9BQUEsQ0FBQSxnQkFBQSxDQUFBOztBQUNBLElBQUEsbUJBQUEsR0FBQSxPQUFBLENBQUEsc0JBQUEsQ0FBQTs7QUFDQSxJQUFBLFFBQUEsR0FBQSxPQUFBLENBQUEsUUFBQSxDQUFBOztBQUNBLElBQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLGdCQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLE9BQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFDQSxJQUFBLFFBQUEsR0FBQSxPQUFBLENBQUEsUUFBQSxDQUFBOztBQUNBLElBQUEsc0JBQUEsR0FBQSxPQUFBLENBQUEsc0JBQUEsQ0FBQTs7QUFFQSxJQUFNLFVBQVUsR0FBRztBQUNsQixFQUFBLEtBQUssRUFBRSxVQURXO0FBRWxCLEVBQUEsSUFBSSxFQUFFLFVBRlk7QUFHbEIsRUFBQSxRQUFRLEVBQUUsSUFIUTtBQUlsQixFQUFBLElBQUksRUFBRTtBQUpZLENBQW5CO0FBT0EsSUFBTSxhQUFhLEdBQUc7QUFDckIsY0FBWTtBQURTLENBQXRCO0FBS0EsUUFBUSxDQUFDLG1CQUFELEVBQXNCLFlBQUs7QUFHbEMsRUFBQSxFQUFFLENBQUMsNkNBQUQsRUFBZ0Q7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRTNDLFlBQUEsUUFGMkMsR0FFaEMsSUFBSSxDQUFDLEVBQUwsRUFGZ0M7QUFJM0MsWUFBQSxTQUoyQyxHQUkvQixRQUFBLENBQUEsS0FBQSxDQUNqQixPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxNQUFBLENBQUEsV0FBRCxFQUFZO0FBQUMsY0FBQSxPQUFPLEVBQUUsQ0FBQyxPQUFBLENBQUEsT0FBRDtBQUFWLGFBQVosRUFDQyxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxRQUFBLENBQUEsTUFBRCxFQUFPO0FBQUMsY0FBQSxhQUFhLEVBQUUsYUFBaEI7QUFBK0IsY0FBQSxRQUFRLEVBQUU7QUFBekMsYUFBUCxFQUNDLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLG1CQUFBLENBQUEsaUJBQUQsRUFBa0IsdUJBQUEsRUFBQSxFQUFLLFVBQUwsQ0FBbEIsQ0FERCxDQURELENBRGlCLENBSitCO0FBQUE7QUFBQSw4Q0FZM0Msc0JBQUEsQ0FBQSxjQUFBLENBQWUsU0FBZixFQUFpQyxtQkFBQSxDQUFBLGlCQUFqQyxDQVoyQzs7QUFBQTtBQWlCakQsWUFBQSxNQUFNLENBQUMsU0FBUyxDQUFDLElBQVYsQ0FBZSxXQUFmLEVBQTRCLElBQTVCLEdBQW1DLElBQW5DLENBQXdDLE1BQXhDLENBQUQsQ0FBTixDQUF3RCxJQUF4RCxDQUE2RCxVQUE3RDtBQUNBLFlBQUEsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFWLENBQWUsV0FBZixFQUE0QixJQUE1QixHQUFtQyxJQUFuQyxDQUF3QyxPQUF4QyxDQUFELENBQU4sQ0FBeUQsSUFBekQsQ0FBOEQsUUFBOUQ7QUFDQSxZQUFBLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBVixDQUFlLFdBQWYsRUFBNEIsSUFBNUIsR0FBbUMsSUFBbkMsQ0FBd0MsTUFBeEMsQ0FBRCxDQUFOLENBQXdELElBQXhELENBQTZELFVBQTdEO0FBQ0EsWUFBQSxNQUFNLENBQUMsU0FBUyxDQUFDLElBQVYsQ0FBZSxXQUFmLEVBQTRCLElBQTVCLEdBQW1DLElBQW5DLENBQXdDLGlCQUF4QyxDQUFELENBQU4sQ0FBbUUsSUFBbkUsQ0FBd0UsSUFBeEU7O0FBcEJpRDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFoRCxDQUFGO0FBc0JBLENBekJPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCbHVlQmFzZUFwcCB9IGZyb20gJ0BibHVlYmFzZS9jb3JlJztcbmltcG9ydCB7IEZvcm1QYXNzd29yZElucHV0IH0gZnJvbSAnLi4vRm9ybVBhc3N3b3JkSW5wdXQnO1xuaW1wb3J0IHsgRm9ybWlrIH0gZnJvbSAnZm9ybWlrJztcbmltcG9ydCBQbHVnaW4gZnJvbSAnLi4vLi4vLi4vaW5kZXgnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IG1vdW50IH0gZnJvbSAnZW56eW1lJztcbmltcG9ydCB7IHdhaXRGb3JFbGVtZW50IH0gZnJvbSAnZW56eW1lLWFzeW5jLWhlbHBlcnMnO1xuXG5jb25zdCBmaWVsZFByb3BzID0ge1xuXHRsYWJlbDogJ1Bhc3N3b3JkJyxcblx0bmFtZTogJ3Bhc3N3b3JkJyxcblx0cmVxdWlyZWQ6IHRydWUsXG5cdHR5cGU6ICdwYXNzd29yZCcsXG59O1xuXG5jb25zdCBpbml0aWFsVmFsdWVzID0ge1xuXHQncGFzc3dvcmQnOiAnc2VjcmV0Jyxcbn07XG5cblxuZGVzY3JpYmUoJ0Zvcm1QYXNzd29yZElucHV0JywgKCkgPT4ge1xuXG5cblx0aXQoJ3Nob3VsZCByZW5kZXIgYWxsIGZvcm0gZmllbGRzIGluIHRoZSBzY2hlbWEnLCBhc3luYyAoKSA9PiB7XG5cblx0XHRjb25zdCBvblN1Ym1pdCA9IGplc3QuZm4oKTtcblxuXHRcdGNvbnN0IGNvbXBvbmVudCA9IG1vdW50KFxuXHRcdFx0PEJsdWVCYXNlQXBwIHBsdWdpbnM9e1tQbHVnaW5dfT5cblx0XHRcdFx0PEZvcm1payBpbml0aWFsVmFsdWVzPXtpbml0aWFsVmFsdWVzfSBvblN1Ym1pdD17b25TdWJtaXR9PlxuXHRcdFx0XHRcdDxGb3JtUGFzc3dvcmRJbnB1dCB7Li4uZmllbGRQcm9wcyBhcyBhbnl9IC8+XG5cdFx0XHRcdDwvRm9ybWlrPlxuXHRcdFx0PC9CbHVlQmFzZUFwcD5cblx0XHQpO1xuXG5cdFx0YXdhaXQgd2FpdEZvckVsZW1lbnQoY29tcG9uZW50IGFzIGFueSwgRm9ybVBhc3N3b3JkSW5wdXQpO1xuXG5cdFx0Ly8gZXhwZWN0KGNvbXBvbmVudCkudG9NYXRjaFNuYXBzaG90KCk7XG5cblx0XHQvLyBDaGVjayBmaWVsZHNcblx0XHRleHBlY3QoY29tcG9uZW50LmZpbmQoJ1RleHRJbnB1dCcpLmxhc3QoKS5wcm9wKCduYW1lJykpLnRvQmUoJ3Bhc3N3b3JkJyk7XG5cdFx0ZXhwZWN0KGNvbXBvbmVudC5maW5kKCdUZXh0SW5wdXQnKS5sYXN0KCkucHJvcCgndmFsdWUnKSkudG9CZSgnc2VjcmV0Jyk7XG5cdFx0ZXhwZWN0KGNvbXBvbmVudC5maW5kKCdUZXh0SW5wdXQnKS5sYXN0KCkucHJvcCgndHlwZScpKS50b0JlKCdwYXNzd29yZCcpO1xuXHRcdGV4cGVjdChjb21wb25lbnQuZmluZCgnVGV4dElucHV0JykubGFzdCgpLnByb3AoJ3NlY3VyZVRleHRFbnRyeScpKS50b0JlKHRydWUpO1xuXHR9KTtcbn0pO1xuIl19