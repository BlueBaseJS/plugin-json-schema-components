2e6e9329bcf62468b03d708313575463
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var formik_1 = require("formik");

var components_1 = require("@bluebase/components");

var react_1 = tslib_1.__importDefault(require("react"));

var BaseFormField = components_1.getComponent('BaseFormField');

exports.FormSwitchInput = function (_a) {
  var type = _a.type,
      props = tslib_1.__rest(_a, ["type"]);

  return react_1.default.createElement(formik_1.Field, (0, _extends2.default)({}, props), function (_ref) {
    var field = _ref.field,
        form = _ref.form;
    var name = props.name;
    console.log('valll', name);
    var value = formik_1.getIn(form.values, name);
    console.log('valll', value);
    var inputProps = (0, _extends2.default)({
      labelPlacement: 'start'
    }, props, {
      checked: Boolean(value),
      onValueChange: function onValueChange(_value, checked) {
        form.setFieldValue(field.name, checked);
        value === true ? props.onValueChange ? props.onValueChange(value, checked) : null : value === false ? props.onValueChange ? props.onValueChange(value, checked) : null : null;
      }
    });
    return react_1.default.createElement(BaseFormField, (0, _extends2.default)({
      MainComponent: components_1.Switch
    }, inputProps));
  });
};

exports.FormSwitchInput.defaultProps = {};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vRmllbGRzL0Zvcm1Td2l0Y2hJbnB1dC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxRQUFBLEdBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBQTs7QUFDQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsc0JBQUEsQ0FBQTs7QUFFQSxJQUFBLE9BQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFPQSxJQUFNLGFBQWEsR0FBRyxZQUFBLENBQUEsWUFBQSxDQUFpQyxlQUFqQyxDQUF0Qjs7QUFFYSxPQUFBLENBQUEsZUFBQSxHQUFrQixVQUFDLEVBQUQsRUFBNkM7QUFBNUMsTUFBRSxJQUFGLEdBQU0sRUFBTixDQUFFLElBQUY7QUFBQSxNQUFRLEtBQVIsR0FBUSxPQUFBLENBQUEsTUFBQSxDQUFBLEVBQUEsRUFBQSxDQUFBLE1BQUEsQ0FBQSxDQUFSOztBQUUvQixTQUNDLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLFFBQUEsQ0FBQSxLQUFELEVBQU0sdUJBQUEsRUFBQSxFQUFLLEtBQUwsQ0FBTixFQUNDLGdCQUEwQjtBQUFBLFFBQXZCLEtBQXVCLFFBQXZCLEtBQXVCO0FBQUEsUUFBaEIsSUFBZ0IsUUFBaEIsSUFBZ0I7QUFFMUIsUUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQW5CO0FBQ0EsSUFBQSxPQUFPLENBQUMsR0FBUixDQUFZLE9BQVosRUFBb0IsSUFBcEI7QUFFRSxRQUFNLEtBQUssR0FBRyxRQUFBLENBQUEsS0FBQSxDQUFNLElBQUksQ0FBQyxNQUFYLEVBQW1CLElBQW5CLENBQWQ7QUFDRixJQUFBLE9BQU8sQ0FBQyxHQUFSLENBQVksT0FBWixFQUFvQixLQUFwQjtBQUVBLFFBQU0sVUFBVSxHQUFBLHVCQUFBO0FBQ2YsTUFBQSxjQUFjLEVBQUU7QUFERCxLQUFBLEVBRVosS0FGWSxFQUVQO0FBQ1IsTUFBQSxPQUFPLEVBQUUsT0FBTyxDQUFDLEtBQUQsQ0FEUjtBQUVSLE1BQUEsYUFBYSxFQUFFLHVCQUFDLE1BQUQsRUFBYyxPQUFkLEVBQWtDO0FBQ2hELFFBQUEsSUFBSSxDQUFDLGFBQUwsQ0FBbUIsS0FBSyxDQUFDLElBQXpCLEVBQStCLE9BQS9CO0FBRUEsUUFBQSxLQUFLLEtBQUssSUFBVixHQUNHLEtBQUssQ0FBQyxhQUFOLEdBQ0QsS0FBSyxDQUFDLGFBQU4sQ0FBb0IsS0FBcEIsRUFBMEIsT0FBMUIsQ0FEQyxHQUNrQyxJQUZyQyxHQUdDLEtBQUssS0FBSyxLQUFWLEdBQ0UsS0FBSyxDQUFDLGFBQU4sR0FDQSxLQUFLLENBQUMsYUFBTixDQUFvQixLQUFwQixFQUEwQixPQUExQixDQURBLEdBRUEsSUFIRixHQUdTLElBTlY7QUFPQTtBQVpPLEtBRk8sQ0FBaEI7QUFpQkEsV0FBUSxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxhQUFELEVBQWMsdUJBQUE7QUFBQyxNQUFBLGFBQWEsRUFBRSxZQUFBLENBQUE7QUFBaEIsS0FBQSxFQUE0QixVQUE1QixDQUFkLENBQVI7QUFDQSxHQTNCRCxDQUREO0FBK0JBLENBakNZOztBQW1DYixPQUFBLENBQUEsZUFBQSxDQUFnQixZQUFoQixHQUErQixFQUEvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZpZWxkLCBnZXRJbiB9IGZyb20gJ2Zvcm1payc7XG5pbXBvcnQgeyBTd2l0Y2gsIFN3aXRjaFByb3BzLCBnZXRDb21wb25lbnQgfSBmcm9tICdAYmx1ZWJhc2UvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBCYXNlRm9ybUZpZWxkUHJvcHMgfSBmcm9tICcuLi9CYXNlRm9ybUZpZWxkJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9ybVN3aXRjaElucHV0UHJvcHMgZXh0ZW5kcyBTd2l0Y2hQcm9wcyB7XG5cdHR5cGU6ICdzd2l0Y2gnLFxuXHRuYW1lOiBzdHJpbmcsXG59XG5cbmNvbnN0IEJhc2VGb3JtRmllbGQgPSBnZXRDb21wb25lbnQ8QmFzZUZvcm1GaWVsZFByb3BzPignQmFzZUZvcm1GaWVsZCcpO1xuXG5leHBvcnQgY29uc3QgRm9ybVN3aXRjaElucHV0ID0gKHsgdHlwZSwgLi4ucHJvcHMgfTogRm9ybVN3aXRjaElucHV0UHJvcHMpID0+IHtcblxuXHRyZXR1cm4gKFxuXHRcdDxGaWVsZCB7Li4ucHJvcHN9PlxuXHRcdHsoeyBmaWVsZCwgZm9ybSAgfTogYW55KSA9PiB7XG5cblx0XHRcdGNvbnN0IG5hbWUgPSBwcm9wcy5uYW1lO1xuXHRcdFx0Y29uc29sZS5sb2coJ3ZhbGxsJyxuYW1lKVxuXG5cdFx0XHRcdFx0Y29uc3QgdmFsdWUgPSBnZXRJbihmb3JtLnZhbHVlcywgbmFtZSk7XG5cdFx0XHRjb25zb2xlLmxvZygndmFsbGwnLHZhbHVlKVxuXG5cdFx0XHRjb25zdCBpbnB1dFByb3BzOiBhbnkgPSB7XG5cdFx0XHRcdGxhYmVsUGxhY2VtZW50OiAnc3RhcnQnLFxuXHRcdFx0XHQuLi5wcm9wcyxcblx0XHRcdFx0Y2hlY2tlZDogQm9vbGVhbih2YWx1ZSksXG5cdFx0XHRcdG9uVmFsdWVDaGFuZ2U6IChfdmFsdWU6IGFueSwgY2hlY2tlZDogYm9vbGVhbikgPT4ge1xuXHRcdFx0XHRcdGZvcm0uc2V0RmllbGRWYWx1ZShmaWVsZC5uYW1lLCBjaGVja2VkKTtcblx0XHRcdFx0XG5cdFx0XHRcdFx0dmFsdWUgPT09IHRydWUgPyBcblx0XHRcdFx0XHQgICBwcm9wcy5vblZhbHVlQ2hhbmdlID9cblx0XHRcdFx0XHRcdCBwcm9wcy5vblZhbHVlQ2hhbmdlKHZhbHVlLGNoZWNrZWQpOm51bGxcblx0XHRcdFx0XHQ6dmFsdWUgPT09IGZhbHNlID9cblx0XHRcdFx0XHQgICBwcm9wcy5vblZhbHVlQ2hhbmdlID9cblx0XHRcdFx0XHRcdCAgcHJvcHMub25WYWx1ZUNoYW5nZSh2YWx1ZSxjaGVja2VkKSA6XG5cdFx0XHRcdFx0XHRcdCBudWxsIDogbnVsbFxuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHRyZXR1cm4gKDxCYXNlRm9ybUZpZWxkIE1haW5Db21wb25lbnQ9e1N3aXRjaH0gey4uLmlucHV0UHJvcHN9IC8+KTtcblx0XHR9fVxuXHQ8L0ZpZWxkPlxuXHQpO1xufTtcblxuRm9ybVN3aXRjaElucHV0LmRlZmF1bHRQcm9wcyA9IHtcbn07XG4iXX0=