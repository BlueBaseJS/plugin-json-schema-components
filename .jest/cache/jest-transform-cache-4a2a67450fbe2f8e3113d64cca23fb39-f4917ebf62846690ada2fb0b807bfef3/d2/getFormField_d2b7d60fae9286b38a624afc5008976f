16abe70bb82cdb8a5e93594968d45770
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var components_1 = require("@bluebase/components");

var DefaultInputs = ['FormTextInput', 'TextInput', 'Noop'];
var DefaultButtons = ['Button', 'Noop'];
var FieldResolutionMap = {
  actions: ['FormActions', 'Noop'],
  checkbox: ['FormCheckboxInput', 'Noop'],
  color: ['FormColorInput'].concat(DefaultInputs),
  component: ['JsonLayout', 'Noop'],
  date: ['FormDateInput'].concat(DefaultInputs),
  email: ['FormEmailInput'].concat(DefaultInputs),
  number: ['FormNumberInput'].concat(DefaultInputs),
  password: ['FormPasswordInput'].concat(DefaultInputs),
  picker: ['FormPickerInput', 'Picker', 'Noop'],
  'radio-group': ['FormRadioGroupInput', 'Noop'],
  range: ['FormRangeInput'].concat(DefaultInputs),
  reset: ['FormResetButton'].concat(DefaultButtons),
  search: ['FormSearchInput'].concat(DefaultInputs),
  submit: ['FormSubmitButton'].concat(DefaultButtons),
  switch: ['FormSwitchInput', 'FormCheckboxInput', 'Noop'],
  tel: ['FormTelInput'].concat(DefaultInputs),
  time: ['FormTimeInput'].concat(DefaultInputs),
  url: ['FormUrlInput'].concat(DefaultInputs)
};

exports.getFormField = function (type) {
  return type && FieldResolutionMap[type] ? components_1.getComponent.apply(components_1, (0, _toConsumableArray2.default)(FieldResolutionMap[type])) : components_1.getComponent.apply(components_1, DefaultInputs);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vZ2V0Rm9ybUZpZWxkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsc0JBQUEsQ0FBQTs7QUFFQSxJQUFNLGFBQWEsR0FBRyxDQUFDLGVBQUQsRUFBa0IsV0FBbEIsRUFBK0IsTUFBL0IsQ0FBdEI7QUFDQSxJQUFNLGNBQWMsR0FBRyxDQUFDLFFBQUQsRUFBVyxNQUFYLENBQXZCO0FBRUEsSUFBTSxrQkFBa0IsR0FBUTtBQUMvQixFQUFBLE9BQU8sRUFBRSxDQUFDLGFBQUQsRUFBZ0IsTUFBaEIsQ0FEc0I7QUFFL0IsRUFBQSxRQUFRLEVBQUUsQ0FBQyxtQkFBRCxFQUFzQixNQUF0QixDQUZxQjtBQUcvQixFQUFBLEtBQUssR0FBRyxnQkFBSCxTQUF3QixhQUF4QixDQUgwQjtBQUkvQixFQUFBLFNBQVMsRUFBRSxDQUFDLFlBQUQsRUFBZSxNQUFmLENBSm9CO0FBSy9CLEVBQUEsSUFBSSxHQUFHLGVBQUgsU0FBdUIsYUFBdkIsQ0FMMkI7QUFNL0IsRUFBQSxLQUFLLEdBQUcsZ0JBQUgsU0FBd0IsYUFBeEIsQ0FOMEI7QUFPL0IsRUFBQSxNQUFNLEdBQUcsaUJBQUgsU0FBeUIsYUFBekIsQ0FQeUI7QUFRL0IsRUFBQSxRQUFRLEdBQUcsbUJBQUgsU0FBMkIsYUFBM0IsQ0FSdUI7QUFTL0IsRUFBQSxNQUFNLEVBQUUsQ0FBQyxpQkFBRCxFQUFvQixRQUFwQixFQUE4QixNQUE5QixDQVR1QjtBQVUvQixpQkFBZSxDQUFDLHFCQUFELEVBQXdCLE1BQXhCLENBVmdCO0FBVy9CLEVBQUEsS0FBSyxHQUFHLGdCQUFILFNBQXdCLGFBQXhCLENBWDBCO0FBWS9CLEVBQUEsS0FBSyxHQUFHLGlCQUFILFNBQXlCLGNBQXpCLENBWjBCO0FBYS9CLEVBQUEsTUFBTSxHQUFHLGlCQUFILFNBQXlCLGFBQXpCLENBYnlCO0FBYy9CLEVBQUEsTUFBTSxHQUFHLGtCQUFILFNBQTBCLGNBQTFCLENBZHlCO0FBZS9CLEVBQUEsTUFBTSxFQUFFLENBQUMsaUJBQUQsRUFBb0IsbUJBQXBCLEVBQXlDLE1BQXpDLENBZnVCO0FBZ0IvQixFQUFBLEdBQUcsR0FBRyxjQUFILFNBQXNCLGFBQXRCLENBaEI0QjtBQWlCL0IsRUFBQSxJQUFJLEdBQUcsZUFBSCxTQUF1QixhQUF2QixDQWpCMkI7QUFrQi9CLEVBQUEsR0FBRyxHQUFHLGNBQUgsU0FBc0IsYUFBdEI7QUFsQjRCLENBQWhDOztBQXFCYSxPQUFBLENBQUEsWUFBQSxHQUFlLFVBQUMsSUFBRDtBQUFBLFNBQzNCLElBQUksSUFBSSxrQkFBa0IsQ0FBQyxJQUFELENBQTFCLEdBQ0csWUFBQSxDQUFBLFlBQUEsT0FBQSxZQUFBLG1DQUFnQixrQkFBa0IsQ0FBQyxJQUFELENBQWxDLEVBREgsR0FFRyxZQUFBLENBQUEsWUFBQSxPQUFBLFlBQUEsRUFBZ0IsYUFBaEIsQ0FId0I7QUFBQSxDQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0Q29tcG9uZW50IH0gZnJvbSAnQGJsdWViYXNlL2NvbXBvbmVudHMnO1xuXG5jb25zdCBEZWZhdWx0SW5wdXRzID0gWydGb3JtVGV4dElucHV0JywgJ1RleHRJbnB1dCcsICdOb29wJ107XG5jb25zdCBEZWZhdWx0QnV0dG9ucyA9IFsnQnV0dG9uJywgJ05vb3AnXTtcblxuY29uc3QgRmllbGRSZXNvbHV0aW9uTWFwOiBhbnkgPSB7XG5cdGFjdGlvbnM6IFsnRm9ybUFjdGlvbnMnLCAnTm9vcCddLFxuXHRjaGVja2JveDogWydGb3JtQ2hlY2tib3hJbnB1dCcsICdOb29wJ10sXG5cdGNvbG9yOiBbJ0Zvcm1Db2xvcklucHV0JywgLi4uRGVmYXVsdElucHV0c10sXG5cdGNvbXBvbmVudDogWydKc29uTGF5b3V0JywgJ05vb3AnXSxcblx0ZGF0ZTogWydGb3JtRGF0ZUlucHV0JywgLi4uRGVmYXVsdElucHV0c10sXG5cdGVtYWlsOiBbJ0Zvcm1FbWFpbElucHV0JywgLi4uRGVmYXVsdElucHV0c10sXG5cdG51bWJlcjogWydGb3JtTnVtYmVySW5wdXQnLCAuLi5EZWZhdWx0SW5wdXRzXSxcblx0cGFzc3dvcmQ6IFsnRm9ybVBhc3N3b3JkSW5wdXQnLCAuLi5EZWZhdWx0SW5wdXRzXSxcblx0cGlja2VyOiBbJ0Zvcm1QaWNrZXJJbnB1dCcsICdQaWNrZXInLCAnTm9vcCddLFxuXHQncmFkaW8tZ3JvdXAnOiBbJ0Zvcm1SYWRpb0dyb3VwSW5wdXQnLCAnTm9vcCddLFxuXHRyYW5nZTogWydGb3JtUmFuZ2VJbnB1dCcsIC4uLkRlZmF1bHRJbnB1dHNdLFxuXHRyZXNldDogWydGb3JtUmVzZXRCdXR0b24nLCAuLi5EZWZhdWx0QnV0dG9uc10sXG5cdHNlYXJjaDogWydGb3JtU2VhcmNoSW5wdXQnLCAuLi5EZWZhdWx0SW5wdXRzXSxcblx0c3VibWl0OiBbJ0Zvcm1TdWJtaXRCdXR0b24nLCAuLi5EZWZhdWx0QnV0dG9uc10sXG5cdHN3aXRjaDogWydGb3JtU3dpdGNoSW5wdXQnLCAnRm9ybUNoZWNrYm94SW5wdXQnLCAnTm9vcCddLFxuXHR0ZWw6IFsnRm9ybVRlbElucHV0JywgLi4uRGVmYXVsdElucHV0c10sXG5cdHRpbWU6IFsnRm9ybVRpbWVJbnB1dCcsIC4uLkRlZmF1bHRJbnB1dHNdLFxuXHR1cmw6IFsnRm9ybVVybElucHV0JywgLi4uRGVmYXVsdElucHV0c10sXG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Rm9ybUZpZWxkID0gKHR5cGU6IHN0cmluZykgPT5cblx0dHlwZSAmJiBGaWVsZFJlc29sdXRpb25NYXBbdHlwZV1cblx0XHQ/IGdldENvbXBvbmVudCguLi5GaWVsZFJlc29sdXRpb25NYXBbdHlwZV0pXG5cdFx0OiBnZXRDb21wb25lbnQoLi4uRGVmYXVsdElucHV0cyk7XG4iXX0=