{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/getFormField.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEA,IAAM,aAAa,GAAG,CAAC,eAAD,EAAkB,WAAlB,EAA+B,MAA/B,CAAtB;AACA,IAAM,cAAc,GAAG,CAAC,QAAD,EAAW,MAAX,CAAvB;AAEA,IAAM,kBAAkB,GAAQ;AAC/B,EAAA,OAAO,EAAE,CAAC,aAAD,EAAgB,MAAhB,CADsB;AAE/B,EAAA,QAAQ,EAAE,CAAC,mBAAD,EAAsB,MAAtB,CAFqB;AAG/B,EAAA,KAAK,GAAG,gBAAH,SAAwB,aAAxB,CAH0B;AAI/B,EAAA,SAAS,EAAE,CAAC,YAAD,EAAe,MAAf,CAJoB;AAK/B,EAAA,IAAI,GAAG,eAAH,SAAuB,aAAvB,CAL2B;AAM/B,EAAA,KAAK,GAAG,gBAAH,SAAwB,aAAxB,CAN0B;AAO/B,EAAA,MAAM,GAAG,iBAAH,SAAyB,aAAzB,CAPyB;AAQ/B,EAAA,QAAQ,GAAG,mBAAH,SAA2B,aAA3B,CARuB;AAS/B,EAAA,MAAM,EAAE,CAAC,iBAAD,EAAoB,QAApB,EAA8B,MAA9B,CATuB;AAU/B,iBAAe,CAAC,qBAAD,EAAwB,MAAxB,CAVgB;AAW/B,EAAA,KAAK,GAAG,gBAAH,SAAwB,aAAxB,CAX0B;AAY/B,EAAA,KAAK,GAAG,iBAAH,SAAyB,cAAzB,CAZ0B;AAa/B,EAAA,MAAM,GAAG,iBAAH,SAAyB,aAAzB,CAbyB;AAc/B,EAAA,MAAM,GAAG,kBAAH,SAA0B,cAA1B,CAdyB;AAe/B,EAAA,MAAM,EAAE,CAAC,iBAAD,EAAoB,mBAApB,EAAyC,MAAzC,CAfuB;AAgB/B,EAAA,GAAG,GAAG,cAAH,SAAsB,aAAtB,CAhB4B;AAiB/B,EAAA,IAAI,GAAG,eAAH,SAAuB,aAAvB,CAjB2B;AAkB/B,EAAA,GAAG,GAAG,cAAH,SAAsB,aAAtB;AAlB4B,CAAhC;;AAqBa,OAAA,CAAA,YAAA,GAAe,UAAC,IAAD;AAAA,SAC3B,IAAI,IAAI,kBAAkB,CAAC,IAAD,CAA1B,GACG,YAAA,CAAA,YAAA,OAAA,YAAA,mCAAgB,kBAAkB,CAAC,IAAD,CAAlC,EADH,GAEG,YAAA,CAAA,YAAA,OAAA,YAAA,EAAgB,aAAhB,CAHwB;AAAA,CAAf","sourcesContent":["import { getComponent } from '@bluebase/components';\n\nconst DefaultInputs = ['FormTextInput', 'TextInput', 'Noop'];\nconst DefaultButtons = ['Button', 'Noop'];\n\nconst FieldResolutionMap: any = {\n\tactions: ['FormActions', 'Noop'],\n\tcheckbox: ['FormCheckboxInput', 'Noop'],\n\tcolor: ['FormColorInput', ...DefaultInputs],\n\tcomponent: ['JsonLayout', 'Noop'],\n\tdate: ['FormDateInput', ...DefaultInputs],\n\temail: ['FormEmailInput', ...DefaultInputs],\n\tnumber: ['FormNumberInput', ...DefaultInputs],\n\tpassword: ['FormPasswordInput', ...DefaultInputs],\n\tpicker: ['FormPickerInput', 'Picker', 'Noop'],\n\t'radio-group': ['FormRadioGroupInput', 'Noop'],\n\trange: ['FormRangeInput', ...DefaultInputs],\n\treset: ['FormResetButton', ...DefaultButtons],\n\tsearch: ['FormSearchInput', ...DefaultInputs],\n\tsubmit: ['FormSubmitButton', ...DefaultButtons],\n\tswitch: ['FormSwitchInput', 'FormCheckboxInput', 'Noop'],\n\ttel: ['FormTelInput', ...DefaultInputs],\n\ttime: ['FormTimeInput', ...DefaultInputs],\n\turl: ['FormUrlInput', ...DefaultInputs],\n};\n\nexport const getFormField = (type: string) =>\n\ttype && FieldResolutionMap[type]\n\t\t? getComponent(...FieldResolutionMap[type])\n\t\t: getComponent(...DefaultInputs);\n"]}