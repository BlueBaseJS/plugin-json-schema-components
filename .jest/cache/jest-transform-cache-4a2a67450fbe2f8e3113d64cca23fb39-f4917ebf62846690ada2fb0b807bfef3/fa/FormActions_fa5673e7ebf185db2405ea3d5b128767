0f658750afd6d29e770d9847082f0fe9
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var FormFields_1 = require("../FormFields");

var react_1 = tslib_1.__importDefault(require("react"));

var components_1 = require("@bluebase/components");

var FieldWrapper = function FieldWrapper(_ref) {
  var field = _ref.field,
      parent = _ref.parent,
      children = _ref.children;
  var direction = parent.direction,
      styles = parent.styles,
      style = parent.style;
  return react_1.default.createElement(components_1.View, {
    key: field.name,
    style: [direction === 'left' ? styles.fieldContainerLeft : null || direction === 'right' ? styles.fieldContainerRight : null || direction === 'space-between' ? styles.fieldContainerBetween : null, style]
  }, children);
};

exports.FormActions = function (props) {
  var direction = props.direction,
      style = props.style,
      _styles = props.styles;
  var styles = _styles;
  return react_1.default.createElement(components_1.View, {
    style: styles.root
  }, react_1.default.createElement(components_1.View, {
    style: [direction === 'left' ? styles.rootLeft : null || direction === 'right' ? styles.rootRight : null || direction === 'space-between' ? styles.rootSpaceBetween : null, style],
    testID: "form-actions"
  }, react_1.default.createElement(FormFields_1.FormFields, (0, _extends2.default)({}, props, {
    FieldWrapper: FieldWrapper
  }))));
};

exports.FormActions.defaultProps = {
  direction: 'right'
};

exports.FormActions.defaultStyles = function (theme) {
  return {
    fieldContainerLeft: {
      marginLeft: theme.spacing.unit * 2
    },
    fieldContainerRight: {
      marginRight: theme.spacing.unit * 0
    },
    fieldContainerBetween: {
      marginLeft: theme.spacing.unit * 0,
      marginRight: theme.spacing.unit * 0
    },
    root: {
      flexDirection: 'row',
      paddingVertical: theme.spacing.unit * 2
    },
    rootLeft: {
      justifyContent: 'flex-start'
    },
    rootRight: {
      justifyContent: 'flex-end'
    },
    rootSpaceBetween: {
      justifyContent: 'space-between'
    }
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vRmllbGRzL0Zvcm1BY3Rpb25zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBOztBQUdBLElBQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUVBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBOztBQXNCQSxJQUFNLFlBQVksR0FBRyxTQUFmLFlBQWUsT0FBbUQ7QUFBQSxNQUFoRCxLQUFnRCxRQUFoRCxLQUFnRDtBQUFBLE1BQXpDLE1BQXlDLFFBQXpDLE1BQXlDO0FBQUEsTUFBakMsUUFBaUMsUUFBakMsUUFBaUM7QUFBQSxNQUUvRCxTQUYrRCxHQUVuQyxNQUZtQyxDQUUvRCxTQUYrRDtBQUFBLE1BRXBELE1BRm9ELEdBRW5DLE1BRm1DLENBRXBELE1BRm9EO0FBQUEsTUFFN0MsS0FGNkMsR0FFbkMsTUFGbUMsQ0FFN0MsS0FGNkM7QUFJdkUsU0FDQyxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxZQUFBLENBQUEsSUFBRCxFQUFLO0FBQ0osSUFBQSxHQUFHLEVBQUUsS0FBSyxDQUFDLElBRFA7QUFFSixJQUFBLEtBQUssRUFBRSxDQUFDLFNBQVMsS0FBSyxNQUFkLEdBQXVCLE1BQU0sQ0FBQyxrQkFBOUIsR0FBbUQsUUFDekQsU0FBUyxLQUFJLE9BRDRDLEdBQ2xDLE1BQU0sQ0FBQyxtQkFEMkIsR0FDTixRQUNsRCxTQUFTLEtBQUssZUFEb0MsR0FDbEIsTUFBTSxDQUFDLHFCQURXLEdBQ2EsSUFGM0QsRUFFbUUsS0FGbkU7QUFGSCxHQUFMLEVBTUMsUUFORCxDQUREO0FBVUEsQ0FkRDs7QUFvQmEsT0FBQSxDQUFBLFdBQUEsR0FBYyxVQUFDLEtBQUQsRUFBNEI7QUFBQSxNQUU5QyxTQUY4QyxHQUVSLEtBRlEsQ0FFOUMsU0FGOEM7QUFBQSxNQUVuQyxLQUZtQyxHQUVSLEtBRlEsQ0FFbkMsS0FGbUM7QUFBQSxNQUVwQixPQUZvQixHQUVSLEtBRlEsQ0FFNUIsTUFGNEI7QUFHdEQsTUFBTSxNQUFNLEdBQUcsT0FBZjtBQUVBLFNBQ0MsT0FBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsWUFBQSxDQUFBLElBQUQsRUFBSztBQUFDLElBQUEsS0FBSyxFQUFHLE1BQU0sQ0FBQztBQUFoQixHQUFMLEVBRUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsWUFBQSxDQUFBLElBQUQsRUFBSztBQUFDLElBQUEsS0FBSyxFQUFFLENBQUUsU0FBUyxLQUFLLE1BQWQsR0FBdUIsTUFBTSxDQUFDLFFBQTlCLEdBQXlDLFFBQ3BELFNBQVMsS0FBSyxPQURzQyxHQUM1QixNQUFNLENBQUMsU0FEcUIsR0FDVixRQUMzQyxTQUFTLEtBQUssZUFENkIsR0FDWCxNQUFNLENBQUMsZ0JBREksR0FDZSxJQUZoRCxFQUVzRCxLQUZ0RCxDQUFSO0FBRXNFLElBQUEsTUFBTSxFQUFDO0FBRjdFLEdBQUwsRUFHQyxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxZQUFBLENBQUEsVUFBRCxFQUFXLHVCQUFBLEVBQUEsRUFBSyxLQUFMLEVBQVU7QUFBRSxJQUFBLFlBQVksRUFBRTtBQUFoQixHQUFWLENBQVgsQ0FIRCxDQUZBLENBREQ7QUFVQSxDQWZZOztBQWlCYixPQUFBLENBQUEsV0FBQSxDQUFZLFlBQVosR0FBMkI7QUFDMUIsRUFBQSxTQUFTLEVBQUU7QUFEZSxDQUEzQjs7QUFJQSxPQUFBLENBQUEsV0FBQSxDQUFZLGFBQVosR0FBNEIsVUFBQyxLQUFEO0FBQUEsU0FBc0M7QUFDakUsSUFBQSxrQkFBa0IsRUFBRTtBQUNuQixNQUFBLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTixDQUFjLElBQWQsR0FBcUI7QUFEZCxLQUQ2QztBQUlqRSxJQUFBLG1CQUFtQixFQUFFO0FBQ3BCLE1BQUEsV0FBVyxFQUFFLEtBQUssQ0FBQyxPQUFOLENBQWMsSUFBZCxHQUFxQjtBQURkLEtBSjRDO0FBT2pFLElBQUEscUJBQXFCLEVBQUU7QUFDdEIsTUFBQSxVQUFVLEVBQUUsS0FBSyxDQUFDLE9BQU4sQ0FBYyxJQUFkLEdBQXFCLENBRFg7QUFFdEIsTUFBQSxXQUFXLEVBQUUsS0FBSyxDQUFDLE9BQU4sQ0FBYyxJQUFkLEdBQXFCO0FBRlosS0FQMEM7QUFXakUsSUFBQSxJQUFJLEVBQUU7QUFDTCxNQUFBLGFBQWEsRUFBRSxLQURWO0FBRUosTUFBQSxlQUFlLEVBQUUsS0FBSyxDQUFDLE9BQU4sQ0FBYyxJQUFkLEdBQXFCO0FBRmxDLEtBWDJEO0FBZWpFLElBQUEsUUFBUSxFQUFFO0FBQ1QsTUFBQSxjQUFjLEVBQUU7QUFEUCxLQWZ1RDtBQWtCakUsSUFBQSxTQUFTLEVBQUU7QUFDVixNQUFBLGNBQWMsRUFBRTtBQUROLEtBbEJzRDtBQXFCakUsSUFBQSxnQkFBZ0IsRUFBRTtBQUNqQixNQUFBLGNBQWMsRUFBRTtBQURDO0FBckIrQyxHQUF0QztBQUFBLENBQTVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmllbGRXcmFwcGVyUHJvcHMsIEZvcm1GaWVsZHMgfSBmcm9tICcuLi9Gb3JtRmllbGRzJztcbmltcG9ydCB7IFN0eWxlUHJvcCwgVmlld1N0eWxlIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IEZvcm1GaWVsZFByb3BzIH0gZnJvbSAnLi9Gb3JtRmllbGRQcm9wcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVGhlbWUgfSBmcm9tICdAYmx1ZWJhc2UvY29yZSc7XG5pbXBvcnQgeyBWaWV3IH0gZnJvbSAnQGJsdWViYXNlL2NvbXBvbmVudHMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEZvcm1BY3Rpb25zU3R5bGVzIHtcblx0ZmllbGRDb250YWluZXJMZWZ0OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcblx0ZmllbGRDb250YWluZXJSaWdodDogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG5cdGZpZWxkQ29udGFpbmVyQmV0d2VlbiA6U3R5bGVQcm9wPFZpZXdTdHlsZT47XG5cdHJvb3RTcGFjZUJldHdlZW4gOiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcblx0cm9vdDogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG5cdHJvb3RMZWZ0OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcblx0cm9vdFJpZ2h0OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGb3JtQWN0aW9uc1Byb3BzIHtcblx0dHlwZTogJ2FjdGlvbnMnO1xuXHRuYW1lOiBzdHJpbmc7XG5cdGRpcmVjdGlvbjogJ2xlZnQnIHwgJ3JpZ2h0JyB8ICdzcGFjZS1iZXR3ZWVuJztcblx0ZmllbGRzOiBGb3JtRmllbGRQcm9wc1tdO1xuXHRzdHlsZT86IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuXHRzdHlsZXM/OiBQYXJ0aWFsPEZvcm1BY3Rpb25zU3R5bGVzPjtcbn1cblxuXG5jb25zdCBGaWVsZFdyYXBwZXIgPSAoeyBmaWVsZCwgcGFyZW50LCBjaGlsZHJlbiB9OiBGaWVsZFdyYXBwZXJQcm9wcykgPT4ge1xuXG5cdGNvbnN0IHsgZGlyZWN0aW9uLCBzdHlsZXMsc3R5bGUgfSA9IHBhcmVudDtcblxuXHRyZXR1cm4gKFxuXHRcdDxWaWV3XG5cdFx0XHRrZXk9e2ZpZWxkLm5hbWV9XG5cdFx0XHRzdHlsZT17W2RpcmVjdGlvbiA9PT0gJ2xlZnQnID8gc3R5bGVzLmZpZWxkQ29udGFpbmVyTGVmdCA6IG51bGwgXG5cdFx0XHR8fGRpcmVjdGlvbiA9PT0ncmlnaHQnID8gc3R5bGVzLmZpZWxkQ29udGFpbmVyUmlnaHQgOm51bGxcblx0XHRcdHx8IGRpcmVjdGlvbiA9PT0gJ3NwYWNlLWJldHdlZW4nID8gc3R5bGVzLmZpZWxkQ29udGFpbmVyQmV0d2VlbiA6IG51bGwsICAgc3R5bGVdfVxuXHRcdD5cblx0XHR7Y2hpbGRyZW59XG5cdFx0PC9WaWV3PlxuXHQpO1xufTtcblxuLyoqXG4gKiBBIGNvbXBvbmVudCB0aGF0IHJlbmRlcnMgZm9ybSBhY3Rpb25zLCBpLmUuIHN1Ym1pdCBvciByZXNldCBidXR0b25zXG4gKiBAcGFyYW0gcHJvcHNcbiAqL1xuZXhwb3J0IGNvbnN0IEZvcm1BY3Rpb25zID0gKHByb3BzOiBGb3JtQWN0aW9uc1Byb3BzKSA9PiB7XG5cblx0Y29uc3QgeyBkaXJlY3Rpb24sIHN0eWxlLCBzdHlsZXM6IF9zdHlsZXMgfSA9IHByb3BzO1xuXHRjb25zdCBzdHlsZXMgPSBfc3R5bGVzIGFzIEZvcm1BY3Rpb25zU3R5bGVzO1xuXG5cdHJldHVybiAoXG5cdFx0PFZpZXcgc3R5bGUgPXtzdHlsZXMucm9vdH0+XG5cdFx0XG5cdFx0PFZpZXcgc3R5bGU9e1sgZGlyZWN0aW9uID09PSAnbGVmdCcgPyBzdHlsZXMucm9vdExlZnQgOiBudWxsIFxuXHRcdHx8ICBkaXJlY3Rpb24gPT09ICdyaWdodCcgPyBzdHlsZXMucm9vdFJpZ2h0IDpudWxsIFxuXHRcdHx8IGRpcmVjdGlvbiA9PT0gJ3NwYWNlLWJldHdlZW4nID8gc3R5bGVzLnJvb3RTcGFjZUJldHdlZW4gOiBudWxsLCBzdHlsZV19IHRlc3RJRD1cImZvcm0tYWN0aW9uc1wiPlxuXHRcdFx0PEZvcm1GaWVsZHMgey4uLnByb3BzfSBGaWVsZFdyYXBwZXI9e0ZpZWxkV3JhcHBlcn0gLz5cblx0XHQ8L1ZpZXc+XG5cdFx0PC9WaWV3PlxuXHQpO1xufTtcblxuRm9ybUFjdGlvbnMuZGVmYXVsdFByb3BzID0ge1xuXHRkaXJlY3Rpb246ICdyaWdodCdcbn07XG5cbkZvcm1BY3Rpb25zLmRlZmF1bHRTdHlsZXMgPSAodGhlbWU6IFRoZW1lKTogRm9ybUFjdGlvbnNTdHlsZXMgPT4gKHtcblx0ZmllbGRDb250YWluZXJMZWZ0OiB7XG5cdFx0bWFyZ2luTGVmdDogdGhlbWUuc3BhY2luZy51bml0ICogMixcblx0fSxcblx0ZmllbGRDb250YWluZXJSaWdodDoge1xuXHRcdG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnVuaXQgKiAwLFxuXHR9LFxuXHRmaWVsZENvbnRhaW5lckJldHdlZW4gOntcblx0XHRtYXJnaW5MZWZ0OiB0aGVtZS5zcGFjaW5nLnVuaXQgKiAwLFxuXHRcdG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnVuaXQgKiAwLFxuXHR9LFxuXHRyb290OiB7XG5cdFx0ZmxleERpcmVjdGlvbjogJ3JvdycsXG5cdFx0IHBhZGRpbmdWZXJ0aWNhbDogdGhlbWUuc3BhY2luZy51bml0ICogMixcblx0fSxcblx0cm9vdExlZnQ6IHtcblx0XHRqdXN0aWZ5Q29udGVudDogJ2ZsZXgtc3RhcnQnLFxuXHR9LFxuXHRyb290UmlnaHQ6IHtcblx0XHRqdXN0aWZ5Q29udGVudDogJ2ZsZXgtZW5kJyxcblx0fSxcblx0cm9vdFNwYWNlQmV0d2Vlbjoge1xuXHRcdGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsXG5cdH1cbn0pOyJdfQ==