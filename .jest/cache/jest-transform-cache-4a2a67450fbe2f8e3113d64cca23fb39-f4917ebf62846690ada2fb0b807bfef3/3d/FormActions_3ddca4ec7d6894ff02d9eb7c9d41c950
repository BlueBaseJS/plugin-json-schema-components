3bb3a361d198da41bcf347762f7c851a
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var FormFields_1 = require("../FormFields");

var react_1 = tslib_1.__importDefault(require("react"));

var components_1 = require("@bluebase/components");

var FieldWrapper = function FieldWrapper(_ref) {
  var field = _ref.field,
      parent = _ref.parent,
      children = _ref.children;
  var direction = parent.direction,
      styles = parent.styles,
      style = parent.style;
  return react_1.default.createElement(components_1.View, {
    key: field.name,
    style: [direction === 'left' ? styles.fieldContainerLeft : null || direction === 'right' ? styles.fieldContainerRight : null || direction === 'space-between' ? styles.fieldContainerBetween : null, style]
  }, children);
};

exports.FormActions = function (props) {
  var direction = props.direction,
      style = props.style,
      _styles = props.styles;
  var styles = _styles;
  debugger;
  return react_1.default.createElement(components_1.View, {
    style: [styles.root, direction === 'left' ? styles.rootLeft : null || direction === 'right' ? styles.rootRight : null || direction === 'space-between' ? styles.rootSpaceBetween : null, style],
    testID: "form-actions"
  }, react_1.default.createElement(FormFields_1.FormFields, (0, _extends2.default)({}, props, {
    FieldWrapper: FieldWrapper
  })));
};

exports.FormActions.defaultProps = {
  direction: 'right'
};

exports.FormActions.defaultStyles = function (theme) {
  return {
    fieldContainerLeft: {
      marginLeft: theme.spacing.unit * 0
    },
    fieldContainerRight: {
      marginRight: theme.spacing.unit * 0
    },
    textContainerRight: {
      marginRight: theme.spacing.unit * 2
    },
    textContainerLeft: {
      marginLeft: theme.spacing.unit * 2
    },
    fieldContainerBetween: {
      marginLeft: theme.spacing.unit * 0,
      marginRight: theme.spacing.unit * 0
    },
    root: {
      flexDirection: 'row',
      paddingVertical: theme.spacing.unit * 2
    },
    rootLeft: {
      justifyContent: 'flex-start'
    },
    rootRight: {
      justifyContent: 'flex-end'
    },
    rootSpaceBetween: {
      justifyContent: 'space-between'
    }
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vRmllbGRzL0Zvcm1BY3Rpb25zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBOztBQUdBLElBQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUVBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBOztBQXlCQSxJQUFNLFlBQVksR0FBRyxTQUFmLFlBQWUsT0FBa0Q7QUFBQSxNQUEvQyxLQUErQyxRQUEvQyxLQUErQztBQUFBLE1BQXhDLE1BQXdDLFFBQXhDLE1BQXdDO0FBQUEsTUFBakMsUUFBaUMsUUFBakMsUUFBaUM7QUFBQSxNQUU5RCxTQUY4RCxHQUVqQyxNQUZpQyxDQUU5RCxTQUY4RDtBQUFBLE1BRW5ELE1BRm1ELEdBRWpDLE1BRmlDLENBRW5ELE1BRm1EO0FBQUEsTUFFM0MsS0FGMkMsR0FFakMsTUFGaUMsQ0FFM0MsS0FGMkM7QUFJdEUsU0FDQyxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxZQUFBLENBQUEsSUFBRCxFQUFLO0FBQ0osSUFBQSxHQUFHLEVBQUUsS0FBSyxDQUFDLElBRFA7QUFFSixJQUFBLEtBQUssRUFBRSxDQUFDLFNBQVMsS0FBSyxNQUFkLEdBQXVCLE1BQU0sQ0FBQyxrQkFBOUIsR0FBbUQsUUFDeEQsU0FBUyxLQUFJLE9BRDJDLEdBQ2pDLE1BQU0sQ0FBQyxtQkFEMEIsR0FDTCxRQUNuRCxTQUFTLEtBQUssZUFEcUMsR0FDbkIsTUFBTSxDQUFDLHFCQURZLEdBQ1ksSUFGM0QsRUFHTCxLQUhLO0FBRkgsR0FBTCxFQU9DLFFBUEQsQ0FERDtBQVdBLENBZkQ7O0FBcUJhLE9BQUEsQ0FBQSxXQUFBLEdBQWMsVUFBQyxLQUFELEVBQTRCO0FBQUEsTUFFOUMsU0FGOEMsR0FFUixLQUZRLENBRTlDLFNBRjhDO0FBQUEsTUFFbkMsS0FGbUMsR0FFUixLQUZRLENBRW5DLEtBRm1DO0FBQUEsTUFFcEIsT0FGb0IsR0FFUixLQUZRLENBRTVCLE1BRjRCO0FBR3RELE1BQU0sTUFBTSxHQUFHLE9BQWY7QUFDQTtBQUNBLFNBRUMsT0FBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsWUFBQSxDQUFBLElBQUQsRUFBSztBQUFDLElBQUEsS0FBSyxFQUFFLENBQUMsTUFBTSxDQUFDLElBQVIsRUFBYyxTQUFTLEtBQUssTUFBZCxHQUF1QixNQUFNLENBQUMsUUFBOUIsR0FBeUMsUUFDaEUsU0FBUyxLQUFLLE9BRGtELEdBQ3hDLE1BQU0sQ0FBQyxTQURpQyxHQUN0QixRQUMzQyxTQUFTLEtBQUssZUFENkIsR0FDWCxNQUFNLENBQUMsZ0JBREksR0FDZSxJQUZoRCxFQUVzRCxLQUZ0RCxDQUFSO0FBRXNFLElBQUEsTUFBTSxFQUFDO0FBRjdFLEdBQUwsRUFHQyxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxZQUFBLENBQUEsVUFBRCxFQUFXLHVCQUFBLEVBQUEsRUFBSyxLQUFMLEVBQVU7QUFBRSxJQUFBLFlBQVksRUFBRTtBQUFoQixHQUFWLENBQVgsQ0FIRCxDQUZEO0FBUUEsQ0FiWTs7QUFlYixPQUFBLENBQUEsV0FBQSxDQUFZLFlBQVosR0FBMkI7QUFDMUIsRUFBQSxTQUFTLEVBQUU7QUFEZSxDQUEzQjs7QUFJQSxPQUFBLENBQUEsV0FBQSxDQUFZLGFBQVosR0FBNEIsVUFBQyxLQUFEO0FBQUEsU0FBc0M7QUFDakUsSUFBQSxrQkFBa0IsRUFBRTtBQUNuQixNQUFBLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTixDQUFjLElBQWQsR0FBcUI7QUFEZCxLQUQ2QztBQUlqRSxJQUFBLG1CQUFtQixFQUFFO0FBQ3BCLE1BQUEsV0FBVyxFQUFFLEtBQUssQ0FBQyxPQUFOLENBQWMsSUFBZCxHQUFxQjtBQURkLEtBSjRDO0FBT2pFLElBQUEsa0JBQWtCLEVBQUU7QUFDbkIsTUFBQSxXQUFXLEVBQUUsS0FBSyxDQUFDLE9BQU4sQ0FBYyxJQUFkLEdBQXFCO0FBRGYsS0FQNkM7QUFVakUsSUFBQSxpQkFBaUIsRUFBRTtBQUNsQixNQUFBLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTixDQUFjLElBQWQsR0FBcUI7QUFEZixLQVY4QztBQWFqRSxJQUFBLHFCQUFxQixFQUFFO0FBQ3RCLE1BQUEsVUFBVSxFQUFFLEtBQUssQ0FBQyxPQUFOLENBQWMsSUFBZCxHQUFxQixDQURYO0FBRXRCLE1BQUEsV0FBVyxFQUFFLEtBQUssQ0FBQyxPQUFOLENBQWMsSUFBZCxHQUFxQjtBQUZaLEtBYjBDO0FBaUJqRSxJQUFBLElBQUksRUFBRTtBQUNMLE1BQUEsYUFBYSxFQUFFLEtBRFY7QUFFSixNQUFBLGVBQWUsRUFBRSxLQUFLLENBQUMsT0FBTixDQUFjLElBQWQsR0FBcUI7QUFGbEMsS0FqQjJEO0FBcUJqRSxJQUFBLFFBQVEsRUFBRTtBQUNULE1BQUEsY0FBYyxFQUFFO0FBRFAsS0FyQnVEO0FBeUJqRSxJQUFBLFNBQVMsRUFBRTtBQUNWLE1BQUEsY0FBYyxFQUFFO0FBRE4sS0F6QnNEO0FBNEJqRSxJQUFBLGdCQUFnQixFQUFFO0FBQ2pCLE1BQUEsY0FBYyxFQUFFO0FBREM7QUE1QitDLEdBQXRDO0FBQUEsQ0FBNUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGaWVsZFdyYXBwZXJQcm9wcywgRm9ybUZpZWxkcyB9IGZyb20gJy4uL0Zvcm1GaWVsZHMnO1xuaW1wb3J0IHsgU3R5bGVQcm9wLCBWaWV3U3R5bGUgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgRm9ybUZpZWxkUHJvcHMgfSBmcm9tICcuL0Zvcm1GaWVsZFByb3BzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBUaGVtZSB9IGZyb20gJ0BibHVlYmFzZS9jb3JlJztcbmltcG9ydCB7IFZpZXcgfSBmcm9tICdAYmx1ZWJhc2UvY29tcG9uZW50cyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9ybUFjdGlvbnNTdHlsZXMge1xuXHRmaWVsZENvbnRhaW5lckxlZnQ6IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuXHRmaWVsZENvbnRhaW5lclJpZ2h0OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcblx0ZmllbGRDb250YWluZXJCZXR3ZWVuIDpTdHlsZVByb3A8Vmlld1N0eWxlPjtcblx0dGV4dENvbnRhaW5lclJpZ2h0IDogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG5cdHRleHRDb250YWluZXJMZWZ0IDogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG5cdHJvb3RTcGFjZUJldHdlZW4gOiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcblx0cm9vdDogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG5cdHJvb3RMZWZ0OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcblx0cm9vdFJpZ2h0OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGb3JtQWN0aW9uc1Byb3BzIHtcblx0dHlwZTogJ2FjdGlvbnMnO1xuXHRuYW1lOiBzdHJpbmc7XG5cdC8vdGV4dEFsaWdubWVudCA6ICdsZWZ0JyB8ICdyaWdodCcgO1xuXHRkaXJlY3Rpb246ICdsZWZ0JyB8ICdyaWdodCcgfCAnc3BhY2UtYmV0d2Vlbic7XG5cdGZpZWxkczogRm9ybUZpZWxkUHJvcHNbXTtcblx0c3R5bGU/OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcblx0c3R5bGVzPzogUGFydGlhbDxGb3JtQWN0aW9uc1N0eWxlcz47XG59XG5cblxuY29uc3QgRmllbGRXcmFwcGVyID0gKHsgZmllbGQsIHBhcmVudCxjaGlsZHJlbiB9OiBGaWVsZFdyYXBwZXJQcm9wcykgPT4ge1xuXG5cdGNvbnN0IHsgZGlyZWN0aW9uLCBzdHlsZXMsIHN0eWxlIH0gPSBwYXJlbnQ7XG5cblx0cmV0dXJuIChcblx0XHQ8Vmlld1xuXHRcdFx0a2V5PXtmaWVsZC5uYW1lfVxuXHRcdFx0c3R5bGU9e1tkaXJlY3Rpb24gPT09ICdsZWZ0JyA/IHN0eWxlcy5maWVsZENvbnRhaW5lckxlZnQgOiBudWxsIFxuXHRcdFx0fHwgZGlyZWN0aW9uID09PSdyaWdodCcgPyBzdHlsZXMuZmllbGRDb250YWluZXJSaWdodCA6bnVsbFxuXHRcdFx0fHwgZGlyZWN0aW9uID09PSAnc3BhY2UtYmV0d2VlbicgPyBzdHlsZXMuZmllbGRDb250YWluZXJCZXR3ZWVuIDogbnVsbFxuXHRcdFx0LCBzdHlsZSBdfVxuXHRcdD5cblx0XHR7Y2hpbGRyZW59XG5cdFx0PC9WaWV3PlxuXHQpO1xufTtcblxuLyoqXG4gKiBBIGNvbXBvbmVudCB0aGF0IHJlbmRlcnMgZm9ybSBhY3Rpb25zLCBpLmUuIHN1Ym1pdCBvciByZXNldCBidXR0b25zXG4gKiBAcGFyYW0gcHJvcHNcbiAqL1xuZXhwb3J0IGNvbnN0IEZvcm1BY3Rpb25zID0gKHByb3BzOiBGb3JtQWN0aW9uc1Byb3BzKSA9PiB7XG5cblx0Y29uc3QgeyBkaXJlY3Rpb24sIHN0eWxlLCBzdHlsZXM6IF9zdHlsZXMgfSA9IHByb3BzO1xuXHRjb25zdCBzdHlsZXMgPSBfc3R5bGVzIGFzIEZvcm1BY3Rpb25zU3R5bGVzO1xuXHRkZWJ1Z2dlcjtcblx0cmV0dXJuIChcblx0XHRcblx0XHQ8VmlldyBzdHlsZT17W3N0eWxlcy5yb290LCBkaXJlY3Rpb24gPT09ICdsZWZ0JyA/IHN0eWxlcy5yb290TGVmdCA6IG51bGwgXG5cdFx0fHwgIGRpcmVjdGlvbiA9PT0gJ3JpZ2h0JyA/IHN0eWxlcy5yb290UmlnaHQgOm51bGwgXG5cdFx0fHwgZGlyZWN0aW9uID09PSAnc3BhY2UtYmV0d2VlbicgPyBzdHlsZXMucm9vdFNwYWNlQmV0d2VlbiA6IG51bGwsIHN0eWxlXX0gdGVzdElEPVwiZm9ybS1hY3Rpb25zXCI+XG5cdFx0XHQ8Rm9ybUZpZWxkcyB7Li4ucHJvcHN9IEZpZWxkV3JhcHBlcj17RmllbGRXcmFwcGVyfSAvPlxuXHRcdDwvVmlldz5cblx0KTtcbn07XG5cbkZvcm1BY3Rpb25zLmRlZmF1bHRQcm9wcyA9IHtcblx0ZGlyZWN0aW9uOiAncmlnaHQnXG59O1xuXG5Gb3JtQWN0aW9ucy5kZWZhdWx0U3R5bGVzID0gKHRoZW1lOiBUaGVtZSk6IEZvcm1BY3Rpb25zU3R5bGVzID0+ICh7XG5cdGZpZWxkQ29udGFpbmVyTGVmdDoge1xuXHRcdG1hcmdpbkxlZnQ6IHRoZW1lLnNwYWNpbmcudW5pdCAqIDAsXG5cdH0sXG5cdGZpZWxkQ29udGFpbmVyUmlnaHQ6IHtcblx0XHRtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy51bml0ICogMCxcblx0fSxcblx0dGV4dENvbnRhaW5lclJpZ2h0OiB7XG5cdFx0bWFyZ2luUmlnaHQ6IHRoZW1lLnNwYWNpbmcudW5pdCAqIDIsXG5cdH0sXG5cdHRleHRDb250YWluZXJMZWZ0OiB7XG5cdFx0bWFyZ2luTGVmdDogdGhlbWUuc3BhY2luZy51bml0ICogMixcblx0fSxcblx0ZmllbGRDb250YWluZXJCZXR3ZWVuIDp7XG5cdFx0bWFyZ2luTGVmdDogdGhlbWUuc3BhY2luZy51bml0ICogMCxcblx0XHRtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy51bml0ICogMCxcblx0fSxcblx0cm9vdDoge1xuXHRcdGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuXHRcdCBwYWRkaW5nVmVydGljYWw6IHRoZW1lLnNwYWNpbmcudW5pdCAqIDIsXG5cdH0sXG5cdHJvb3RMZWZ0OiB7XG5cdFx0anVzdGlmeUNvbnRlbnQ6ICdmbGV4LXN0YXJ0Jyxcblx0XHRcblx0fSxcblx0cm9vdFJpZ2h0OiB7XG5cdFx0anVzdGlmeUNvbnRlbnQ6ICdmbGV4LWVuZCcsXG5cdH0sXG5cdHJvb3RTcGFjZUJldHdlZW46IHtcblx0XHRqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuXHR9XG59KTsiXX0=