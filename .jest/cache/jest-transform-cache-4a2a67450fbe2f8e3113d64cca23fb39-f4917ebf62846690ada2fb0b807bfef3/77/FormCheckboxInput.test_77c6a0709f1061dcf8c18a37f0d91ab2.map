{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/__tests__/FormCheckboxInput.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlueBaseApp } from '@bluebase/core';\nimport { FormCheckboxInput } from '../FormCheckboxInput';\nimport { Formik } from 'formik';\nimport Plugin from '../../../index';\nimport React from 'react';\n// import ReactNativePaperPlugin from '@bluebase/plugin-react-native-paper';\nimport MaterialUIPlugin from '@bluebase/plugin-material-ui';\nimport { mount } from 'enzyme';\nimport { waitForElement } from 'enzyme-async-helpers';\n\nconst fieldProps = {\n\tlabel: 'Auto Login',\n\tname: 'auto-login',\n\ttype: 'checkbox',\n\tvalue : false\n};\n\nconst fieldProps2 = {\n\tlabel: 'Auto Login',\n\tname: 'auto-login',\n\ttype: 'checkbox',\n\tvalue : false\n};\n\ndescribe('FormCheckboxInput', () => {\n\n\n\tit('should a checkbox with value true', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={{ 'auto-login': true }} onSubmit={onSubmit}>\n\t\t\t\t\t<FormCheckboxInput {...fieldProps as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormCheckboxInput);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\texpect(component.find('Checkbox').last().prop('name')).toBe('auto-login');\n\t\texpect(component.find('Checkbox').last().prop('checked')).toBe(true);\n\t});\n\n\n\tit('should a checkbox with value false', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={{ 'auto-login': false }} onSubmit={onSubmit}>\n\t\t\t\t\t<FormCheckboxInput {...fieldProps as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormCheckboxInput);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\texpect(component.find('Checkbox').last().prop('name')).toBe('auto-login');\n\t\texpect(component.find('Checkbox').last().prop('checked')).toBe(false);\n\t});\n\n\n\n\tit('should update checkbox value from onValueChange callback with value false', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={{ 'auto-login': false }} onSubmit={onSubmit}>\n\t\t\t\t\t<FormCheckboxInput {...fieldProps as any} onValueChange ={()=>null}/>\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormCheckboxInput);\n\n\t\t// Initial state should be false\n\n\t\t// Check fields\n\t\t// expect(component).toMatchSnapshot();\n\t\texpect(component.find('Checkbox').first().prop('name')).toBe('auto-login');\n\t\texpect(component.find('Checkbox').first().prop('checked')).toBe(false);\n\n\t\t// Update State\n\t\tconst onValueChange: any = component.find('Checkbox').first().prop('onValueChange');\n\n\t\tonValueChange(false, false);\n\t\tcomponent.update();\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// New state should be true\n\t\texpect(component.find('Checkbox').first().prop('name')).toBe('auto-login');\n\t\texpect(component.find('Checkbox').first().prop('checked')).toBe(false);\n\t\texpect(component.find('Checkbox').last().prop('value')).toBe(false);\n\n\t});\n\n\n\tit('should update checkbox value from onValueChange callback with value true ', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={{ 'auto-login': true }} onSubmit={onSubmit}>\n\t\t\t\t\t<FormCheckboxInput onValueChange = {()=>null} {...fieldProps2 as any}  />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormCheckboxInput);\n\n\t\t// Initial state should be false\n\n\t\t// Check fields\n\t\t// expect(component).toMatchSnapshot();\n\t\texpect(component.find('Checkbox').first().prop('name')).toBe('auto-login');\n\t\texpect(component.find('Checkbox').first().prop('checked')).toBe(true);\n\n\t\t// Update State\n\t\tlet onValueChange: any = component.find('Checkbox').first().prop('onValueChange');\n\n\t\t\n\n\t\tonValueChange(true, true);\n\t\tcomponent.update();\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// New state should be true\n\t\texpect(component.find('Checkbox').first().prop('name')).toBe('auto-login');\n\t\texpect(component.find('Checkbox').first().prop('checked')).toBe(true);\n\t\texpect(component.find('Checkbox').last().prop('value')).toBe(false);\n\n\t});\n\n\t// it(' should check with value = false , checked = true with onvaluechange ->value', async () => {\n\n\t// \tconst onSubmit = jest.fn();\n\t// \tconst component = mount(\n\t// \t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t// \t\t\t<Formik initialValues={{ 'auto-login': false }} onSubmit={onSubmit}>\n\t// \t\t\t\t<FormCheckboxInput  {...fieldProps2 as any} />\n\t// \t\t\t</Formik>\n\t// \t\t</BlueBaseApp>\n\t// \t);\n\n\t// \tawait waitForElement(component as any, FormCheckboxInput);\n\n\t// \t// Initial state should be false\n\n\t// \t// Check fields\n\t// \t// expect(component).toMatchSnapshot();\n\t// \texpect(component.find('Checkbox').first().prop('name')).toBe('auto-login');\n\t// \texpect(component.find('Checkbox').first().prop('checked')).toBe(false);\n\n\t// \t// Update State\n\t// \tlet onValueChange: any = component.find('Checkbox').first().prop('onValueChange');\n\t\t\n\n\t// \tonValueChange(null, true);\n\t// \tcomponent.update();\n\t// \t// expect(component).toMatchSnapshot();\n\n\t// \t// New state should be true\n\t// \t//state of checked is revered now\n\t// \texpect(component.find('Checkbox').first().prop('name')).toBe('auto-login');\n\t// \texpect(component.find('Checkbox').first().prop('checked')).toBe(true);\n\t// \texpect(component.find('Checkbox').last().prop('value')).toBe(false);\n\n\t// });\n\n});\n"]}