{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/__tests__/FormPickerInput.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlueBaseApp } from '@bluebase/core';\nimport { FormPickerInput } from '../FormPickerInput';\nimport { Formik } from 'formik';\nimport Plugin from '../../../index';\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport { waitForElement } from 'enzyme-async-helpers';\n\nconst fieldProps = {\n\tlabel: 'Language',\n\tname: 'lang',\n\ttype: 'picker',\n\n\titems: [{\n\t\tlabel: 'JavaScript',\n\t\tvalue: 'js'\n\t}, {\n\t\tlabel: 'Java',\n\t\tvalue: 'java'\n\t}]\n};\n\nconst initialValues = {\n\t'lang': 'js',\n};\n\n\ndescribe('FormPickerInput', () => {\n\n\n\tit('should render a picker with value \"js\"', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormPickerInput {...fieldProps as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormPickerInput);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\texpect(component.find('Picker').last().prop('name')).toBe('lang');\n\t\texpect(component.find('Picker').last().prop('value')).toBe('js');\n\t});\n\n\tit('should update picker value from onValueChange callback', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormPickerInput {...fieldProps as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormPickerInput);\n\n\t\t// Initial state should be false\n\t\tlet PickerComponent = component.find('Picker').last();\n\n\t\t// Check fields\n\t\texpect(PickerComponent.prop('name')).toBe('lang');\n\t\texpect(PickerComponent.prop('value')).toBe('js');\n\n\t\t// Update State\n\t\tconst onValueChange: any = PickerComponent.prop('onValueChange');\n\n\t\tonValueChange('java');\n\t\tcomponent.update();\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// New state should be true\n\t\tPickerComponent = component.find('Picker').first();\n\t\texpect(PickerComponent.prop('name')).toBe('lang');\n\t\texpect(PickerComponent.prop('value')).toBe('java');\n\t});\n\t\n\tit('should update picker value from onValueChange callback with prop', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormPickerInput onValueChange={()=>null} {...fieldProps as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormPickerInput);\n\n\t\t// Initial state should be false\n\t\tlet PickerComponent = component.find('Picker').last();\n\n\t\t// Check fields\n\t\texpect(PickerComponent.prop('name')).toBe('lang');\n\t\texpect(PickerComponent.prop('value')).toBe('js');\n\n\t\t// Update State\n\t\tconst onValueChange: any = PickerComponent.prop('onValueChange');\n\n\t\tonValueChange(null);\n\t\tcomponent.update();\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// New state should be true\n\t\tPickerComponent = component.find('Picker').first();\n\t\texpect(PickerComponent.prop('name')).toBe('lang');\n\t\texpect(PickerComponent.prop('value')).toBe(null);\n\t});\n});\n"]}