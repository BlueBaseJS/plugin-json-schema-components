{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/__tests__/FormFields.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlueBaseApp } from '@bluebase/core';\nimport { FieldWrapperProps } from '../FormFields';\nimport { FormFieldProps } from '../Fields';\nimport { FormFields } from '..';\nimport { Formik } from 'formik';\nimport Plugin from '../../index';\nimport React from 'react';\nimport { Text } from 'react-native';\nimport { mount } from 'enzyme';\nimport { waitForElement } from 'enzyme-async-helpers';\n\nconst fields: FormFieldProps[] = [{\n\tlabel: 'Username',\n\tname: 'username',\n\trequired: true,\n\ttype: 'text',\n}, {\n\tschema: { component: 'Text', text: 'Text Component' },\n\ttype: 'component',\n}, {\n\tlabel: 'Temp',\n\tmax: 32,\n\tmin: 16,\n\tname: 'temp',\n\tstep: 1,\n\ttype: 'range',\n}];\n\nconst initialValues = {\n\t// 'auto-login': true,\n\t// lang: 'js',\n\t// password: '',\n\t// remember: true,\n\ttemp: 26,\n\tusername: '',\n};\n\nconst FieldWrapper = (props: FieldWrapperProps) => (\n\t<Text>{props.field.type}</Text>\n);\n\n\ndescribe('FormFields', () => {\n\n\n\tit('should render all form fields in the schema', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormFields fields={fields} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormFields);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\texpect(component.find('FormTextInput_TextInput_Noop').last().prop('name')).toBe('username');\n\t\texpect(component.find('FormRangeInput_FormTextInput_TextInput_Noop').last().prop('name')).toBe('temp');\n\t\texpect(component.find('JsonLayout_Noop Text').last().text()).toBe('Text Component');\n\n\t\texpect(component.find('FormFields').children()).toHaveLength(3);\n\t\texpect(component.find('FormFields').childAt(0).prop('name')).toBe('username');\n\t\texpect(component.find('FormFields').childAt(1).prop('name')).toBe('1-component');\n\t\texpect(component.find('FormFields').childAt(2).prop('name')).toBe('temp');\n\t});\n\n\tit('should not render any field if fields property is undefined', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormFields fields={undefined as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormFields);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\texpect(component.find('FormFields').last().children()).toHaveLength(0);\n\t});\n\n\tit('should render custom children, if children prop is provided', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormFields fields={fields}>\n\t\t\t\t\t{(renderField) => fields.map((f, i) => renderField(f, i, {} as any))}\n\t\t\t\t\t</FormFields>\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormFields);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\texpect(component.find('FormTextInput_TextInput_Noop').last().prop('name')).toBe('username');\n\t\texpect(component.find('FormRangeInput_FormTextInput_TextInput_Noop').last().prop('name')).toBe('temp');\n\n\t\t// expect(component.find('JsonLayout_Noop').last().prop('name')).toBe('1-component');\n\t\texpect(component.find('JsonLayout_Noop Text').last().text()).toBe('Text Component');\n\t});\n\n\n\tit('should wrap fields in FieldWrapper component', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormFields fields={fields} FieldWrapper={FieldWrapper} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormFields);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\texpect(component.find('FieldWrapper').at(0).text()).toBe('text');\n\t\texpect(component.find('FieldWrapper').at(1).text()).toBe('component');\n\t\texpect(component.find('FieldWrapper').at(2).text()).toBe('range');\n\t});\n\n\n\n});\n"]}