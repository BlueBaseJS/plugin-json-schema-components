{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/__tests__/FormSubmitButton.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlueBaseApp } from '@bluebase/core';\nimport { FormSubmitButton } from '../FormSubmitButton';\nimport { Formik } from 'formik';\nimport MaterialUIPlugin from '@bluebase/plugin-material-ui';\nimport Plugin from '../../../index';\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport { waitForElement } from 'enzyme-async-helpers';\n\nconst fieldProps = [{\n\tname: 'submit',\n\ttitle: 'Login',\n    type: 'submit',\n\tnested : true\n},\n{\n\tname: 'submit',\n\ttitle: 'Login',\n    type: 'submit',\n\tnested : false\n}];\n\nconst initialValues = {\n};\n\n\ndescribe('FormSubmitButton', () => {\n\t\n\tit('should render all form fields in the schema nested true', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormSubmitButton {...fieldProps[0] as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormSubmitButton);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\t\n\t\texpect(component.find('Button').first().prop('title')).toBe('Login');\n\t\texpect(component.find('Button').first().prop('type')).toBe('submit');\n\n\t\t// const onPress: any = component.find('Button').first().prop('onPress');\n\t\t// onPress();\n\t\t// component.update();\n\n\n\t\t// const formik: any = component.find('Button').first().prop('formik');\n\t\t// formik.handleSubmit();\n\t\t// component.update();\n\n\t\tsetTimeout(() => {\n\t\t\t //expect(component).toMatchSnapshot();\n\t\t\texpect(onSubmit).toHaveBeenCalledTimes(0);\n\t\t});\n\n\t});\n\tit('should render all form fields in the schema nested false', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormSubmitButton {...fieldProps[1] as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormSubmitButton);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\t\n\t\texpect(component.find('Button').first().prop('title')).toBe('Login');\n\t\texpect(component.find('Button').first().prop('type')).toBe('submit');\n\n\t\t// const onPress: any = component.find('Button').first().prop('onPress');\n\t\t// onPress();\n\t\t// component.update();\n\n\n\t\t// const formik: any = component.find('Button').first().prop('formik');\n\t\t// formik.handleSubmit();\n\t\t// component.update();\n\n\t\tsetTimeout(() => {\n\t\t\t //expect(component).toMatchSnapshot();\n\t\t\texpect(onSubmit).toHaveBeenCalledTimes(0);\n\t\t});\n\n\t});\n});\n\n"]}