{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/__tests__/FormSwitchInput.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlueBaseApp } from '@bluebase/core';\nimport { FormSwitchInput } from '../FormSwitchInput';\nimport { Formik  } from 'formik';\nimport Plugin from '../../../index';\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport { waitForElement } from 'enzyme-async-helpers';\n\nconst fieldProps = [{\n\tlabel: 'Autos Login',\n\tname: 'muzamil',\n\ttype: 'switch',\n\tvalue : true,\n\tchecked : true,\n},\n{\n\tlabel: 'Auto Login',\n\tname: 'auto-login',\n\ttype: 'switch',\n\tvalue : false,\n\tchecked : false\n}];\n\ndescribe('FormSwitchInput', () => {\n\n\t\tconst getIn = jest.mock('formik')\n\n\n\n\tit('should a switch with value true', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={{ 'auto-login': true}} onSubmit={onSubmit} >\n\n\t\t\t\t\t<FormSwitchInput {...fieldProps[0] as any} getIn = {getIn} />\n\t\t\t\t\t\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormSwitchInput);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\texpect(component.find('Switch').last().prop('name')).toBe('muzamil');\n\t\texpect(component.find('Switch').last().prop('checked')).toBe(false);\n\t\texpect(component.find('Switch').last().prop('value')).toBe(true);\n\t});\n\n\n\tit('should a switch with value false', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={{ 'auto-login': false }} onSubmit={onSubmit}>\n\t\t\t\t\t<FormSwitchInput {...fieldProps[1] as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormSwitchInput);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\texpect(component.find('Switch').last().prop('name')).toBe('auto-login');\n\t\texpect(component.find('Switch').last().prop('checked')).toBe(false);\n\t\texpect(component.find('Switch').last().prop('value')).toBe(false);\n\n\t});\n\n\n\tit('should update switch value from onValueChange callback', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={{ 'auto-login': false }} onSubmit={onSubmit}>\n\t\t\t\t\t<FormSwitchInput {...fieldProps[0] as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormSwitchInput);\n\n\t\t// Initial state should be false\n\t\tlet SwitchComponent = component.find('Switch').last();\n\n\t\t// Check fields\n\t\texpect(SwitchComponent.prop('name')).toBe('auto-login');\n\t\texpect(SwitchComponent.prop('checked')).toBe(false);\n\n\t\t// Update State\n\t\tconst onValueChange: any = SwitchComponent.prop('onValueChange');\n\n\t\tonValueChange(null, true);\n\t\tcomponent.update();\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// New state should be true\n\t\tSwitchComponent = component.find('Switch').first();\n\t\texpect(SwitchComponent.prop('name')).toBe('auto-login');\n\t\texpect(SwitchComponent.prop('checked')).toBe(true);\n\t});\n});\n"]}