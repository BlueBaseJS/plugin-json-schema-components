4faef0fc0eddf63c50afdadfe892d837
"use strict";

/* istanbul ignore next */
var cov_2jv4lum8vq = function () {
  var path = "/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/FormActions.tsx";
  var hash = "b459d7b53482094a31c1578f33db1038e1789fdf";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/FormActions.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 81
        }
      },
      "2": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 9,
          column: 3
        }
      },
      "3": {
        start: {
          line: 11,
          column: 14
        },
        end: {
          line: 11,
          column: 30
        }
      },
      "4": {
        start: {
          line: 13,
          column: 19
        },
        end: {
          line: 13,
          column: 43
        }
      },
      "5": {
        start: {
          line: 15,
          column: 14
        },
        end: {
          line: 15,
          column: 55
        }
      },
      "6": {
        start: {
          line: 17,
          column: 19
        },
        end: {
          line: 17,
          column: 50
        }
      },
      "7": {
        start: {
          line: 19,
          column: 19
        },
        end: {
          line: 31,
          column: 1
        }
      },
      "8": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 20,
          column: 24
        }
      },
      "9": {
        start: {
          line: 21,
          column: 15
        },
        end: {
          line: 21,
          column: 26
        }
      },
      "10": {
        start: {
          line: 22,
          column: 17
        },
        end: {
          line: 22,
          column: 30
        }
      },
      "11": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 34
        }
      },
      "12": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 28
        }
      },
      "13": {
        start: {
          line: 25,
          column: 14
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "14": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 11
        }
      },
      "15": {
        start: {
          line: 27,
          column: 2
        },
        end: {
          line: 30,
          column: 15
        }
      },
      "16": {
        start: {
          line: 33,
          column: 0
        },
        end: {
          line: 44,
          column: 2
        }
      },
      "17": {
        start: {
          line: 34,
          column: 18
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "18": {
        start: {
          line: 35,
          column: 14
        },
        end: {
          line: 35,
          column: 25
        }
      },
      "19": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 28
        }
      },
      "20": {
        start: {
          line: 37,
          column: 15
        },
        end: {
          line: 37,
          column: 22
        }
      },
      "21": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 43,
          column: 14
        }
      },
      "22": {
        start: {
          line: 46,
          column: 0
        },
        end: {
          line: 48,
          column: 2
        }
      },
      "23": {
        start: {
          line: 50,
          column: 0
        },
        end: {
          line: 76,
          column: 2
        }
      },
      "24": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 75,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "FieldWrapper",
        decl: {
          start: {
            line: 19,
            column: 28
          },
          end: {
            line: 19,
            column: 40
          }
        },
        loc: {
          start: {
            line: 19,
            column: 47
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 33,
            column: 22
          },
          end: {
            line: 33,
            column: 23
          }
        },
        loc: {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 33
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 50,
            column: 36
          },
          end: {
            line: 50,
            column: 37
          }
        },
        loc: {
          start: {
            line: 50,
            column: 53
          },
          end: {
            line: 76,
            column: 1
          }
        },
        line: 50
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 183
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 29,
            column: 60
          }
        }, {
          start: {
            line: 29,
            column: 63
          },
          end: {
            line: 29,
            column: 183
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 63
          },
          end: {
            line: 29,
            column: 183
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 87
          },
          end: {
            line: 29,
            column: 113
          }
        }, {
          start: {
            line: 29,
            column: 116
          },
          end: {
            line: 29,
            column: 183
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 116
          },
          end: {
            line: 29,
            column: 183
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 148
          },
          end: {
            line: 29,
            column: 176
          }
        }, {
          start: {
            line: 29,
            column: 179
          },
          end: {
            line: 29,
            column: 183
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 39,
            column: 171
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 48
          },
          end: {
            line: 39,
            column: 63
          }
        }, {
          start: {
            line: 39,
            column: 66
          },
          end: {
            line: 39,
            column: 171
          }
        }],
        line: 39
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 66
          },
          end: {
            line: 39,
            column: 171
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 90
          },
          end: {
            line: 39,
            column: 106
          }
        }, {
          start: {
            line: 39,
            column: 109
          },
          end: {
            line: 39,
            column: 171
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 39,
            column: 109
          },
          end: {
            line: 39,
            column: 171
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 141
          },
          end: {
            line: 39,
            column: 164
          }
        }, {
          start: {
            line: 39,
            column: 167
          },
          end: {
            line: 39,
            column: 171
          }
        }],
        line: 39
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_2jv4lum8vq.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

var _extends2 =
/* istanbul ignore next */
(cov_2jv4lum8vq.s[1]++, _interopRequireDefault(require("@babel/runtime/helpers/extends")));

/* istanbul ignore next */
cov_2jv4lum8vq.s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
var tslib_1 =
/* istanbul ignore next */
(cov_2jv4lum8vq.s[3]++, require("tslib"));
var FormFields_1 =
/* istanbul ignore next */
(cov_2jv4lum8vq.s[4]++, require("../FormFields"));
var react_1 =
/* istanbul ignore next */
(cov_2jv4lum8vq.s[5]++, tslib_1.__importDefault(require("react")));
var components_1 =
/* istanbul ignore next */
(cov_2jv4lum8vq.s[6]++, require("@bluebase/components"));

/* istanbul ignore next */
cov_2jv4lum8vq.s[7]++;

var FieldWrapper = function FieldWrapper(_ref) {
  /* istanbul ignore next */
  cov_2jv4lum8vq.f[0]++;
  var field =
  /* istanbul ignore next */
  (cov_2jv4lum8vq.s[8]++, _ref.field),
      parent =
  /* istanbul ignore next */
  (cov_2jv4lum8vq.s[9]++, _ref.parent),
      children =
  /* istanbul ignore next */
  (cov_2jv4lum8vq.s[10]++, _ref.children);
  var direction =
  /* istanbul ignore next */
  (cov_2jv4lum8vq.s[11]++, parent.direction),
      styles =
  /* istanbul ignore next */
  (cov_2jv4lum8vq.s[12]++, parent.styles),
      style =
  /* istanbul ignore next */
  (cov_2jv4lum8vq.s[13]++, parent.style);

  /* istanbul ignore next */
  cov_2jv4lum8vq.s[14]++;
  debugger;

  /* istanbul ignore next */
  cov_2jv4lum8vq.s[15]++;
  return react_1.default.createElement(components_1.View, {
    key: field.name,
    style: [direction === "left" ?
    /* istanbul ignore next */
    (cov_2jv4lum8vq.b[0][0]++, styles.fieldContainerLeft) :
    /* istanbul ignore next */
    (cov_2jv4lum8vq.b[0][1]++, direction === "right" ?
    /* istanbul ignore next */
    (cov_2jv4lum8vq.b[1][0]++, styles.fieldContainerRight) :
    /* istanbul ignore next */
    (cov_2jv4lum8vq.b[1][1]++, direction === "space-between" ?
    /* istanbul ignore next */
    (cov_2jv4lum8vq.b[2][0]++, styles.fieldContainerBetween) :
    /* istanbul ignore next */
    (cov_2jv4lum8vq.b[2][1]++, null))), style]
  }, children);
};

/* istanbul ignore next */
cov_2jv4lum8vq.s[16]++;

exports.FormActions = function (props) {
  /* istanbul ignore next */
  cov_2jv4lum8vq.f[1]++;

  var direction =
  /* istanbul ignore next */
  (cov_2jv4lum8vq.s[17]++, props.direction),
      style =
  /* istanbul ignore next */
  (cov_2jv4lum8vq.s[18]++, props.style),
      _styles =
  /* istanbul ignore next */
  (cov_2jv4lum8vq.s[19]++, props.styles);

  var styles =
  /* istanbul ignore next */
  (cov_2jv4lum8vq.s[20]++, _styles);

  /* istanbul ignore next */
  cov_2jv4lum8vq.s[21]++;
  return react_1.default.createElement(components_1.View, {
    style: [styles.root, direction === 'left' ?
    /* istanbul ignore next */
    (cov_2jv4lum8vq.b[3][0]++, styles.rootLeft) :
    /* istanbul ignore next */
    (cov_2jv4lum8vq.b[3][1]++, direction === 'right' ?
    /* istanbul ignore next */
    (cov_2jv4lum8vq.b[4][0]++, styles.rootRight) :
    /* istanbul ignore next */
    (cov_2jv4lum8vq.b[4][1]++, direction === 'space-between' ?
    /* istanbul ignore next */
    (cov_2jv4lum8vq.b[5][0]++, styles.rootSpaceBetween) :
    /* istanbul ignore next */
    (cov_2jv4lum8vq.b[5][1]++, null))), style],
    testID: "form-actions"
  }, react_1.default.createElement(FormFields_1.FormFields, (0, _extends2.default)({
    FieldWrapper: FieldWrapper
  }, props)));
};

/* istanbul ignore next */
cov_2jv4lum8vq.s[22]++;
exports.FormActions.defaultProps = {
  direction: 'right'
};

/* istanbul ignore next */
cov_2jv4lum8vq.s[23]++;

exports.FormActions.defaultStyles = function (theme) {
  /* istanbul ignore next */
  cov_2jv4lum8vq.f[2]++;
  cov_2jv4lum8vq.s[24]++;
  return {
    fieldContainerLeft: {
      marginLeft: theme.spacing.unit * 2
    },
    fieldContainerRight: {
      marginRight: 16
    },
    fieldContainerBetween: {
      marginLeft: theme.spacing.unit * 0,
      marginRight: theme.spacing.unit * 0
    },
    root: {
      flexDirection: 'row',
      marginRight: 16
    },
    rootLeft: {
      justifyContent: 'flex-start'
    },
    rootRight: {
      justifyContent: 'flex-end'
    },
    rootSpaceBetween: {
      justifyContent: 'space-between'
    }
  };
};