6cb90063308147290992635f3b1fad69
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var components_1 = require("@bluebase/components");

var formik_1 = require("formik");

var react_1 = tslib_1.__importDefault(require("react"));

var BaseFormField = components_1.getComponent('BaseFormField');

exports.FormPickerInput = function (_a) {
  var type = _a.type,
      items = _a.items,
      props = tslib_1.__rest(_a, ["type", "items"]);

  return react_1.default.createElement(formik_1.Field, (0, _extends2.default)({}, props), function (_ref) {
    var field = _ref.field,
        form = _ref.form;
    var inputProps = (0, _extends2.default)({}, props, field, {
      onValueChange: function onValueChange(value) {
        form.setFieldValue(field.name, value);

        if (value !== undefined && props.onValueChange) {
          props.onValueChange(field.name, value);
        }
      }
    });
    return react_1.default.createElement(BaseFormField, (0, _extends2.default)({
      MainComponent: components_1.Picker
    }, inputProps), items.map(function (i) {
      return react_1.default.createElement(components_1.Picker.Item, (0, _extends2.default)({
        key: String(i.value)
      }, i));
    }));
  });
};

exports.FormPickerInput.defaultProps = {};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vRmllbGRzL0Zvcm1QaWNrZXJJbnB1dC50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQSxZQUFBLEdBQUEsT0FBQSxDQUFBLHNCQUFBLENBQUE7O0FBRUEsSUFBQSxRQUFBLEdBQUEsT0FBQSxDQUFBLFFBQUEsQ0FBQTs7QUFDQSxJQUFBLE9BQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBLE9BQUEsQ0FBQSxPQUFBLENBQUEsQ0FBQTs7QUFRQSxJQUFNLGFBQWEsR0FBRyxZQUFBLENBQUEsWUFBQSxDQUFpQyxlQUFqQyxDQUF0Qjs7QUFFYSxPQUFBLENBQUEsZUFBQSxHQUFrQixVQUFDLEVBQUQsRUFBb0Q7QUFBQSxNQUFqRCxJQUFpRCxHQUF0QyxFQUFzQyxDQUFqRCxJQUFpRDtBQUFBLE1BQTNDLEtBQTJDLEdBQXRDLEVBQXNDLENBQTNDLEtBQTJDO0FBQUEsTUFBcEMsS0FBb0MsR0FBcEMsT0FBQSxDQUFBLE1BQUEsQ0FBQSxFQUFBLEVBQUEsQ0FBQSxNQUFBLEVBQUEsT0FBQSxDQUFBLENBQW9DOztBQUVsRixTQUNDLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLFFBQUEsQ0FBQSxLQUFELEVBQU0sdUJBQUEsRUFBQSxFQUFLLEtBQUwsQ0FBTixFQUNDLGdCQUF5QjtBQUFBLFFBQXRCLEtBQXNCLFFBQXRCLEtBQXNCO0FBQUEsUUFBZixJQUFlLFFBQWYsSUFBZTtBQUV6QixRQUFNLFVBQVUsR0FBQSx1QkFBQSxFQUFBLEVBQ1osS0FEWSxFQUVaLEtBRlksRUFFUDtBQUNSLE1BQUEsYUFBYSxFQUFFLHVCQUFDLEtBQUQsRUFBZTtBQUM5QixRQUFBLElBQUksQ0FBQyxhQUFMLENBQW1CLEtBQUssQ0FBQyxJQUF6QixFQUErQixLQUEvQjs7QUFFQSxZQUFJLEtBQUssS0FBSyxTQUFWLElBQXVCLEtBQUssQ0FBQyxhQUFqQyxFQUFnRDtBQUM5QyxVQUFBLEtBQUssQ0FBQyxhQUFOLENBQW9CLEtBQUssQ0FBQyxJQUExQixFQUFnQyxLQUFoQztBQUNBO0FBQ0Q7QUFQTyxLQUZPLENBQWhCO0FBWUEsV0FDQyxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxhQUFELEVBQWMsdUJBQUE7QUFBQyxNQUFBLGFBQWEsRUFBRSxZQUFBLENBQUE7QUFBaEIsS0FBQSxFQUE0QixVQUE1QixDQUFkLEVBQ0MsS0FBSyxDQUFDLEdBQU4sQ0FBVSxVQUFBLENBQUM7QUFBQSxhQUFJLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBQSxNQUFBLENBQU8sSUFBUixFQUFZLHVCQUFBO0FBQUMsUUFBQSxHQUFHLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFIO0FBQVosT0FBQSxFQUEyQixDQUEzQixDQUFaLENBQUo7QUFBQSxLQUFYLENBREQsQ0FERDtBQUtBLEdBcEJELENBREQ7QUF3QkEsQ0ExQlk7O0FBNEJiLE9BQUEsQ0FBQSxlQUFBLENBQWdCLFlBQWhCLEdBQStCLEVBQS9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlja2VyLCBQaWNrZXJJdGVtUHJvcHMsIFBpY2tlclByb3BzLCBnZXRDb21wb25lbnQgfSBmcm9tICdAYmx1ZWJhc2UvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBCYXNlRm9ybUZpZWxkUHJvcHMgfSBmcm9tICcuLi9CYXNlRm9ybUZpZWxkJztcbmltcG9ydCB7IEZpZWxkIH0gZnJvbSAnZm9ybWlrJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9ybVBpY2tlcklucHV0UHJvcHMgZXh0ZW5kcyBQaWNrZXJQcm9wcyB7XG5cdHR5cGU6ICdwaWNrZXInLFxuXHRuYW1lOiBzdHJpbmcsXG5cdGl0ZW1zOiBQaWNrZXJJdGVtUHJvcHNbXSxcbn1cblxuY29uc3QgQmFzZUZvcm1GaWVsZCA9IGdldENvbXBvbmVudDxCYXNlRm9ybUZpZWxkUHJvcHM+KCdCYXNlRm9ybUZpZWxkJyk7XG5cbmV4cG9ydCBjb25zdCBGb3JtUGlja2VySW5wdXQgPSAoeyB0eXBlLCBpdGVtcywgLi4ucHJvcHMgfTogRm9ybVBpY2tlcklucHV0UHJvcHMpID0+IHtcblxuXHRyZXR1cm4gKFxuXHRcdDxGaWVsZCB7Li4ucHJvcHN9PlxuXHRcdHsoeyBmaWVsZCwgZm9ybSB9OiBhbnkpID0+IHtcblxuXHRcdFx0Y29uc3QgaW5wdXRQcm9wczogYW55ID0ge1xuXHRcdFx0XHQuLi5wcm9wcyxcblx0XHRcdFx0Li4uZmllbGQsXG5cdFx0XHRcdG9uVmFsdWVDaGFuZ2U6ICh2YWx1ZTogYW55KSA9PiB7XG5cdFx0XHRcdGZvcm0uc2V0RmllbGRWYWx1ZShmaWVsZC5uYW1lLCB2YWx1ZSk7XG5cdFx0XHRcdFxuXHRcdFx0XHRpZiAodmFsdWUgIT09IHVuZGVmaW5lZCAmJiBwcm9wcy5vblZhbHVlQ2hhbmdlKSB7XG5cdFx0XHRcdFx0XHRwcm9wcy5vblZhbHVlQ2hhbmdlKGZpZWxkLm5hbWUsIHZhbHVlKVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fTtcblxuXHRcdFx0cmV0dXJuIChcblx0XHRcdFx0PEJhc2VGb3JtRmllbGQgTWFpbkNvbXBvbmVudD17UGlja2VyfSB7Li4uaW5wdXRQcm9wc30+XG5cdFx0XHRcdHtpdGVtcy5tYXAoaSA9PiA8UGlja2VyLkl0ZW0ga2V5PXtTdHJpbmcoaS52YWx1ZSl9IHsuLi5pfSAvPil9XG5cdFx0XHRcdDwvQmFzZUZvcm1GaWVsZD5cblx0XHRcdCk7XG5cdFx0fX1cblx0XHQ8L0ZpZWxkPlxuXHQpO1xufTtcblxuRm9ybVBpY2tlcklucHV0LmRlZmF1bHRQcm9wcyA9IHtcbn07XG4iXX0=