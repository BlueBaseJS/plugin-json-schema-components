{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/FormRangeInput.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAUA,IAAM,aAAa,GAAG,YAAA,CAAA,YAAA,CAAiC,eAAjC,CAAtB;;AAEa,OAAA,CAAA,cAAA,GAAiB,UAAC,EAAD,EAA+C;AAAA,MAA5C,GAA4C,GAApC,EAAoC,CAA5C,GAA4C;AAAA,MAAvC,GAAuC,GAApC,EAAoC,CAAvC,GAAuC;AAAA,MAAlC,IAAkC,GAAlC,OAAA,CAAA,MAAA,CAAA,EAAA,EAAA,CAAA,KAAA,EAAA,KAAA,CAAA,CAAkC;;AAE5E,MAAM,KAAK,GAAA,uBAAA,EAAA,EACP,IADO,EACH;AACP,IAAA,YAAY,EAAE,GADP;AAEP,IAAA,YAAY,EAAE;AAFP,GADG,CAAX;AAMA,SACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,QAAA,CAAA,KAAD,EAAM,uBAAA,EAAA,EAAK,KAAL,CAAN,EACC,gBAAyB;AAAA,QAAtB,KAAsB,QAAtB,KAAsB;AAAA,QAAf,IAAe,QAAf,IAAe;AAEzB,QAAM,UAAU,GAAA,uBAAA,EAAA,EACZ,KADY,EACP;AACR,MAAA,IAAI,EAAE,KAAK,CAAC,IADJ;AAER,MAAA,aAAa,EAAE,uBAAC,KAAD,EAAe;AAC7B,QAAA,IAAI,CAAC,aAAL,CAAmB,KAAK,CAAC,IAAzB,EAA+B,KAA/B,GACA,CAAC,KAAD,GAAU,IAAV,GAAiB,IAAI,CAAC,aAAL,GAAqB,IAAI,CAAC,aAAL,CAAmB,KAAnB,CAArB,GAAiD,IADlE;AAGA,OANO;AAQR,MAAA,KAAK,EAAE,KAAK,CAAC;AARL,KADO,CAAhB;AAYA,WAAQ,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,aAAD,EAAc,uBAAA;AAAC,MAAA,aAAa,EAAE,YAAA,CAAA,MAAhB;AAAwB,MAAA,KAAK,EAAE,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,IAAD,EAAK,IAAL,EAAO,KAAK,CAAC,KAAb;AAA/B,KAAA,EAA+D,UAA/D,CAAd,CAAR;AACA,GAhBD,CADD;AAoBA,CA5BY;;AA8Bb,OAAA,CAAA,cAAA,CAAe,YAAf,GAA8B,EAA9B","sourcesContent":["import { Slider, SliderProps, Text, getComponent } from '@bluebase/components';\nimport { BaseFormFieldProps } from '../BaseFormField';\nimport { Field } from 'formik';\nimport React from 'react';\n\nexport interface FormRangeInputProps extends SliderProps {\n\ttype: 'range',\n\tname: string,\n\tmin?: number;\n\tmax?: number;\n\tstep?: number;\n}\n\nconst BaseFormField = getComponent<BaseFormFieldProps>('BaseFormField');\n\nexport const FormRangeInput = ({ min, max, ...rest }: FormRangeInputProps) => {\n\n\tconst props = {\n\t\t...rest,\n\t\tmaximumValue: max,\n\t\tminimumValue: min,\n\t};\n\n\treturn (\n\t\t<Field {...props}>\n\t\t{({ field, form }: any) => {\n\n\t\t\tconst inputProps = {\n\t\t\t\t...props,\n\t\t\t\tname: field.name,\n\t\t\t\tonValueChange: (value: any) => {\n\t\t\t\t\tform.setFieldValue(field.name, value) ,\n\t\t\t\t\t!value ?  null : rest.onValueChange ? rest.onValueChange(value) : null;\n\n\t\t\t\t},\n\n\t\t\t\tvalue: field.value,\n\t\t\t};\n\n\t\t\treturn (<BaseFormField MainComponent={Slider} right={<Text>{field.value}</Text>} {...inputProps} />);\n\t\t}}\n\t</Field>\n\t);\n};\n\nFormRangeInput.defaultProps = {\n};\n"]}