1e80665a79f50ba629723651991763b9
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var components_1 = require("@bluebase/components");

var formik_1 = require("formik");

var react_1 = tslib_1.__importDefault(require("react"));

var BaseFormField = components_1.getComponent('BaseFormField');
var TextInput = components_1.getComponent('TextInput');

var validate = function validate(props) {
  return function (value) {
    var required = props.required,
        type = props.type;
    var error;

    if (required === true && !value) {
      error = 'This field is required';
    } else if (type === 'text' && /^(0|[1-9]\d*)(\.\d+)?$/.test(value)) {
      error = 'Should only be alphabet';
    } else if (type === 'number' && !/^(0|[1-9]\d*)(\.\d+)?$/.test(value)) {
        error = 'Please enter a valid number';
      } else if (type === 'email' && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(value)) {
          error = 'Please enter a valid email address';
        } else if (type === 'url' && !/^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/.test(value)) {
          error = 'Please enter a valid Url';
        }

    return error;
  };
};

exports.FormTextInput = function (props) {
  return react_1.default.createElement(formik_1.Field, (0, _extends2.default)({}, props, {
    validate: props.validate || validate(props)
  }), function (_ref) {
    var field = _ref.field,
        form = _ref.form;
    var name = props.name;
    var inputProps = (0, _extends2.default)({}, field, {
      onChange: undefined
    }, props, {
      error: form.errors[name] && form.touched[name] || props.error,
      helperText: form.errors[name] || props.helperText,
      onChangeText: function onChangeText(text) {
        form.handleChange(name)(text);
      }
    });
    return react_1.default.createElement(BaseFormField, (0, _extends2.default)({}, inputProps));
  });
};

exports.FormTextInput.defaultProps = {
  MainComponent: TextInput
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vRmllbGRzL0Zvcm1UZXh0SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBOztBQUlBLElBQUEsUUFBQSxHQUFBLE9BQUEsQ0FBQSxRQUFBLENBQUE7O0FBQ0EsSUFBQSxPQUFBLEdBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBRUEsSUFBTSxhQUFhLEdBQUcsWUFBQSxDQUFBLFlBQUEsQ0FBaUMsZUFBakMsQ0FBdEI7QUFDQSxJQUFNLFNBQVMsR0FBRyxZQUFBLENBQUEsWUFBQSxDQUE2QixXQUE3QixDQUFsQjs7QUFjQSxJQUFNLFFBQVEsR0FBRyxTQUFYLFFBQVcsQ0FBQyxLQUFEO0FBQUEsU0FBK0IsVUFBQyxLQUFELEVBQWtCO0FBQUEsUUFDekQsUUFEeUQsR0FDdEMsS0FEc0MsQ0FDekQsUUFEeUQ7QUFBQSxRQUMvQyxJQUQrQyxHQUN0QyxLQURzQyxDQUMvQyxJQUQrQztBQUdqRSxRQUFJLEtBQUo7O0FBR0EsUUFBSSxRQUFRLEtBQUssSUFBYixJQUFxQixDQUFDLEtBQTFCLEVBQWtDO0FBQ2pDLE1BQUEsS0FBSyxHQUFHLHdCQUFSO0FBQ0EsS0FGRCxNQUlLLElBQUcsSUFBSSxLQUFLLE1BQVQsSUFBbUIseUJBQXlCLElBQXpCLENBQThCLEtBQTlCLENBQXRCLEVBQTJEO0FBQy9ELE1BQUEsS0FBSyxHQUFHLHlCQUFSO0FBQ0EsS0FGSSxNQUtBLElBQUksSUFBSSxLQUFLLFFBQVQsSUFBcUIsQ0FBQyx5QkFBeUIsSUFBekIsQ0FBOEIsS0FBOUIsQ0FBMUIsRUFBK0Q7QUFDbkUsUUFBQSxLQUFLLEdBQUcsNkJBQVI7QUFDQSxPQUZJLE1BS0EsSUFBSSxJQUFJLEtBQUssT0FBVCxJQUFvQixDQUFDLDRDQUE0QyxJQUE1QyxDQUFpRCxLQUFqRCxDQUF6QixFQUFrRjtBQUN0RixVQUFBLEtBQUssR0FBRyxvQ0FBUjtBQUNBLFNBRkksTUFJQSxJQUFJLElBQUksS0FBSyxLQUFULElBQWtCLENBQUMsMEhBQTBILElBQTFILENBQStILEtBQS9ILENBQXZCLEVBQTZKO0FBRWpLLFVBQUEsS0FBSyxHQUFHLDBCQUFSO0FBQ0E7O0FBRUQsV0FBTyxLQUFQO0FBQ0EsR0E5QmdCO0FBQUEsQ0FBakI7O0FBZ0NhLE9BQUEsQ0FBQSxhQUFBLEdBQWdCLFVBQUMsS0FBRDtBQUFBLFNBQzVCLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLFFBQUEsQ0FBQSxLQUFELEVBQU0sdUJBQUEsRUFBQSxFQUFLLEtBQUwsRUFBVTtBQUFFLElBQUEsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFOLElBQWtCLFFBQVEsQ0FBQyxLQUFEO0FBQXRDLEdBQVYsQ0FBTixFQUNFLGdCQUF5QjtBQUFBLFFBQXRCLEtBQXNCLFFBQXRCLEtBQXNCO0FBQUEsUUFBZixJQUFlLFFBQWYsSUFBZTtBQUN6QixRQUFNLElBQUksR0FBRyxLQUFLLENBQUMsSUFBbkI7QUFFQSxRQUFNLFVBQVUsR0FBQSx1QkFBQSxFQUFBLEVBQ1osS0FEWSxFQUNQO0FBQ1IsTUFBQSxRQUFRLEVBQUU7QUFERixLQURPLEVBR1osS0FIWSxFQUdQO0FBQ1IsTUFBQSxLQUFLLEVBQUcsSUFBSSxDQUFDLE1BQUwsQ0FBWSxJQUFaLEtBQXFCLElBQUksQ0FBQyxPQUFMLENBQWEsSUFBYixDQUF0QixJQUE2QyxLQUFLLENBQUMsS0FEbEQ7QUFFUixNQUFBLFVBQVUsRUFBRSxJQUFJLENBQUMsTUFBTCxDQUFZLElBQVosS0FBcUIsS0FBSyxDQUFDLFVBRi9CO0FBSVIsTUFBQSxZQUFZLEVBQUUsc0JBQUMsSUFBRCxFQUFpQjtBQUM5QixRQUFBLElBQUksQ0FBQyxZQUFMLENBQWtCLElBQWxCLEVBQXdCLElBQXhCO0FBQ0E7QUFOTyxLQUhPLENBQWhCO0FBV0EsV0FBUSxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxhQUFELEVBQWMsdUJBQUEsRUFBQSxFQUFLLFVBQUwsQ0FBZCxDQUFSO0FBQ0EsR0FoQkYsQ0FENEI7QUFBQSxDQUFoQjs7QUFxQmIsT0FBQSxDQUFBLGFBQUEsQ0FBYyxZQUFkLEdBQTZCO0FBQzVCLEVBQUEsYUFBYSxFQUFFO0FBRGEsQ0FBN0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZXh0SW5wdXRQcm9wcywgZ2V0Q29tcG9uZW50IH0gZnJvbSAnQGJsdWViYXNlL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgQmFzZUZvcm1GaWVsZFByb3BzIH0gZnJvbSAnLi4vQmFzZUZvcm1GaWVsZCc7XG5pbXBvcnQgeyBTdHlsZVByb3AsIFZpZXdTdHlsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbmltcG9ydCB7IEZpZWxkIH0gZnJvbSAnZm9ybWlrJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IEJhc2VGb3JtRmllbGQgPSBnZXRDb21wb25lbnQ8QmFzZUZvcm1GaWVsZFByb3BzPignQmFzZUZvcm1GaWVsZCcpO1xuY29uc3QgVGV4dElucHV0ID0gZ2V0Q29tcG9uZW50PFRleHRJbnB1dFByb3BzPignVGV4dElucHV0Jyk7XG5cbmV4cG9ydCB0eXBlIEZvcm1UZXh0SW5wdXRQcm9wczxUID0ge30+ID0gVGV4dElucHV0UHJvcHMgJiBCYXNlRm9ybUZpZWxkUHJvcHMgJiBUICYge1xuXHRjaGlsZHJlbj86IFJlYWN0LlJlYWN0Tm9kZTtcblx0dmFsaWRhdGU/OiAoKHZhbHVlOiBhbnkpID0+IHN0cmluZyB8IFByb21pc2U8dm9pZD4gfCB1bmRlZmluZWQpO1xuXHRuYW1lOiBzdHJpbmc7XG5cdHR5cGU/OiBzdHJpbmc7XG5cdHZhbHVlPzogYW55O1xuXHRpbm5lclJlZj86IChpbnN0YW5jZTogYW55KSA9PiB2b2lkO1xuXHRzdHlsZT86IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuXHQvL1trZXk6IHN0cmluZ106IGFueVxuXHRtYXhMZW5ndGggPyA6IG51bWJlclxufTtcblxuY29uc3QgdmFsaWRhdGUgPSAocHJvcHM6IEZvcm1UZXh0SW5wdXRQcm9wcykgPT4gKHZhbHVlOiBzdHJpbmcpID0+IHtcblx0Y29uc3QgeyByZXF1aXJlZCwgdHlwZSB9ID0gcHJvcHM7XG5cblx0bGV0IGVycm9yO1xuXG5cdC8vIElmIGZpZWxkIGlzIHJlcXVpcmVkIC8vdGVzdGVkXG5cdGlmIChyZXF1aXJlZCA9PT0gdHJ1ZSAmJiAhdmFsdWUgKSB7XG5cdFx0ZXJyb3IgPSAnVGhpcyBmaWVsZCBpcyByZXF1aXJlZCc7XG5cdH1cblxuXHRlbHNlIGlmKHR5cGUgPT09ICd0ZXh0JyAmJiAvXigwfFsxLTldXFxkKikoXFwuXFxkKyk/JC8udGVzdCh2YWx1ZSkpe1xuXHRcdGVycm9yID0gJ1Nob3VsZCBvbmx5IGJlIGFscGhhYmV0Jztcblx0fVxuXG5cdC8vaWYgbnVtYmVyIGZpZWxkIGlzIGluY29ycmVjdFxuXHRlbHNlIGlmICh0eXBlID09PSAnbnVtYmVyJyAmJiAhL14oMHxbMS05XVxcZCopKFxcLlxcZCspPyQvLnRlc3QodmFsdWUpKXtcblx0XHRlcnJvciA9ICdQbGVhc2UgZW50ZXIgYSB2YWxpZCBudW1iZXInXG5cdH1cblxuXHQvLyBJZiBmaWVsZCAnZW1haWwnXG5cdGVsc2UgaWYgKHR5cGUgPT09ICdlbWFpbCcgJiYgIS9eW0EtWjAtOS5fJSstXStAW0EtWjAtOS4tXStcXC5bQS1aXXsyLDR9JC9pLnRlc3QodmFsdWUpKSB7XG5cdFx0ZXJyb3IgPSAnUGxlYXNlIGVudGVyIGEgdmFsaWQgZW1haWwgYWRkcmVzcyc7XG5cdH1cblxuXHRlbHNlIGlmICh0eXBlID09PSAndXJsJyAmJiAhL14oaHR0cDpcXC9cXC93d3dcXC58aHR0cHM6XFwvXFwvd3d3XFwufGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcLyk/W2EtejAtOV0rKFtcXC1cXC5dezF9W2EtejAtOV0rKSpcXC5bYS16XXsyLDV9KDpbMC05XXsxLDV9KT8oXFwvLiopPyQvLnRlc3QodmFsdWUpKXtcblxuXHRcdGVycm9yID0gJ1BsZWFzZSBlbnRlciBhIHZhbGlkIFVybCc7XG5cdH1cblxuXHRyZXR1cm4gZXJyb3I7XG59O1xuXG5leHBvcnQgY29uc3QgRm9ybVRleHRJbnB1dCA9IChwcm9wczogRm9ybVRleHRJbnB1dFByb3BzKSA9PiAoXG5cdDxGaWVsZCB7Li4ucHJvcHN9IHZhbGlkYXRlPXtwcm9wcy52YWxpZGF0ZSB8fCB2YWxpZGF0ZShwcm9wcyl9PlxuXHRcdHsoeyBmaWVsZCwgZm9ybSB9OiBhbnkpID0+IHtcblx0XHRcdGNvbnN0IG5hbWUgPSBwcm9wcy5uYW1lO1xuXG5cdFx0XHRjb25zdCBpbnB1dFByb3BzID0ge1xuXHRcdFx0XHQuLi5maWVsZCxcblx0XHRcdFx0b25DaGFuZ2U6IHVuZGVmaW5lZCxcblx0XHRcdFx0Li4ucHJvcHMsXG5cdFx0XHRcdGVycm9yOiAoZm9ybS5lcnJvcnNbbmFtZV0gJiYgZm9ybS50b3VjaGVkW25hbWVdKSB8fCBwcm9wcy5lcnJvcixcblx0XHRcdFx0aGVscGVyVGV4dDogZm9ybS5lcnJvcnNbbmFtZV0gfHwgcHJvcHMuaGVscGVyVGV4dCxcblx0XHRcdFx0XG5cdFx0XHRcdG9uQ2hhbmdlVGV4dDogKHRleHQ6IHN0cmluZykgPT4ge1xuXHRcdFx0XHRcdGZvcm0uaGFuZGxlQ2hhbmdlKG5hbWUpKHRleHQpO1xuXHRcdFx0XHR9LFxuXHRcdFx0fTtcblx0XHRcdHJldHVybiAoPEJhc2VGb3JtRmllbGQgey4uLmlucHV0UHJvcHN9IC8+KTtcblx0XHR9fVxuXHQ8L0ZpZWxkPlxuKTtcblxuRm9ybVRleHRJbnB1dC5kZWZhdWx0UHJvcHMgPSB7XG5cdE1haW5Db21wb25lbnQ6IFRleHRJbnB1dFxufTsiXX0=