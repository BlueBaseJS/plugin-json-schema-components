{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/FormActions.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAGA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,YAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;;AAsBA,IAAM,YAAY,GAAG,SAAf,YAAe,OAAkD;AAAA,MAA/C,KAA+C,QAA/C,KAA+C;AAAA,MAAxC,MAAwC,QAAxC,MAAwC;AAAA,MAAjC,QAAiC,QAAjC,QAAiC;AAAA,MAE9D,SAF8D,GAElC,MAFkC,CAE9D,SAF8D;AAAA,MAEnD,MAFmD,GAElC,MAFkC,CAEnD,MAFmD;AAAA,MAE3C,KAF2C,GAElC,MAFkC,CAE3C,KAF2C;AAItE,SACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,IAAD,EAAK;AACL,IAAA,GAAG,EAAE,KAAK,CAAC,IADN;AAEL,IAAA,KAAK,EAAE,SAAS,KAAK,MAAd,GAAsB,MAAM,CAAC,kBAA7B,GAAkD,SAAS,KAAK,OAAd,GAAwB,MAAM,CAAC,mBAA/B,GAAoD;AAFxG,GAAL,EAIA,QAJA,CADD;AAQA,CAZD;;AAkBa,OAAA,CAAA,WAAA,GAAc,UAAC,KAAD,EAA4B;AAAA,MAE9C,SAF8C,GAER,KAFQ,CAE9C,SAF8C;AAAA,MAEnC,KAFmC,GAER,KAFQ,CAEnC,KAFmC;AAAA,MAEpB,OAFoB,GAER,KAFQ,CAE5B,MAF4B;AAGtD,MAAM,MAAM,GAAG,OAAf;AACA,SAEC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,IAAD,EAAK;AAAC,IAAA,KAAK,EAAE,CAAC,MAAM,CAAC,IAAR,EAAc,SAAS,KAAK,MAAd,GAAuB,MAAM,CAAC,QAA9B,GAA0C,SAAS,KAAK,OAAd,GAAwB,MAAM,CAAC,SAA/B,GAA2C,SAAS,KAAK,eAAd,GAAgC,MAAM,CAAC,gBAAvC,GAA0D,IAA7J,EAAmK,KAAnK,CAAR;AAEL,IAAA,MAAM,EAAC;AAFF,GAAL,EAGA,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAA,UAAD,EAAW,uBAAA,EAAA,EAAK,KAAL,EAAU;AAAE,IAAA,YAAY,EAAE;AAAhB,GAAV,CAAX,CAHA,CAFD;AAQA,CAZY;;AAcb,OAAA,CAAA,WAAA,CAAY,YAAZ,GAA2B,EAA3B;;AAIA,OAAA,CAAA,WAAA,CAAY,aAAZ,GAA4B,UAAC,KAAD;AAAA,SAAsC;AACjE,IAAA,kBAAkB,EAAE;AACnB,MAAA,UAAU,EAAE,KAAK,CAAC,OAAN,CAAc,IAAd,GAAqB;AADd,KAD6C;AAIjE,IAAA,mBAAmB,EAAE;AACpB,MAAA,WAAW,EAAE,KAAK,CAAC,OAAN,CAAc,IAAd,GAAqB;AADd,KAJ4C;AAQjE,IAAA,qBAAqB,EAAE,EAR0C;AAYjE,IAAA,IAAI,EAAE;AACL,MAAA,aAAa,EAAE,KADV;AAEJ,MAAA,eAAe,EAAE,KAAK,CAAC,OAAN,CAAc,IAAd,GAAqB;AAFlC,KAZ2D;AAgBjE,IAAA,QAAQ,EAAE;AACT,MAAA,cAAc,EAAE;AADP,KAhBuD;AAoBjE,IAAA,SAAS,EAAE;AACV,MAAA,cAAc,EAAE;AADN,KApBsD;AAuBjE,IAAA,gBAAgB,EAAE;AACjB,MAAA,cAAc,EAAE;AADC;AAvB+C,GAAtC;AAAA,CAA5B","sourcesContent":["import { FieldWrapperProps, FormFields } from '../FormFields';\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { FormFieldProps } from './FormFieldProps';\nimport React from 'react';\nimport { Theme } from '@bluebase/core';\nimport { View } from '@bluebase/components';\n\nexport interface FormActionsStyles {\n\tfieldContainerLeft: StyleProp<ViewStyle>;\n\tfieldContainerRight: StyleProp<ViewStyle>;\n\tfieldContainerBetween :StyleProp<ViewStyle>;\n\trootSpaceBetween : StyleProp<ViewStyle>;\n\troot: StyleProp<ViewStyle>;\n\trootLeft: StyleProp<ViewStyle>;\n\trootRight: StyleProp<ViewStyle>;\n}\n\nexport interface FormActionsProps {\n\ttype: 'actions';\n\tname: string;\n\tdirection: 'left' | 'right' | 'space-between';\n\tfields: FormFieldProps[];\n\tstyle?: StyleProp<ViewStyle>;\n\tstyles?: Partial<FormActionsStyles>;\n}\n\n\nconst FieldWrapper = ({ field, parent,children }: FieldWrapperProps) => {\n\n\tconst { direction, styles ,style} = parent;\n\n\treturn (\n\t\t<View\n\t\tkey={field.name}\n\t\tstyle={direction === 'left'? styles.fieldContainerLeft : direction === \"right\" ? styles.fieldContainerRight :style }\n\t>\n\t{children}\n\t</View>\n\t);\n};\n\n/**\n * A component that renders form actions, i.e. submit or reset buttons\n * @param props\n */\nexport const FormActions = (props: FormActionsProps) => {\n\n\tconst { direction, style, styles: _styles } = props;\n\tconst styles = _styles as FormActionsStyles;\n\treturn (\n\t\t\n\t\t<View style={[styles.root, direction === 'left' ? styles.rootLeft :  direction === 'right' ? styles.rootRight : direction === 'space-between' ? styles.rootSpaceBetween : null, style]}\n\t\t\n\t\ttestID=\"form-actions\">\n\t\t<FormFields {...props} FieldWrapper={FieldWrapper} />\n\t</View>\n\t);\n};\n\nFormActions.defaultProps = {\n\t//direction: 'right',\n};\n\nFormActions.defaultStyles = (theme: Theme): FormActionsStyles => ({\n\tfieldContainerLeft: {\n\t\tmarginLeft: theme.spacing.unit * 2,\n\t},\n\tfieldContainerRight: {\n\t\tmarginRight: theme.spacing.unit * 2,\n\t},\n\t\n\tfieldContainerBetween :{\n\t\t// marginLeft: theme.spacing.unit * 4,\n\t\t// marginRight: theme.spacing.unit * 0,\n\t},\n\troot: {\n\t\tflexDirection: 'row',\n\t\t paddingVertical: theme.spacing.unit * 2,\n\t},\n\trootLeft: {\n\t\tjustifyContent: 'flex-start',\n\t\t\n\t},\n\trootRight: {\n\t\tjustifyContent: 'flex-end',\n\t},\n\trootSpaceBetween: {\n\t\tjustifyContent: 'space-between',\n\t}\n});"]}