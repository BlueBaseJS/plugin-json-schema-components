6e56f1f85b8721d95799e314fcf93df6
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var FormFields_1 = require("../FormFields");

var react_1 = tslib_1.__importDefault(require("react"));

var components_1 = require("@bluebase/components");

var FieldWrapper = function FieldWrapper(_ref) {
  var field = _ref.field,
      parent = _ref.parent,
      children = _ref.children;
  var direction = parent.direction,
      styles = parent.styles,
      style = parent.style,
      textAlignment = parent.textAlignment;
  debugger;
  console.log("TExtttttttt", direction === "left" ? styles.fieldContainerLeft : direction === "right" ? styles.fieldContainerRight : direction === "space-between" ? styles.fieldContainerBetween : null || textAlignment === "left" ? styles.textContainerLeft : textAlignment === "right" ? styles.textContainerRight : null);
  return react_1.default.createElement(components_1.View, {
    key: field.name,
    style: [direction === "left" ? styles.fieldContainerLeft : direction === "right" ? styles.fieldContainerRight : direction === "space-between" ? styles.fieldContainerBetween : null || textAlignment === "left" ? styles.textContainerLeft : textAlignment === "right" ? styles.textContainerRight : null, style]
  }, children);
};

exports.FormActions = function (props) {
  var direction = props.direction,
      style = props.style,
      _styles = props.styles;
  var styles = _styles;
  return react_1.default.createElement(components_1.View, {
    style: [styles.root, direction === 'left' ? styles.rootLeft : null || direction === 'right' ? styles.rootRight : null || direction === 'space-between' ? styles.rootSpaceBetween : null, style],
    testID: "form-actions"
  }, react_1.default.createElement(FormFields_1.FormFields, (0, _extends2.default)({
    FieldWrapper: FieldWrapper
  }, props)));
};

exports.FormActions.defaultProps = {
  direction: 'right',
  textAlignment: 'left'
};

exports.FormActions.defaultStyles = function (theme) {
  return {
    fieldContainerLeft: {
      marginLeft: theme.spacing.unit * 0
    },
    fieldContainerRight: {
      marginRight: theme.spacing.unit * 0
    },
    textContainerRight: {
      marginRight: theme.spacing.unit * 2
    },
    textContainerLeft: {
      marginLeft: theme.spacing.unit * 2
    },
    fieldContainerBetween: {
      marginLeft: theme.spacing.unit * 0,
      marginRight: theme.spacing.unit * 0
    },
    root: {
      flexDirection: 'row',
      paddingVertical: theme.spacing.unit * 2
    },
    rootLeft: {
      justifyContent: 'flex-start'
    },
    rootRight: {
      justifyContent: 'flex-end'
    },
    rootSpaceBetween: {
      justifyContent: 'space-between'
    }
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,