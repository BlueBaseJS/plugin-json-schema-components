1098542d7020a8d12f9a841ebb9e2396
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var FormFields_1 = require("../FormFields");

var react_1 = tslib_1.__importDefault(require("react"));

var components_1 = require("@bluebase/components");

var FieldWrapper = function FieldWrapper(_ref) {
  var field = _ref.field,
      parent = _ref.parent,
      children = _ref.children;
  var direction = parent.direction,
      styles = parent.styles,
      style = parent.style;
  return react_1.default.createElement(components_1.View, {
    key: field.name,
    style: [direction === "left" ? styles.fieldContainerLeft : direction === "right" ? styles.fieldContainerRight : direction === "space-between" ? styles.fieldContainerBetween : null, style]
  }, children);
};

exports.FormActions = function (props) {
  var direction = props.direction,
      style = props.style,
      _styles = props.styles;
  var styles = _styles;
  return react_1.default.createElement(components_1.View, {
    style: [styles.root, direction === 'left' ? styles.rootLeft : direction === 'right' ? styles.rootRight : direction === 'space-between' ? styles.rootSpaceBetween : null, style],
    testID: "form-actions"
  }, react_1.default.createElement(FormFields_1.FormFields, (0, _extends2.default)({
    FieldWrapper: FieldWrapper
  }, props)));
};

exports.FormActions.defaultProps = {
  direction: 'right'
};

exports.FormActions.defaultStyles = function (theme) {
  return {
    fieldContainerLeft: {
      marginLeft: theme.spacing.unit * 2
    },
    fieldContainerRight: {
      marginRight: theme.spacing.unit * 2
    },
    fieldContainerBetween: {
      marginLeft: theme.spacing.unit * 0,
      marginRight: theme.spacing.unit * 0
    },
    root: {
      flexDirection: 'row',
      paddingVertical: theme.spacing.unit * 2
    },
    rootLeft: {
      justifyContent: 'flex-start'
    },
    rootRight: {
      justifyContent: 'flex-end'
    },
    rootSpaceBetween: {
      justifyContent: 'space-between'
    }
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vRmllbGRzL0Zvcm1BY3Rpb25zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBOztBQUdBLElBQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUVBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBOztBQXNCQSxJQUFNLFlBQVksR0FBRyxTQUFmLFlBQWUsT0FBa0Q7QUFBQSxNQUEvQyxLQUErQyxRQUEvQyxLQUErQztBQUFBLE1BQXhDLE1BQXdDLFFBQXhDLE1BQXdDO0FBQUEsTUFBakMsUUFBaUMsUUFBakMsUUFBaUM7QUFBQSxNQUU5RCxTQUY4RCxHQUVqQyxNQUZpQyxDQUU5RCxTQUY4RDtBQUFBLE1BRW5ELE1BRm1ELEdBRWpDLE1BRmlDLENBRW5ELE1BRm1EO0FBQUEsTUFFM0MsS0FGMkMsR0FFakMsTUFGaUMsQ0FFM0MsS0FGMkM7QUFJdEUsU0FDQyxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxZQUFBLENBQUEsSUFBRCxFQUFLO0FBQ0osSUFBQSxHQUFHLEVBQUUsS0FBSyxDQUFDLElBRFA7QUFFSixJQUFBLEtBQUssRUFBRSxDQUFDLFNBQVMsS0FBSyxNQUFkLEdBQXVCLE1BQU0sQ0FBQyxrQkFBOUIsR0FBbUQsU0FBUyxLQUFLLE9BQWQsR0FBd0IsTUFBTSxDQUFDLG1CQUEvQixHQUFxRCxTQUFTLEtBQUssZUFBZCxHQUFnQyxNQUFNLENBQUMscUJBQXZDLEdBQStELElBQXhLLEVBQThLLEtBQTlLO0FBRkgsR0FBTCxFQUlDLFFBSkQsQ0FERDtBQVFBLENBWkQ7O0FBa0JhLE9BQUEsQ0FBQSxXQUFBLEdBQWMsVUFBQyxLQUFELEVBQTRCO0FBQUEsTUFFOUMsU0FGOEMsR0FFUixLQUZRLENBRTlDLFNBRjhDO0FBQUEsTUFFbkMsS0FGbUMsR0FFUixLQUZRLENBRW5DLEtBRm1DO0FBQUEsTUFFcEIsT0FGb0IsR0FFUixLQUZRLENBRTVCLE1BRjRCO0FBR3RELE1BQU0sTUFBTSxHQUFHLE9BQWY7QUFDQSxTQUVDLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBQSxJQUFELEVBQUs7QUFBQyxJQUFBLEtBQUssRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFSLEVBQWMsU0FBUyxLQUFLLE1BQWQsR0FBdUIsTUFBTSxDQUFDLFFBQTlCLEdBQTBDLFNBQVMsS0FBSyxPQUFkLEdBQXdCLE1BQU0sQ0FBQyxTQUEvQixHQUEyQyxTQUFTLEtBQUssZUFBZCxHQUFnQyxNQUFNLENBQUMsZ0JBQXZDLEdBQTBELElBQTdKLEVBQW1LLEtBQW5LLENBQVI7QUFBbUwsSUFBQSxNQUFNLEVBQUM7QUFBMUwsR0FBTCxFQUNDLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBQSxVQUFELEVBQVcsdUJBQUE7QUFBQyxJQUFBLFlBQVksRUFBRTtBQUFmLEdBQUEsRUFBaUMsS0FBakMsQ0FBWCxDQURELENBRkQ7QUFNQSxDQVZZOztBQVliLE9BQUEsQ0FBQSxXQUFBLENBQVksWUFBWixHQUEyQjtBQUMxQixFQUFBLFNBQVMsRUFBRTtBQURlLENBQTNCOztBQUlBLE9BQUEsQ0FBQSxXQUFBLENBQVksYUFBWixHQUE0QixVQUFDLEtBQUQ7QUFBQSxTQUFzQztBQUNqRSxJQUFBLGtCQUFrQixFQUFFO0FBQ25CLE1BQUEsVUFBVSxFQUFFLEtBQUssQ0FBQyxPQUFOLENBQWMsSUFBZCxHQUFxQjtBQURkLEtBRDZDO0FBSWpFLElBQUEsbUJBQW1CLEVBQUU7QUFDcEIsTUFBQSxXQUFXLEVBQUUsS0FBSyxDQUFDLE9BQU4sQ0FBYyxJQUFkLEdBQXFCO0FBRGQsS0FKNEM7QUFRakUsSUFBQSxxQkFBcUIsRUFBRTtBQUN0QixNQUFBLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTixDQUFjLElBQWQsR0FBcUIsQ0FEWDtBQUV0QixNQUFBLFdBQVcsRUFBRSxLQUFLLENBQUMsT0FBTixDQUFjLElBQWQsR0FBcUI7QUFGWixLQVIwQztBQVlqRSxJQUFBLElBQUksRUFBRTtBQUNMLE1BQUEsYUFBYSxFQUFFLEtBRFY7QUFFSixNQUFBLGVBQWUsRUFBRSxLQUFLLENBQUMsT0FBTixDQUFjLElBQWQsR0FBcUI7QUFGbEMsS0FaMkQ7QUFnQmpFLElBQUEsUUFBUSxFQUFFO0FBQ1QsTUFBQSxjQUFjLEVBQUU7QUFEUCxLQWhCdUQ7QUFvQmpFLElBQUEsU0FBUyxFQUFFO0FBQ1YsTUFBQSxjQUFjLEVBQUU7QUFETixLQXBCc0Q7QUF1QmpFLElBQUEsZ0JBQWdCLEVBQUU7QUFDakIsTUFBQSxjQUFjLEVBQUU7QUFEQztBQXZCK0MsR0FBdEM7QUFBQSxDQUE1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZpZWxkV3JhcHBlclByb3BzLCBGb3JtRmllbGRzIH0gZnJvbSAnLi4vRm9ybUZpZWxkcyc7XG5pbXBvcnQgeyBTdHlsZVByb3AsIFZpZXdTdHlsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgeyBGb3JtRmllbGRQcm9wcyB9IGZyb20gJy4vRm9ybUZpZWxkUHJvcHMnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFRoZW1lIH0gZnJvbSAnQGJsdWViYXNlL2NvcmUnO1xuaW1wb3J0IHsgVmlldyB9IGZyb20gJ0BibHVlYmFzZS9jb21wb25lbnRzJztcblxuZXhwb3J0IGludGVyZmFjZSBGb3JtQWN0aW9uc1N0eWxlcyB7XG5cdGZpZWxkQ29udGFpbmVyTGVmdDogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG5cdGZpZWxkQ29udGFpbmVyUmlnaHQ6IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuXHRmaWVsZENvbnRhaW5lckJldHdlZW4gOlN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuXHRyb290U3BhY2VCZXR3ZWVuIDogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG5cdHJvb3Q6IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuXHRyb290TGVmdDogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG5cdHJvb3RSaWdodDogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9ybUFjdGlvbnNQcm9wcyB7XG5cdHR5cGU6ICdhY3Rpb25zJztcblx0bmFtZTogc3RyaW5nO1xuXHRkaXJlY3Rpb246ICdsZWZ0JyB8ICdyaWdodCcgfCAnc3BhY2UtYmV0d2Vlbic7XG5cdGZpZWxkczogRm9ybUZpZWxkUHJvcHNbXTtcblx0c3R5bGU/OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcblx0c3R5bGVzPzogUGFydGlhbDxGb3JtQWN0aW9uc1N0eWxlcz47XG59XG5cblxuY29uc3QgRmllbGRXcmFwcGVyID0gKHsgZmllbGQsIHBhcmVudCxjaGlsZHJlbiB9OiBGaWVsZFdyYXBwZXJQcm9wcykgPT4ge1xuXG5cdGNvbnN0IHsgZGlyZWN0aW9uLCBzdHlsZXMsIHN0eWxlIH0gPSBwYXJlbnQ7XG5cblx0cmV0dXJuIChcblx0XHQ8Vmlld1xuXHRcdFx0a2V5PXtmaWVsZC5uYW1lfVxuXHRcdFx0c3R5bGU9e1tkaXJlY3Rpb24gPT09IFwibGVmdFwiID8gc3R5bGVzLmZpZWxkQ29udGFpbmVyTGVmdCA6IGRpcmVjdGlvbiA9PT0gXCJyaWdodFwiID8gc3R5bGVzLmZpZWxkQ29udGFpbmVyUmlnaHQgOiBkaXJlY3Rpb24gPT09IFwic3BhY2UtYmV0d2VlblwiID8gc3R5bGVzLmZpZWxkQ29udGFpbmVyQmV0d2VlbiA6IG51bGwsIHN0eWxlIF19XG5cdFx0PlxuXHRcdHtjaGlsZHJlbn1cblx0XHQ8L1ZpZXc+XG5cdCk7XG59O1xuXG4vKipcbiAqIEEgY29tcG9uZW50IHRoYXQgcmVuZGVycyBmb3JtIGFjdGlvbnMsIGkuZS4gc3VibWl0IG9yIHJlc2V0IGJ1dHRvbnNcbiAqIEBwYXJhbSBwcm9wc1xuICovXG5leHBvcnQgY29uc3QgRm9ybUFjdGlvbnMgPSAocHJvcHM6IEZvcm1BY3Rpb25zUHJvcHMpID0+IHtcblxuXHRjb25zdCB7IGRpcmVjdGlvbiwgc3R5bGUsIHN0eWxlczogX3N0eWxlcyB9ID0gcHJvcHM7XG5cdGNvbnN0IHN0eWxlcyA9IF9zdHlsZXMgYXMgRm9ybUFjdGlvbnNTdHlsZXM7XG5cdHJldHVybiAoXG5cdFx0XG5cdFx0PFZpZXcgc3R5bGU9e1tzdHlsZXMucm9vdCwgZGlyZWN0aW9uID09PSAnbGVmdCcgPyBzdHlsZXMucm9vdExlZnQgOiAgZGlyZWN0aW9uID09PSAncmlnaHQnID8gc3R5bGVzLnJvb3RSaWdodCA6IGRpcmVjdGlvbiA9PT0gJ3NwYWNlLWJldHdlZW4nID8gc3R5bGVzLnJvb3RTcGFjZUJldHdlZW4gOiBudWxsLCBzdHlsZV19IHRlc3RJRD1cImZvcm0tYWN0aW9uc1wiPlxuXHRcdFx0PEZvcm1GaWVsZHMgRmllbGRXcmFwcGVyPXtGaWVsZFdyYXBwZXJ9IHsuLi5wcm9wc30gIC8+XG5cdFx0PC9WaWV3PlxuXHQpO1xufTtcblxuRm9ybUFjdGlvbnMuZGVmYXVsdFByb3BzID0ge1xuXHRkaXJlY3Rpb246ICdyaWdodCcsXG59O1xuXG5Gb3JtQWN0aW9ucy5kZWZhdWx0U3R5bGVzID0gKHRoZW1lOiBUaGVtZSk6IEZvcm1BY3Rpb25zU3R5bGVzID0+ICh7XG5cdGZpZWxkQ29udGFpbmVyTGVmdDoge1xuXHRcdG1hcmdpbkxlZnQ6IHRoZW1lLnNwYWNpbmcudW5pdCAqIDIsXG5cdH0sXG5cdGZpZWxkQ29udGFpbmVyUmlnaHQ6IHtcblx0XHRtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy51bml0ICogMixcblx0fSxcblx0XG5cdGZpZWxkQ29udGFpbmVyQmV0d2VlbiA6e1xuXHRcdG1hcmdpbkxlZnQ6IHRoZW1lLnNwYWNpbmcudW5pdCAqIDAsXG5cdFx0bWFyZ2luUmlnaHQ6IHRoZW1lLnNwYWNpbmcudW5pdCAqIDAsXG5cdH0sXG5cdHJvb3Q6IHtcblx0XHRmbGV4RGlyZWN0aW9uOiAncm93Jyxcblx0XHQgcGFkZGluZ1ZlcnRpY2FsOiB0aGVtZS5zcGFjaW5nLnVuaXQgKiAyLFxuXHR9LFxuXHRyb290TGVmdDoge1xuXHRcdGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG5cdFx0XG5cdH0sXG5cdHJvb3RSaWdodDoge1xuXHRcdGp1c3RpZnlDb250ZW50OiAnZmxleC1lbmQnLFxuXHR9LFxuXHRyb290U3BhY2VCZXR3ZWVuOiB7XG5cdFx0anVzdGlmeUNvbnRlbnQ6ICdzcGFjZS1iZXR3ZWVuJyxcblx0fVxufSk7Il19