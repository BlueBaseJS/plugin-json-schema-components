b152ad67cd3604380b41ca0a31eeef8a
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var components_1 = require("@bluebase/components");

var formik_1 = require("formik");

var react_1 = tslib_1.__importDefault(require("react"));

var BaseFormField = components_1.getComponent('BaseFormField');
var TextInput = components_1.getComponent('TextInput');

var validate = function validate(props) {
  return function (value) {
    var required = props.required,
        type = props.type;
    var error;

    if (required === true && !value) {
      error = 'This field is required';
    } else if (type === 'text' && /^(0|[1-9]\d*)(\.\d+)?$/.test(value)) {
      error = 'Should only be alphabet';
    } else if (type === 'date') {
      error = value;
    } else if (type === 'number' && !/^(0|[1-9]\d*)(\.\d+)?$/.test(value)) {
        error = 'Please enter a valid number';
      } else if (type === 'email' && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(value)) {
          error = 'Please enter a valid email address';
        } else if (type === 'url' && /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/)?[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/.test(value)) {
          error = 'Please enter a valid Url';
        }

    return error;
  };
};

exports.FormTextInput = function (props) {
  return react_1.default.createElement(formik_1.Field, (0, _extends2.default)({}, props, {
    validate: props.validate || validate(props)
  }), function (_ref) {
    var field = _ref.field,
        form = _ref.form;
    var name = props.name;
    var inputProps = (0, _extends2.default)({}, field, {
      onChange: undefined
    }, props, {
      error: form.errors[name] && form.touched[name] || props.error,
      helperText: form.errors[name] || props.helperText,
      onChangeText: function onChangeText(text) {
        form.handleChange(name)(text);
      }
    });
    return react_1.default.createElement(BaseFormField, (0, _extends2.default)({}, inputProps));
  });
};

exports.FormTextInput.defaultProps = {
  MainComponent: TextInput
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vRmllbGRzL0Zvcm1UZXh0SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBOztBQUlBLElBQUEsUUFBQSxHQUFBLE9BQUEsQ0FBQSxRQUFBLENBQUE7O0FBQ0EsSUFBQSxPQUFBLEdBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBRUEsSUFBTSxhQUFhLEdBQUcsWUFBQSxDQUFBLFlBQUEsQ0FBaUMsZUFBakMsQ0FBdEI7QUFDQSxJQUFNLFNBQVMsR0FBRyxZQUFBLENBQUEsWUFBQSxDQUE2QixXQUE3QixDQUFsQjs7QUFjQSxJQUFNLFFBQVEsR0FBRyxTQUFYLFFBQVcsQ0FBQyxLQUFEO0FBQUEsU0FBK0IsVUFBQyxLQUFELEVBQWtCO0FBQUEsUUFDekQsUUFEeUQsR0FDdEMsS0FEc0MsQ0FDekQsUUFEeUQ7QUFBQSxRQUMvQyxJQUQrQyxHQUN0QyxLQURzQyxDQUMvQyxJQUQrQztBQUdqRSxRQUFJLEtBQUo7O0FBR0EsUUFBSSxRQUFRLEtBQUssSUFBYixJQUFxQixDQUFDLEtBQTFCLEVBQWtDO0FBQ2pDLE1BQUEsS0FBSyxHQUFHLHdCQUFSO0FBQ0EsS0FGRCxNQUlLLElBQUcsSUFBSSxLQUFLLE1BQVQsSUFBbUIseUJBQXlCLElBQXpCLENBQThCLEtBQTlCLENBQXRCLEVBQTJEO0FBQy9ELE1BQUEsS0FBSyxHQUFHLHlCQUFSO0FBQ0EsS0FGSSxNQUlBLElBQUcsSUFBSSxLQUFLLE1BQVosRUFBcUI7QUFDekIsTUFBQSxLQUFLLEdBQUcsS0FBUjtBQUNBLEtBRkksTUFLQSxJQUFJLElBQUksS0FBSyxRQUFULElBQXFCLENBQUMseUJBQXlCLElBQXpCLENBQThCLEtBQTlCLENBQTFCLEVBQStEO0FBQ25FLFFBQUEsS0FBSyxHQUFHLDZCQUFSO0FBQ0EsT0FGSSxNQVNBLElBQUksSUFBSSxLQUFLLE9BQVQsSUFBb0IsQ0FBQyw0Q0FBNEMsSUFBNUMsQ0FBaUQsS0FBakQsQ0FBekIsRUFBa0Y7QUFDdEYsVUFBQSxLQUFLLEdBQUcsb0NBQVI7QUFDQSxTQUZJLE1BSUEsSUFBSSxJQUFJLEtBQUssS0FBVCxJQUFrQiwwSEFBMEgsSUFBMUgsQ0FBK0gsS0FBL0gsQ0FBdEIsRUFBNEo7QUFDaEssVUFBQSxLQUFLLEdBQUcsMEJBQVI7QUFFQTs7QUFFRCxXQUFPLEtBQVA7QUFDQSxHQXRDZ0I7QUFBQSxDQUFqQjs7QUF3Q2EsT0FBQSxDQUFBLGFBQUEsR0FBZ0IsVUFBQyxLQUFEO0FBQUEsU0FDNUIsT0FBQSxDQUFBLE9BQUEsQ0FBQSxhQUFBLENBQUMsUUFBQSxDQUFBLEtBQUQsRUFBTSx1QkFBQSxFQUFBLEVBQUssS0FBTCxFQUFVO0FBQUUsSUFBQSxRQUFRLEVBQUUsS0FBSyxDQUFDLFFBQU4sSUFBa0IsUUFBUSxDQUFDLEtBQUQ7QUFBdEMsR0FBVixDQUFOLEVBQ0UsZ0JBQXlCO0FBQUEsUUFBdEIsS0FBc0IsUUFBdEIsS0FBc0I7QUFBQSxRQUFmLElBQWUsUUFBZixJQUFlO0FBQ3pCLFFBQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxJQUFuQjtBQUVBLFFBQU0sVUFBVSxHQUFBLHVCQUFBLEVBQUEsRUFDWixLQURZLEVBQ1A7QUFDUixNQUFBLFFBQVEsRUFBRTtBQURGLEtBRE8sRUFHWixLQUhZLEVBR1A7QUFDUixNQUFBLEtBQUssRUFBRyxJQUFJLENBQUMsTUFBTCxDQUFZLElBQVosS0FBcUIsSUFBSSxDQUFDLE9BQUwsQ0FBYSxJQUFiLENBQXRCLElBQTZDLEtBQUssQ0FBQyxLQURsRDtBQUVSLE1BQUEsVUFBVSxFQUFFLElBQUksQ0FBQyxNQUFMLENBQVksSUFBWixLQUFxQixLQUFLLENBQUMsVUFGL0I7QUFJUixNQUFBLFlBQVksRUFBRSxzQkFBQyxJQUFELEVBQWlCO0FBQzlCLFFBQUEsSUFBSSxDQUFDLFlBQUwsQ0FBa0IsSUFBbEIsRUFBd0IsSUFBeEI7QUFDQTtBQU5PLEtBSE8sQ0FBaEI7QUFXQSxXQUFRLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLGFBQUQsRUFBYyx1QkFBQSxFQUFBLEVBQUssVUFBTCxDQUFkLENBQVI7QUFDQSxHQWhCRixDQUQ0QjtBQUFBLENBQWhCOztBQXFCYixPQUFBLENBQUEsYUFBQSxDQUFjLFlBQWQsR0FBNkI7QUFDNUIsRUFBQSxhQUFhLEVBQUU7QUFEYSxDQUE3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRleHRJbnB1dFByb3BzLCBnZXRDb21wb25lbnQgfSBmcm9tICdAYmx1ZWJhc2UvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBCYXNlRm9ybUZpZWxkUHJvcHMgfSBmcm9tICcuLi9CYXNlRm9ybUZpZWxkJztcbmltcG9ydCB7IFN0eWxlUHJvcCwgVmlld1N0eWxlIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuaW1wb3J0IHsgRmllbGQgfSBmcm9tICdmb3JtaWsnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuY29uc3QgQmFzZUZvcm1GaWVsZCA9IGdldENvbXBvbmVudDxCYXNlRm9ybUZpZWxkUHJvcHM+KCdCYXNlRm9ybUZpZWxkJyk7XG5jb25zdCBUZXh0SW5wdXQgPSBnZXRDb21wb25lbnQ8VGV4dElucHV0UHJvcHM+KCdUZXh0SW5wdXQnKTtcblxuZXhwb3J0IHR5cGUgRm9ybVRleHRJbnB1dFByb3BzPFQgPSB7fT4gPSBUZXh0SW5wdXRQcm9wcyAmIEJhc2VGb3JtRmllbGRQcm9wcyAmIFQgJiB7XG5cdGNoaWxkcmVuPzogUmVhY3QuUmVhY3ROb2RlO1xuXHR2YWxpZGF0ZT86ICgodmFsdWU6IGFueSkgPT4gc3RyaW5nIHwgUHJvbWlzZTx2b2lkPiB8IHVuZGVmaW5lZCk7XG5cdG5hbWU6IHN0cmluZztcblx0dHlwZT86IHN0cmluZztcblx0dmFsdWU/OiBhbnk7XG5cdGlubmVyUmVmPzogKGluc3RhbmNlOiBhbnkpID0+IHZvaWQ7XG5cdHN0eWxlPzogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG5cdC8vW2tleTogc3RyaW5nXTogYW55XG5cdG1heExlbmd0aCA/IDogbnVtYmVyXG59O1xuXG5jb25zdCB2YWxpZGF0ZSA9IChwcm9wczogRm9ybVRleHRJbnB1dFByb3BzKSA9PiAodmFsdWU6IHN0cmluZykgPT4ge1xuXHRjb25zdCB7IHJlcXVpcmVkLCB0eXBlIH0gPSBwcm9wcztcblxuXHRsZXQgZXJyb3I7XG5cblx0Ly8gSWYgZmllbGQgaXMgcmVxdWlyZWQgLy90ZXN0ZWRcblx0aWYgKHJlcXVpcmVkID09PSB0cnVlICYmICF2YWx1ZSApIHtcblx0XHRlcnJvciA9ICdUaGlzIGZpZWxkIGlzIHJlcXVpcmVkJztcblx0fVxuXG5cdGVsc2UgaWYodHlwZSA9PT0gJ3RleHQnICYmIC9eKDB8WzEtOV1cXGQqKShcXC5cXGQrKT8kLy50ZXN0KHZhbHVlKSl7XG5cdFx0ZXJyb3IgPSAnU2hvdWxkIG9ubHkgYmUgYWxwaGFiZXQnO1xuXHR9XG5cblx0ZWxzZSBpZih0eXBlID09PSAnZGF0ZScgICl7XG5cdFx0ZXJyb3IgPSB2YWx1ZTtcblx0fVxuXG5cdC8vaWYgbnVtYmVyIGZpZWxkIGlzIGluY29ycmVjdFxuXHRlbHNlIGlmICh0eXBlID09PSAnbnVtYmVyJyAmJiAhL14oMHxbMS05XVxcZCopKFxcLlxcZCspPyQvLnRlc3QodmFsdWUpKXtcblx0XHRlcnJvciA9ICdQbGVhc2UgZW50ZXIgYSB2YWxpZCBudW1iZXInXG5cdH1cblxuXHQvLyBlbHNlIGlmICh0eXBlID09PSAncGFzc3dvcmQnICYmIHZhbHVlICE9IHBhc3N3b3JkICl7XG5cdC8vIFx0ZXJyb3IgPSAnUGFzc3dvcmQgbm90IG1hdGNoZWQnXG5cdC8vIH1cblxuXHQvLyBJZiBmaWVsZCAnZW1haWwnXG5cdGVsc2UgaWYgKHR5cGUgPT09ICdlbWFpbCcgJiYgIS9eW0EtWjAtOS5fJSstXStAW0EtWjAtOS4tXStcXC5bQS1aXXsyLDR9JC9pLnRlc3QodmFsdWUpKSB7XG5cdFx0ZXJyb3IgPSAnUGxlYXNlIGVudGVyIGEgdmFsaWQgZW1haWwgYWRkcmVzcyc7XG5cdH1cblxuXHRlbHNlIGlmICh0eXBlID09PSAndXJsJyAmJiAvXihodHRwOlxcL1xcL3d3d1xcLnxodHRwczpcXC9cXC93d3dcXC58aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvKT9bYS16MC05XSsoW1xcLVxcLl17MX1bYS16MC05XSspKlxcLlthLXpdezIsNX0oOlswLTldezEsNX0pPyhcXC8uKik/JC8udGVzdCh2YWx1ZSkpe1xuXHRcdGVycm9yID0gJ1BsZWFzZSBlbnRlciBhIHZhbGlkIFVybCc7XG5cdFx0XG5cdH1cblxuXHRyZXR1cm4gZXJyb3I7XG59O1xuXG5leHBvcnQgY29uc3QgRm9ybVRleHRJbnB1dCA9IChwcm9wczogRm9ybVRleHRJbnB1dFByb3BzKSA9PiAoXG5cdDxGaWVsZCB7Li4ucHJvcHN9IHZhbGlkYXRlPXtwcm9wcy52YWxpZGF0ZSB8fCB2YWxpZGF0ZShwcm9wcyl9PlxuXHRcdHsoeyBmaWVsZCwgZm9ybSB9OiBhbnkpID0+IHtcblx0XHRcdGNvbnN0IG5hbWUgPSBwcm9wcy5uYW1lO1xuXG5cdFx0XHRjb25zdCBpbnB1dFByb3BzID0ge1xuXHRcdFx0XHQuLi5maWVsZCxcblx0XHRcdFx0b25DaGFuZ2U6IHVuZGVmaW5lZCxcblx0XHRcdFx0Li4ucHJvcHMsXG5cdFx0XHRcdGVycm9yOiAoZm9ybS5lcnJvcnNbbmFtZV0gJiYgZm9ybS50b3VjaGVkW25hbWVdKSB8fCBwcm9wcy5lcnJvcixcblx0XHRcdFx0aGVscGVyVGV4dDogZm9ybS5lcnJvcnNbbmFtZV0gfHwgcHJvcHMuaGVscGVyVGV4dCxcblx0XHRcdFx0XG5cdFx0XHRcdG9uQ2hhbmdlVGV4dDogKHRleHQ6IHN0cmluZykgPT4ge1xuXHRcdFx0XHRcdGZvcm0uaGFuZGxlQ2hhbmdlKG5hbWUpKHRleHQpO1xuXHRcdFx0XHR9LFxuXHRcdFx0fTtcblx0XHRcdHJldHVybiAoPEJhc2VGb3JtRmllbGQgey4uLmlucHV0UHJvcHN9IC8+KTtcblx0XHR9fVxuXHQ8L0ZpZWxkPlxuKTtcblxuRm9ybVRleHRJbnB1dC5kZWZhdWx0UHJvcHMgPSB7XG5cdE1haW5Db21wb25lbnQ6IFRleHRJbnB1dFxufTsiXX0=