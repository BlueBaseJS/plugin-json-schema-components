df50ec1f107d14b83c215cd5d5233d6c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var components_1 = require("@bluebase/components");

var formik_1 = require("formik");

var react_1 = tslib_1.__importDefault(require("react"));

var BaseFormField = components_1.getComponent('BaseFormField');
var TextInput = components_1.getComponent('TextInput');

var validate = function validate(props) {
  return function (value) {
    var required = props.required,
        type = props.type;
    var error;
    var password;

    if (required === true && !value) {
      error = 'This field is required';
    } else if (type === 'text' && !/^(0|[1-9]\d*)(\.\d+)?$/.test(value)) {
      error = 'Should only be alphabet';
    } else if (type === 'password') {
      error = 'This field is required';
    } else if (type === 'date') {
      error = value;
    } else if (type === 'number' && !/^(0|[1-9]\d*)(\.\d+)?$/.test(value)) {
        error = 'Please enter a valid number';
      } else if (type === 'password' && value != password) {
        error = 'Password not matched';
      } else if (type === 'email' && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(value)) {
          error = 'Please enter a valid email address';
        }

    return error;
  };
};

exports.FormTextInput = function (props) {
  return react_1.default.createElement(formik_1.Field, (0, _extends2.default)({}, props, {
    validate: props.validate || validate(props)
  }), function (_ref) {
    var field = _ref.field,
        form = _ref.form;
    var name = props.name;
    var inputProps = (0, _extends2.default)({}, field, {
      onChange: undefined
    }, props, {
      error: form.errors[name] && form.touched[name] || props.error,
      helperText: form.errors[name] || props.helperText,
      onChangeText: function onChangeText(text) {
        form.handleChange(name)(text);
      }
    });
    return react_1.default.createElement(BaseFormField, (0, _extends2.default)({}, inputProps));
  });
};

exports.FormTextInput.defaultProps = {
  MainComponent: TextInput
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vRmllbGRzL0Zvcm1UZXh0SW5wdXQudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBOztBQUlBLElBQUEsUUFBQSxHQUFBLE9BQUEsQ0FBQSxRQUFBLENBQUE7O0FBQ0EsSUFBQSxPQUFBLEdBQUEsT0FBQSxDQUFBLGVBQUEsQ0FBQSxPQUFBLENBQUEsT0FBQSxDQUFBLENBQUE7O0FBRUEsSUFBTSxhQUFhLEdBQUcsWUFBQSxDQUFBLFlBQUEsQ0FBaUMsZUFBakMsQ0FBdEI7QUFDQSxJQUFNLFNBQVMsR0FBRyxZQUFBLENBQUEsWUFBQSxDQUE2QixXQUE3QixDQUFsQjs7QUFjQSxJQUFNLFFBQVEsR0FBRyxTQUFYLFFBQVcsQ0FBQyxLQUFEO0FBQUEsU0FBK0IsVUFBQyxLQUFELEVBQWtCO0FBQUEsUUFDekQsUUFEeUQsR0FDdEMsS0FEc0MsQ0FDekQsUUFEeUQ7QUFBQSxRQUMvQyxJQUQrQyxHQUN0QyxLQURzQyxDQUMvQyxJQUQrQztBQUdqRSxRQUFJLEtBQUo7QUFDQSxRQUFJLFFBQUo7O0FBR0EsUUFBSSxRQUFRLEtBQUssSUFBYixJQUFxQixDQUFDLEtBQTFCLEVBQWtDO0FBQ2pDLE1BQUEsS0FBSyxHQUFHLHdCQUFSO0FBQ0EsS0FGRCxNQUlLLElBQUcsSUFBSSxLQUFLLE1BQVQsSUFBbUIsQ0FBQyx5QkFBeUIsSUFBekIsQ0FBOEIsS0FBOUIsQ0FBdkIsRUFBNEQ7QUFDaEUsTUFBQSxLQUFLLEdBQUcseUJBQVI7QUFDQSxLQUZJLE1BSUEsSUFBRyxJQUFJLEtBQUssVUFBWixFQUF1QjtBQUUzQixNQUFBLEtBQUssR0FBRyx3QkFBUjtBQUVBLEtBSkksTUFNQSxJQUFHLElBQUksS0FBSyxNQUFaLEVBQXFCO0FBQ3pCLE1BQUEsS0FBSyxHQUFHLEtBQVI7QUFDQSxLQUZJLE1BS0EsSUFBSSxJQUFJLEtBQUssUUFBVCxJQUFxQixDQUFDLHlCQUF5QixJQUF6QixDQUE4QixLQUE5QixDQUExQixFQUErRDtBQUNuRSxRQUFBLEtBQUssR0FBRyw2QkFBUjtBQUNBLE9BRkksTUFJQSxJQUFJLElBQUksS0FBSyxVQUFULElBQXVCLEtBQUssSUFBSSxRQUFwQyxFQUE4QztBQUNsRCxRQUFBLEtBQUssR0FBRyxzQkFBUjtBQUNBLE9BRkksTUFLQSxJQUFJLElBQUksS0FBSyxPQUFULElBQW9CLENBQUMsNENBQTRDLElBQTVDLENBQWlELEtBQWpELENBQXpCLEVBQWtGO0FBQ3RGLFVBQUEsS0FBSyxHQUFHLG9DQUFSO0FBQ0E7O0FBRUQsV0FBTyxLQUFQO0FBQ0EsR0F4Q2dCO0FBQUEsQ0FBakI7O0FBMENhLE9BQUEsQ0FBQSxhQUFBLEdBQWdCLFVBQUMsS0FBRDtBQUFBLFNBQzVCLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLFFBQUEsQ0FBQSxLQUFELEVBQU0sdUJBQUEsRUFBQSxFQUFLLEtBQUwsRUFBVTtBQUFFLElBQUEsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFOLElBQWtCLFFBQVEsQ0FBQyxLQUFEO0FBQXRDLEdBQVYsQ0FBTixFQUNFLGdCQUF5QjtBQUFBLFFBQXRCLEtBQXNCLFFBQXRCLEtBQXNCO0FBQUEsUUFBZixJQUFlLFFBQWYsSUFBZTtBQUN6QixRQUFNLElBQUksR0FBRyxLQUFLLENBQUMsSUFBbkI7QUFFQSxRQUFNLFVBQVUsR0FBQSx1QkFBQSxFQUFBLEVBQ1osS0FEWSxFQUNQO0FBQ1IsTUFBQSxRQUFRLEVBQUU7QUFERixLQURPLEVBR1osS0FIWSxFQUdQO0FBQ1IsTUFBQSxLQUFLLEVBQUcsSUFBSSxDQUFDLE1BQUwsQ0FBWSxJQUFaLEtBQXFCLElBQUksQ0FBQyxPQUFMLENBQWEsSUFBYixDQUF0QixJQUE2QyxLQUFLLENBQUMsS0FEbEQ7QUFFUixNQUFBLFVBQVUsRUFBRSxJQUFJLENBQUMsTUFBTCxDQUFZLElBQVosS0FBcUIsS0FBSyxDQUFDLFVBRi9CO0FBSVIsTUFBQSxZQUFZLEVBQUUsc0JBQUMsSUFBRCxFQUFpQjtBQUM5QixRQUFBLElBQUksQ0FBQyxZQUFMLENBQWtCLElBQWxCLEVBQXdCLElBQXhCO0FBQ0E7QUFOTyxLQUhPLENBQWhCO0FBV0EsV0FBUSxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxhQUFELEVBQWMsdUJBQUEsRUFBQSxFQUFLLFVBQUwsQ0FBZCxDQUFSO0FBQ0EsR0FoQkYsQ0FENEI7QUFBQSxDQUFoQjs7QUFxQmIsT0FBQSxDQUFBLGFBQUEsQ0FBYyxZQUFkLEdBQTZCO0FBQzVCLEVBQUEsYUFBYSxFQUFFO0FBRGEsQ0FBN0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZXh0SW5wdXRQcm9wcywgZ2V0Q29tcG9uZW50IH0gZnJvbSAnQGJsdWViYXNlL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgQmFzZUZvcm1GaWVsZFByb3BzIH0gZnJvbSAnLi4vQmFzZUZvcm1GaWVsZCc7XG5pbXBvcnQgeyBTdHlsZVByb3AsIFZpZXdTdHlsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbmltcG9ydCB7IEZpZWxkIH0gZnJvbSAnZm9ybWlrJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IEJhc2VGb3JtRmllbGQgPSBnZXRDb21wb25lbnQ8QmFzZUZvcm1GaWVsZFByb3BzPignQmFzZUZvcm1GaWVsZCcpO1xuY29uc3QgVGV4dElucHV0ID0gZ2V0Q29tcG9uZW50PFRleHRJbnB1dFByb3BzPignVGV4dElucHV0Jyk7XG5cbmV4cG9ydCB0eXBlIEZvcm1UZXh0SW5wdXRQcm9wczxUID0ge30+ID0gVGV4dElucHV0UHJvcHMgJiBCYXNlRm9ybUZpZWxkUHJvcHMgJiBUICYge1xuXHRjaGlsZHJlbj86IFJlYWN0LlJlYWN0Tm9kZTtcblx0dmFsaWRhdGU/OiAoKHZhbHVlOiBhbnkpID0+IHN0cmluZyB8IFByb21pc2U8dm9pZD4gfCB1bmRlZmluZWQpO1xuXHRuYW1lOiBzdHJpbmc7XG5cdHR5cGU/OiBzdHJpbmc7XG5cdHZhbHVlPzogYW55O1xuXHRpbm5lclJlZj86IChpbnN0YW5jZTogYW55KSA9PiB2b2lkO1xuXHRzdHlsZT86IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuXHQvL1trZXk6IHN0cmluZ106IGFueVxuXHRtYXhMZW5ndGggPyA6IG51bWJlclxufTtcblxuY29uc3QgdmFsaWRhdGUgPSAocHJvcHM6IEZvcm1UZXh0SW5wdXRQcm9wcykgPT4gKHZhbHVlOiBzdHJpbmcpID0+IHtcblx0Y29uc3QgeyByZXF1aXJlZCwgdHlwZSB9ID0gcHJvcHM7XG5cblx0bGV0IGVycm9yO1xuXHR2YXIgcGFzc3dvcmQgO1xuXG5cdC8vIElmIGZpZWxkIGlzIHJlcXVpcmVkIC8vdGVzdGVkXG5cdGlmIChyZXF1aXJlZCA9PT0gdHJ1ZSAmJiAhdmFsdWUgKSB7XG5cdFx0ZXJyb3IgPSAnVGhpcyBmaWVsZCBpcyByZXF1aXJlZCc7XG5cdH1cblxuXHRlbHNlIGlmKHR5cGUgPT09ICd0ZXh0JyAmJiAhL14oMHxbMS05XVxcZCopKFxcLlxcZCspPyQvLnRlc3QodmFsdWUpKXtcblx0XHRlcnJvciA9ICdTaG91bGQgb25seSBiZSBhbHBoYWJldCc7XG5cdH1cblxuXHRlbHNlIGlmKHR5cGUgPT09ICdwYXNzd29yZCcpe1xuXHRcdC8vcGFzc3dvcmQgPT0gdmFsdWU7XG5cdFx0ZXJyb3IgPSAnVGhpcyBmaWVsZCBpcyByZXF1aXJlZCc7XG5cblx0fVxuXG5cdGVsc2UgaWYodHlwZSA9PT0gJ2RhdGUnICApe1xuXHRcdGVycm9yID0gdmFsdWU7XG5cdH1cblxuXHQvL2lmIG51bWJlciBmaWVsZCBpcyBpbmNvcnJlY3Rcblx0ZWxzZSBpZiAodHlwZSA9PT0gJ251bWJlcicgJiYgIS9eKDB8WzEtOV1cXGQqKShcXC5cXGQrKT8kLy50ZXN0KHZhbHVlKSl7XG5cdFx0ZXJyb3IgPSAnUGxlYXNlIGVudGVyIGEgdmFsaWQgbnVtYmVyJ1xuXHR9XG5cblx0ZWxzZSBpZiAodHlwZSA9PT0gJ3Bhc3N3b3JkJyAmJiB2YWx1ZSAhPSBwYXNzd29yZCApe1xuXHRcdGVycm9yID0gJ1Bhc3N3b3JkIG5vdCBtYXRjaGVkJ1xuXHR9XG5cblx0Ly8gSWYgZmllbGQgJ2VtYWlsJ1xuXHRlbHNlIGlmICh0eXBlID09PSAnZW1haWwnICYmICEvXltBLVowLTkuXyUrLV0rQFtBLVowLTkuLV0rXFwuW0EtWl17Miw0fSQvaS50ZXN0KHZhbHVlKSkge1xuXHRcdGVycm9yID0gJ1BsZWFzZSBlbnRlciBhIHZhbGlkIGVtYWlsIGFkZHJlc3MnO1xuXHR9XG5cblx0cmV0dXJuIGVycm9yO1xufTtcblxuZXhwb3J0IGNvbnN0IEZvcm1UZXh0SW5wdXQgPSAocHJvcHM6IEZvcm1UZXh0SW5wdXRQcm9wcykgPT4gKFxuXHQ8RmllbGQgey4uLnByb3BzfSB2YWxpZGF0ZT17cHJvcHMudmFsaWRhdGUgfHwgdmFsaWRhdGUocHJvcHMpfT5cblx0XHR7KHsgZmllbGQsIGZvcm0gfTogYW55KSA9PiB7XG5cdFx0XHRjb25zdCBuYW1lID0gcHJvcHMubmFtZTtcblxuXHRcdFx0Y29uc3QgaW5wdXRQcm9wcyA9IHtcblx0XHRcdFx0Li4uZmllbGQsXG5cdFx0XHRcdG9uQ2hhbmdlOiB1bmRlZmluZWQsXG5cdFx0XHRcdC4uLnByb3BzLFxuXHRcdFx0XHRlcnJvcjogKGZvcm0uZXJyb3JzW25hbWVdICYmIGZvcm0udG91Y2hlZFtuYW1lXSkgfHwgcHJvcHMuZXJyb3IsXG5cdFx0XHRcdGhlbHBlclRleHQ6IGZvcm0uZXJyb3JzW25hbWVdIHx8IHByb3BzLmhlbHBlclRleHQsXG5cdFx0XHRcdFxuXHRcdFx0XHRvbkNoYW5nZVRleHQ6ICh0ZXh0OiBzdHJpbmcpID0+IHtcblx0XHRcdFx0XHRmb3JtLmhhbmRsZUNoYW5nZShuYW1lKSh0ZXh0KTtcblx0XHRcdFx0fSxcblx0XHRcdH07XG5cdFx0XHRyZXR1cm4gKDxCYXNlRm9ybUZpZWxkIHsuLi5pbnB1dFByb3BzfSAvPik7XG5cdFx0fX1cblx0PC9GaWVsZD5cbik7XG5cbkZvcm1UZXh0SW5wdXQuZGVmYXVsdFByb3BzID0ge1xuXHRNYWluQ29tcG9uZW50OiBUZXh0SW5wdXRcbn07Il19