{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/__tests__/FormActions.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlueBaseApp } from '@bluebase/core';\nimport { Formik } from 'formik';\nimport MaterialUIPlugin from '@bluebase/plugin-material-ui';\nimport Plugin from '../../../index';\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport { waitForElement } from 'enzyme-async-helpers';\nimport { getComponent } from '@bluebase/components';\nimport deepmerge from 'deepmerge';\n\n\nconst fieldProps = {\n\t//direction: 'right',\n\tname: 'form-actions',\n\ttype: 'actions',\n\n\tfields: [{\n\t\tname: 'reset',\n\t\ttype: 'reset',\n\t\tnested : true,\n\t},\n\t {\n\t\tname: 'submit',\n\t\ttitle: 'Login',\n\t\ttype: 'submit',\n\t}\n]\n};\n\nconst initialValues = {\n};\n\n\ndescribe('FormActions', () => {\n\n\tit('should render all form fields in the schema with direction right', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst FormActions = getComponent('FormActions');\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormActions {...fieldProps as any} direction = 'right' />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormActions);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\tconst root: any = component.find('[testID=\"form-actions\"]').first().prop('style');\n\t\tconst rootStyles: any = deepmerge.all(root.filter((x: any) => !!x));\n\t\t const childStyles: any = component.find('FieldWrapper View').first().prop('style');\n\t\t// Check fields\n\t\texpect(rootStyles.justifyContent).toBe('flex-end');\n\t\t expect(childStyles.marginRight).toBe(16);\n\t\t\n\t});\n\n\n\tit('should render all form fields in the schema with direction left', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\t\tconst FormActions = getComponent('FormActions');\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormActions {...fieldProps as any} direction=\"left\" />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormActions);\n\n\t\t //expect(component).toMatchSnapshot();\n\n\t\tconst root: any = component.find('[testID=\"form-actions\"]').first().prop('style');\n\t\tconst rootStyles: any = deepmerge.all(root.filter((x: any) => !!x));\n\t\tconst childStyles: any = component.find('FieldWrapper View').first().prop('style');\n\n\t\t// Check fields\n\t\texpect(rootStyles.justifyContent).toBe('flex-start');\n\t\texpect(childStyles.marginLeft).toBe(16);\n\t});\n\n\tit('should render all form fields in the schema with space between', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\t\tconst FormActions = getComponent('FormActions');\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormActions style={{}} {...fieldProps as any} direction = \"space-between\"  />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormActions);\n\n\t\t //expect(component).toMatchSnapshot();\n\n\t\tconst root: any = component.find('[testID=\"form-actions\"]').first().prop('style');\n\t\tconst rootStyles: any = deepmerge.all(root.filter((x: any) => !!x));\n\t\t// const childStyles: any = component.find('FieldWrapper View').first().prop('style');\n\n\t\t// Check fields\n\t\texpect(rootStyles.justifyContent).toBe('space-between');\n\t\t// expect(childStyles.marginLeft).toBe(16);\n\t});\n\tit('should render all form fields in the schema with empty object', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\t\tconst FormActions = getComponent('FormActions');\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin, MaterialUIPlugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormActions style={{}} {...fieldProps as any} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormActions);\n\n\t\t //expect(component).toMatchSnapshot();\n\n\t\tconst root: any = component.find('[testID=\"form-actions\"]').first().prop('style');\n\t\tconst rootStyles: any = deepmerge.all(root.filter((x: any) => !!x));\n\t\t// const childStyles: any = component.find('FieldWrapper View').first().prop('style');\n\n\t\t// Check fields\n\t\texpect(rootStyles.justifyContent).toBeUndefined();\n\t\t// expect(childStyles.marginLeft).toBe(16);\n\t});\n});\n"]}