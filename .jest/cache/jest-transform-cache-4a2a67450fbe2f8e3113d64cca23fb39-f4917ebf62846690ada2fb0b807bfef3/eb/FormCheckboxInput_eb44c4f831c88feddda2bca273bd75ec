65dbd75bdaaf7eca8e257066c36554fb
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var components_1 = require("@bluebase/components");

var formik_1 = require("formik");

var react_1 = tslib_1.__importDefault(require("react"));

var BaseFormField = components_1.getComponent('BaseFormField');

exports.FormCheckboxInput = function (props) {
  return react_1.default.createElement(formik_1.Field, (0, _extends2.default)({}, props), function (_ref) {
    var field = _ref.field,
        form = _ref.form;
    var name = props.name;
    var value = formik_1.getIn(form.values, name);
    var inputProps = (0, _extends2.default)({}, props, {
      checked: Boolean(value),
      onValueChange: function onValueChange(_value, checked) {
        form.setFieldValue(field.name, checked);
        value ? props.onValueChange ? props.onValueChange(value, checked) : null : props.onValueChange ? props.onValueChange(value, checked) : null;
      }
    });
    return react_1.default.createElement(BaseFormField, (0, _extends2.default)({
      MainComponent: components_1.Checkbox
    }, inputProps));
  });
};

exports.FormCheckboxInput.defaultProps = {};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vRmllbGRzL0Zvcm1DaGVja2JveElucHV0LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsc0JBQUEsQ0FBQTs7QUFDQSxJQUFBLFFBQUEsR0FBQSxPQUFBLENBQUEsUUFBQSxDQUFBOztBQUVBLElBQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQU9BLElBQU0sYUFBYSxHQUFHLFlBQUEsQ0FBQSxZQUFBLENBQWlDLGVBQWpDLENBQXRCOztBQUVhLE9BQUEsQ0FBQSxpQkFBQSxHQUFvQixVQUFDLEtBQUQsRUFBa0M7QUFFbEUsU0FDQyxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxRQUFBLENBQUEsS0FBRCxFQUFNLHVCQUFBLEVBQUEsRUFBSyxLQUFMLENBQU4sRUFDQyxnQkFBeUI7QUFBQSxRQUF0QixLQUFzQixRQUF0QixLQUFzQjtBQUFBLFFBQWYsSUFBZSxRQUFmLElBQWU7QUFFekIsUUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQW5CO0FBQ0EsUUFBTSxLQUFLLEdBQUcsUUFBQSxDQUFBLEtBQUEsQ0FBTSxJQUFJLENBQUMsTUFBWCxFQUFtQixJQUFuQixDQUFkO0FBRUEsUUFBTSxVQUFVLEdBQUEsdUJBQUEsRUFBQSxFQUNaLEtBRFksRUFDUDtBQUNSLE1BQUEsT0FBTyxFQUFFLE9BQU8sQ0FBQyxLQUFELENBRFI7QUFFUixNQUFBLGFBQWEsRUFBRSx1QkFBQyxNQUFELEVBQWMsT0FBZCxFQUFrQztBQUVoRCxRQUFBLElBQUksQ0FBQyxhQUFMLENBQW1CLEtBQUssQ0FBQyxJQUF6QixFQUErQixPQUEvQjtBQUNBLFFBQUEsS0FBSyxHQUFHLEtBQUssQ0FBQyxhQUFOLEdBQXNCLEtBQUssQ0FBQyxhQUFOLENBQW9CLEtBQXBCLEVBQTBCLE9BQTFCLENBQXRCLEdBQXlELElBQTVELEdBQXNFLEtBQUssQ0FBQyxhQUFOLEdBQXNCLEtBQUssQ0FBQyxhQUFOLENBQW9CLEtBQXBCLEVBQTBCLE9BQTFCLENBQXRCLEdBQTBELElBQXJJO0FBSUE7QUFUTyxLQURPLENBQWhCO0FBYUEsV0FBUSxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxhQUFELEVBQWMsdUJBQUE7QUFBQyxNQUFBLGFBQWEsRUFBRSxZQUFBLENBQUE7QUFBaEIsS0FBQSxFQUE4QixVQUE5QixDQUFkLENBQVI7QUFDQSxHQXBCRCxDQUREO0FBd0JBLENBMUJZOztBQTRCYixPQUFBLENBQUEsaUJBQUEsQ0FBa0IsWUFBbEIsR0FBaUMsRUFBakMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGVja2JveCwgQ2hlY2tib3hQcm9wcywgZ2V0Q29tcG9uZW50IH0gZnJvbSAnQGJsdWViYXNlL2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgRmllbGQsIGdldEluIH0gZnJvbSAnZm9ybWlrJztcbmltcG9ydCB7IEJhc2VGb3JtRmllbGRQcm9wcyB9IGZyb20gJy4uL0Jhc2VGb3JtRmllbGQnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGludGVyZmFjZSBGb3JtQ2hlY2tib3hJbnB1dFByb3BzIGV4dGVuZHMgQ2hlY2tib3hQcm9wcyB7XG5cdHR5cGU6ICdjaGVja2JveCcsXG5cdG5hbWU6IHN0cmluZyxcbn1cblxuY29uc3QgQmFzZUZvcm1GaWVsZCA9IGdldENvbXBvbmVudDxCYXNlRm9ybUZpZWxkUHJvcHM+KCdCYXNlRm9ybUZpZWxkJyk7XG5cbmV4cG9ydCBjb25zdCBGb3JtQ2hlY2tib3hJbnB1dCA9IChwcm9wczogRm9ybUNoZWNrYm94SW5wdXRQcm9wcykgPT4ge1xuXG5cdHJldHVybiAoXG5cdFx0PEZpZWxkIHsuLi5wcm9wc30+XG5cdFx0eyh7IGZpZWxkLCBmb3JtIH06IGFueSkgPT4ge1xuXG5cdFx0XHRjb25zdCBuYW1lID0gcHJvcHMubmFtZTtcblx0XHRcdGNvbnN0IHZhbHVlID0gZ2V0SW4oZm9ybS52YWx1ZXMsIG5hbWUpO1xuXG5cdFx0XHRjb25zdCBpbnB1dFByb3BzID0ge1xuXHRcdFx0XHQuLi5wcm9wcyxcblx0XHRcdFx0Y2hlY2tlZDogQm9vbGVhbih2YWx1ZSksXG5cdFx0XHRcdG9uVmFsdWVDaGFuZ2U6IChfdmFsdWU6IGFueSwgY2hlY2tlZDogYm9vbGVhbikgPT4gXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRmb3JtLnNldEZpZWxkVmFsdWUoZmllbGQubmFtZSwgY2hlY2tlZClcblx0XHRcdFx0IHZhbHVlID8gcHJvcHMub25WYWx1ZUNoYW5nZSA/IHByb3BzLm9uVmFsdWVDaGFuZ2UodmFsdWUsY2hlY2tlZCk6bnVsbCA6ICAgKHByb3BzLm9uVmFsdWVDaGFuZ2UgPyBwcm9wcy5vblZhbHVlQ2hhbmdlKHZhbHVlLGNoZWNrZWQpIDpudWxsKSBcblxuXG5cdFx0XHRcdFxuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0XHRyZXR1cm4gKDxCYXNlRm9ybUZpZWxkIE1haW5Db21wb25lbnQ9e0NoZWNrYm94fSB7Li4uaW5wdXRQcm9wc30gLz4pO1xuXHRcdH19XG5cdDwvRmllbGQ+XG5cdCk7XG59O1xuXG5Gb3JtQ2hlY2tib3hJbnB1dC5kZWZhdWx0UHJvcHMgPSB7XG59O1xuIl19