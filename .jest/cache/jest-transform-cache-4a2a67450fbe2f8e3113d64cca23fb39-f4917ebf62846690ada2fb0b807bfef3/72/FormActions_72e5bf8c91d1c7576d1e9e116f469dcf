64e02222c9187a05a642154870dd20b0
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

Object.defineProperty(exports, "__esModule", {
  value: true
});

var tslib_1 = require("tslib");

var FormFields_1 = require("../FormFields");

var react_1 = tslib_1.__importDefault(require("react"));

var components_1 = require("@bluebase/components");

var FieldWrapper = function FieldWrapper(_ref) {
  var field = _ref.field,
      parent = _ref.parent,
      children = _ref.children;
  var direction = parent.direction,
      styles = parent.styles,
      style = parent.style,
      textAlignment = parent.textAlignment;
  return react_1.default.createElement(components_1.View, {
    key: field.name,
    style: [direction === "left" ? styles.fieldContainerLeft : direction === "right" ? styles.fieldContainerRight : direction === "space-between" ? styles.fieldContainerBetween : null, textAlignment === "left" ? styles.textContainerLeft : textAlignment === "right" ? styles.textContainerRight : null, style]
  }, children);
};

exports.FormActions = function (props) {
  var direction = props.direction,
      style = props.style,
      _styles = props.styles;
  var styles = _styles;
  return react_1.default.createElement(components_1.View, {
    style: [styles.root, direction === 'left' ? styles.rootLeft : direction === 'right' ? styles.rootRight : direction === 'space-between' ? styles.rootSpaceBetween : null, style],
    testID: "form-actions"
  }, react_1.default.createElement(FormFields_1.FormFields, (0, _extends2.default)({
    FieldWrapper: FieldWrapper
  }, props)));
};

exports.FormActions.defaultProps = {
  direction: 'right'
};

exports.FormActions.defaultStyles = function (theme) {
  return {
    fieldContainerLeft: {
      marginLeft: theme.spacing.unit * 2
    },
    fieldContainerRight: {
      marginRight: theme.spacing.unit * 2
    },
    fieldContainerBetween: {
      marginLeft: theme.spacing.unit * 0,
      marginRight: theme.spacing.unit * 0
    },
    root: {
      flexDirection: 'row',
      paddingVertical: theme.spacing.unit * 2
    },
    rootLeft: {
      justifyContent: 'flex-start'
    },
    rootRight: {
      justifyContent: 'flex-end'
    },
    rootSpaceBetween: {
      justifyContent: 'space-between'
    }
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL211enphbWlsL0RvY3VtZW50cy9ibHVlYmFzZS9wbHVnaW4tanNvbi1zY2hlbWEtY29tcG9uZW50cy9zcmMvSnNvbkZvcm0vRmllbGRzL0Zvcm1BY3Rpb25zLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBOztBQUdBLElBQUEsT0FBQSxHQUFBLE9BQUEsQ0FBQSxlQUFBLENBQUEsT0FBQSxDQUFBLE9BQUEsQ0FBQSxDQUFBOztBQUVBLElBQUEsWUFBQSxHQUFBLE9BQUEsQ0FBQSxzQkFBQSxDQUFBOztBQXNCQSxJQUFNLFlBQVksR0FBRyxTQUFmLFlBQWUsT0FBa0Q7QUFBQSxNQUEvQyxLQUErQyxRQUEvQyxLQUErQztBQUFBLE1BQXhDLE1BQXdDLFFBQXhDLE1BQXdDO0FBQUEsTUFBakMsUUFBaUMsUUFBakMsUUFBaUM7QUFBQSxNQUU5RCxTQUY4RCxHQUVsQixNQUZrQixDQUU5RCxTQUY4RDtBQUFBLE1BRW5ELE1BRm1ELEdBRWxCLE1BRmtCLENBRW5ELE1BRm1EO0FBQUEsTUFFM0MsS0FGMkMsR0FFbEIsTUFGa0IsQ0FFM0MsS0FGMkM7QUFBQSxNQUVwQyxhQUZvQyxHQUVsQixNQUZrQixDQUVwQyxhQUZvQztBQUl0RSxTQUNDLE9BQUEsQ0FBQSxPQUFBLENBQUEsYUFBQSxDQUFDLFlBQUEsQ0FBQSxJQUFELEVBQUs7QUFDSixJQUFBLEdBQUcsRUFBRSxLQUFLLENBQUMsSUFEUDtBQUVKLElBQUEsS0FBSyxFQUFFLENBQUMsU0FBUyxLQUFLLE1BQWQsR0FBdUIsTUFBTSxDQUFDLGtCQUE5QixHQUFtRCxTQUFTLEtBQUssT0FBZCxHQUF3QixNQUFNLENBQUMsbUJBQS9CLEdBQXFELFNBQVMsS0FBSyxlQUFkLEdBQWdDLE1BQU0sQ0FBQyxxQkFBdkMsR0FBK0QsSUFBeEssRUFDUCxhQUFhLEtBQUssTUFBbEIsR0FBMkIsTUFBTSxDQUFDLGlCQUFsQyxHQUFzRCxhQUFhLEtBQUssT0FBbEIsR0FBNEIsTUFBTSxDQUFDLGtCQUFuQyxHQUF3RCxJQUR2RyxFQUM2RyxLQUQ3RztBQUZILEdBQUwsRUFLQyxRQUxELENBREQ7QUFTQSxDQWJEOztBQW1CYSxPQUFBLENBQUEsV0FBQSxHQUFjLFVBQUMsS0FBRCxFQUE0QjtBQUFBLE1BRTlDLFNBRjhDLEdBRVIsS0FGUSxDQUU5QyxTQUY4QztBQUFBLE1BRW5DLEtBRm1DLEdBRVIsS0FGUSxDQUVuQyxLQUZtQztBQUFBLE1BRXBCLE9BRm9CLEdBRVIsS0FGUSxDQUU1QixNQUY0QjtBQUd0RCxNQUFNLE1BQU0sR0FBRyxPQUFmO0FBQ0EsU0FFQyxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxZQUFBLENBQUEsSUFBRCxFQUFLO0FBQUMsSUFBQSxLQUFLLEVBQUUsQ0FBQyxNQUFNLENBQUMsSUFBUixFQUFjLFNBQVMsS0FBSyxNQUFkLEdBQXVCLE1BQU0sQ0FBQyxRQUE5QixHQUEwQyxTQUFTLEtBQUssT0FBZCxHQUF3QixNQUFNLENBQUMsU0FBL0IsR0FBMkMsU0FBUyxLQUFLLGVBQWQsR0FBZ0MsTUFBTSxDQUFDLGdCQUF2QyxHQUEwRCxJQUE3SixFQUFtSyxLQUFuSyxDQUFSO0FBQW1MLElBQUEsTUFBTSxFQUFDO0FBQTFMLEdBQUwsRUFDQyxPQUFBLENBQUEsT0FBQSxDQUFBLGFBQUEsQ0FBQyxZQUFBLENBQUEsVUFBRCxFQUFXLHVCQUFBO0FBQUMsSUFBQSxZQUFZLEVBQUU7QUFBZixHQUFBLEVBQWlDLEtBQWpDLENBQVgsQ0FERCxDQUZEO0FBTUEsQ0FWWTs7QUFZYixPQUFBLENBQUEsV0FBQSxDQUFZLFlBQVosR0FBMkI7QUFDMUIsRUFBQSxTQUFTLEVBQUU7QUFEZSxDQUEzQjs7QUFLQSxPQUFBLENBQUEsV0FBQSxDQUFZLGFBQVosR0FBNEIsVUFBQyxLQUFEO0FBQUEsU0FBc0M7QUFDakUsSUFBQSxrQkFBa0IsRUFBRTtBQUNuQixNQUFBLFVBQVUsRUFBRSxLQUFLLENBQUMsT0FBTixDQUFjLElBQWQsR0FBcUI7QUFEZCxLQUQ2QztBQUlqRSxJQUFBLG1CQUFtQixFQUFFO0FBQ3BCLE1BQUEsV0FBVyxFQUFFLEtBQUssQ0FBQyxPQUFOLENBQWMsSUFBZCxHQUFxQjtBQURkLEtBSjRDO0FBUWpFLElBQUEscUJBQXFCLEVBQUU7QUFDdEIsTUFBQSxVQUFVLEVBQUUsS0FBSyxDQUFDLE9BQU4sQ0FBYyxJQUFkLEdBQXFCLENBRFg7QUFFdEIsTUFBQSxXQUFXLEVBQUUsS0FBSyxDQUFDLE9BQU4sQ0FBYyxJQUFkLEdBQXFCO0FBRlosS0FSMEM7QUFZakUsSUFBQSxJQUFJLEVBQUU7QUFDTCxNQUFBLGFBQWEsRUFBRSxLQURWO0FBRUosTUFBQSxlQUFlLEVBQUUsS0FBSyxDQUFDLE9BQU4sQ0FBYyxJQUFkLEdBQXFCO0FBRmxDLEtBWjJEO0FBZ0JqRSxJQUFBLFFBQVEsRUFBRTtBQUNULE1BQUEsY0FBYyxFQUFFO0FBRFAsS0FoQnVEO0FBb0JqRSxJQUFBLFNBQVMsRUFBRTtBQUNWLE1BQUEsY0FBYyxFQUFFO0FBRE4sS0FwQnNEO0FBdUJqRSxJQUFBLGdCQUFnQixFQUFFO0FBQ2pCLE1BQUEsY0FBYyxFQUFFO0FBREM7QUF2QitDLEdBQXRDO0FBQUEsQ0FBNUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGaWVsZFdyYXBwZXJQcm9wcywgRm9ybUZpZWxkcyB9IGZyb20gJy4uL0Zvcm1GaWVsZHMnO1xuaW1wb3J0IHsgU3R5bGVQcm9wLCBWaWV3U3R5bGUgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IHsgRm9ybUZpZWxkUHJvcHMgfSBmcm9tICcuL0Zvcm1GaWVsZFByb3BzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBUaGVtZSB9IGZyb20gJ0BibHVlYmFzZS9jb3JlJztcbmltcG9ydCB7IFZpZXcgfSBmcm9tICdAYmx1ZWJhc2UvY29tcG9uZW50cyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRm9ybUFjdGlvbnNTdHlsZXMge1xuXHRmaWVsZENvbnRhaW5lckxlZnQ6IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuXHRmaWVsZENvbnRhaW5lclJpZ2h0OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcblx0ZmllbGRDb250YWluZXJCZXR3ZWVuIDpTdHlsZVByb3A8Vmlld1N0eWxlPjtcblx0cm9vdFNwYWNlQmV0d2VlbiA6IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuXHRyb290OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcblx0cm9vdExlZnQ6IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xuXHRyb290UmlnaHQ6IFN0eWxlUHJvcDxWaWV3U3R5bGU+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEZvcm1BY3Rpb25zUHJvcHMge1xuXHR0eXBlOiAnYWN0aW9ucyc7XG5cdG5hbWU6IHN0cmluZztcblx0ZGlyZWN0aW9uOiAnbGVmdCcgfCAncmlnaHQnIHwgJ3NwYWNlLWJldHdlZW4nO1xuXHRmaWVsZHM6IEZvcm1GaWVsZFByb3BzW107XG5cdHN0eWxlPzogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG5cdHN0eWxlcz86IFBhcnRpYWw8Rm9ybUFjdGlvbnNTdHlsZXM+O1xufVxuXG5cbmNvbnN0IEZpZWxkV3JhcHBlciA9ICh7IGZpZWxkLCBwYXJlbnQsY2hpbGRyZW4gfTogRmllbGRXcmFwcGVyUHJvcHMpID0+IHtcblxuXHRjb25zdCB7IGRpcmVjdGlvbiwgc3R5bGVzLCBzdHlsZSwgdGV4dEFsaWdubWVudCB9ID0gcGFyZW50O1xuXG5cdHJldHVybiAoXG5cdFx0PFZpZXdcblx0XHRcdGtleT17ZmllbGQubmFtZX1cblx0XHRcdHN0eWxlPXtbZGlyZWN0aW9uID09PSBcImxlZnRcIiA/IHN0eWxlcy5maWVsZENvbnRhaW5lckxlZnQgOiBkaXJlY3Rpb24gPT09IFwicmlnaHRcIiA/IHN0eWxlcy5maWVsZENvbnRhaW5lclJpZ2h0IDogZGlyZWN0aW9uID09PSBcInNwYWNlLWJldHdlZW5cIiA/IHN0eWxlcy5maWVsZENvbnRhaW5lckJldHdlZW4gOiBudWxsLFxuXHRcdFx0dGV4dEFsaWdubWVudCA9PT0gXCJsZWZ0XCIgPyBzdHlsZXMudGV4dENvbnRhaW5lckxlZnQgOiB0ZXh0QWxpZ25tZW50ID09PSBcInJpZ2h0XCIgPyBzdHlsZXMudGV4dENvbnRhaW5lclJpZ2h0IDogbnVsbCwgc3R5bGUgXX1cblx0XHQ+XG5cdFx0e2NoaWxkcmVufVxuXHRcdDwvVmlldz5cblx0KTtcbn07XG5cbi8qKlxuICogQSBjb21wb25lbnQgdGhhdCByZW5kZXJzIGZvcm0gYWN0aW9ucywgaS5lLiBzdWJtaXQgb3IgcmVzZXQgYnV0dG9uc1xuICogQHBhcmFtIHByb3BzXG4gKi9cbmV4cG9ydCBjb25zdCBGb3JtQWN0aW9ucyA9IChwcm9wczogRm9ybUFjdGlvbnNQcm9wcykgPT4ge1xuXG5cdGNvbnN0IHsgZGlyZWN0aW9uLCBzdHlsZSwgc3R5bGVzOiBfc3R5bGVzIH0gPSBwcm9wcztcblx0Y29uc3Qgc3R5bGVzID0gX3N0eWxlcyBhcyBGb3JtQWN0aW9uc1N0eWxlcztcblx0cmV0dXJuIChcblx0XHRcblx0XHQ8VmlldyBzdHlsZT17W3N0eWxlcy5yb290LCBkaXJlY3Rpb24gPT09ICdsZWZ0JyA/IHN0eWxlcy5yb290TGVmdCA6ICBkaXJlY3Rpb24gPT09ICdyaWdodCcgPyBzdHlsZXMucm9vdFJpZ2h0IDogZGlyZWN0aW9uID09PSAnc3BhY2UtYmV0d2VlbicgPyBzdHlsZXMucm9vdFNwYWNlQmV0d2VlbiA6IG51bGwsIHN0eWxlXX0gdGVzdElEPVwiZm9ybS1hY3Rpb25zXCI+XG5cdFx0XHQ8Rm9ybUZpZWxkcyBGaWVsZFdyYXBwZXI9e0ZpZWxkV3JhcHBlcn0gey4uLnByb3BzfSAgLz5cblx0XHQ8L1ZpZXc+XG5cdCk7XG59O1xuXG5Gb3JtQWN0aW9ucy5kZWZhdWx0UHJvcHMgPSB7XG5cdGRpcmVjdGlvbjogJ3JpZ2h0Jyxcblx0Ly90ZXh0QWxpZ25tZW50OiAnbGVmdCdcbn07XG5cbkZvcm1BY3Rpb25zLmRlZmF1bHRTdHlsZXMgPSAodGhlbWU6IFRoZW1lKTogRm9ybUFjdGlvbnNTdHlsZXMgPT4gKHtcblx0ZmllbGRDb250YWluZXJMZWZ0OiB7XG5cdFx0bWFyZ2luTGVmdDogdGhlbWUuc3BhY2luZy51bml0ICogMixcblx0fSxcblx0ZmllbGRDb250YWluZXJSaWdodDoge1xuXHRcdG1hcmdpblJpZ2h0OiB0aGVtZS5zcGFjaW5nLnVuaXQgKiAyLFxuXHR9LFxuXHRcblx0ZmllbGRDb250YWluZXJCZXR3ZWVuIDp7XG5cdFx0bWFyZ2luTGVmdDogdGhlbWUuc3BhY2luZy51bml0ICogMCxcblx0XHRtYXJnaW5SaWdodDogdGhlbWUuc3BhY2luZy51bml0ICogMCxcblx0fSxcblx0cm9vdDoge1xuXHRcdGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuXHRcdCBwYWRkaW5nVmVydGljYWw6IHRoZW1lLnNwYWNpbmcudW5pdCAqIDIsXG5cdH0sXG5cdHJvb3RMZWZ0OiB7XG5cdFx0anVzdGlmeUNvbnRlbnQ6ICdmbGV4LXN0YXJ0Jyxcblx0XHRcblx0fSxcblx0cm9vdFJpZ2h0OiB7XG5cdFx0anVzdGlmeUNvbnRlbnQ6ICdmbGV4LWVuZCcsXG5cdH0sXG5cdHJvb3RTcGFjZUJldHdlZW46IHtcblx0XHRqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuXHR9XG59KTsiXX0=