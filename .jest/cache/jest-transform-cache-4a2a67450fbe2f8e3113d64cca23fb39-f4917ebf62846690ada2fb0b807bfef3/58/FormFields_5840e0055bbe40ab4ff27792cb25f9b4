682f7f1b995f714d20aa290234c495f8
"use strict";

/* istanbul ignore next */
var cov_naa8aix9y = function () {
  var path = "/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/FormFields.tsx";
  var hash = "0e4440d002e42317e2197e9d0dc2982c95ade505";

  var Function = function () {}.constructor;

  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/FormFields.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 29
        },
        end: {
          line: 3,
          column: 84
        }
      },
      "1": {
        start: {
          line: 5,
          column: 16
        },
        end: {
          line: 5,
          column: 81
        }
      },
      "2": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 95
        }
      },
      "3": {
        start: {
          line: 9,
          column: 20
        },
        end: {
          line: 9,
          column: 89
        }
      },
      "4": {
        start: {
          line: 11,
          column: 34
        },
        end: {
          line: 11,
          column: 117
        }
      },
      "5": {
        start: {
          line: 13,
          column: 23
        },
        end: {
          line: 13,
          column: 95
        }
      },
      "6": {
        start: {
          line: 15,
          column: 30
        },
        end: {
          line: 15,
          column: 109
        }
      },
      "7": {
        start: {
          line: 17,
          column: 17
        },
        end: {
          line: 17,
          column: 83
        }
      },
      "8": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "9": {
        start: {
          line: 23,
          column: 14
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "10": {
        start: {
          line: 25,
          column: 14
        },
        end: {
          line: 25,
          column: 55
        }
      },
      "11": {
        start: {
          line: 27,
          column: 21
        },
        end: {
          line: 27,
          column: 46
        }
      },
      "12": {
        start: {
          line: 29,
          column: 17
        },
        end: {
          line: 89,
          column: 28
        }
      },
      "13": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 30,
          column: 61
        }
      },
      "14": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 35,
          column: 52
        }
      },
      "15": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 120
        }
      },
      "16": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 22
        }
      },
      "17": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 92
        }
      },
      "18": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 17
        }
      },
      "19": {
        start: {
          line: 42,
          column: 2
        },
        end: {
          line: 87,
          column: 6
        }
      },
      "20": {
        start: {
          line: 45,
          column: 19
        },
        end: {
          line: 45,
          column: 23
        }
      },
      "21": {
        start: {
          line: 47,
          column: 19
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "22": {
        start: {
          line: 48,
          column: 6
        },
        end: {
          line: 51,
          column: 9
        }
      },
      "23": {
        start: {
          line: 49,
          column: 19
        },
        end: {
          line: 49,
          column: 29
        }
      },
      "24": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 64
        }
      },
      "25": {
        start: {
          line: 56,
          column: 19
        },
        end: {
          line: 56,
          column: 23
        }
      },
      "26": {
        start: {
          line: 58,
          column: 24
        },
        end: {
          line: 58,
          column: 34
        }
      },
      "27": {
        start: {
          line: 59,
          column: 21
        },
        end: {
          line: 59,
          column: 41
        }
      },
      "28": {
        start: {
          line: 60,
          column: 31
        },
        end: {
          line: 60,
          column: 49
        }
      },
      "29": {
        start: {
          line: 61,
          column: 19
        },
        end: {
          line: 61,
          column: 74
        }
      },
      "30": {
        start: {
          line: 63,
          column: 6
        },
        end: {
          line: 65,
          column: 7
        }
      },
      "31": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 42
        }
      },
      "32": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 69,
          column: 9
        }
      },
      "33": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 62
        }
      },
      "34": {
        start: {
          line: 74,
          column: 25
        },
        end: {
          line: 74,
          column: 48
        }
      },
      "35": {
        start: {
          line: 75,
          column: 6
        },
        end: {
          line: 75,
          column: 58
        }
      },
      "36": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 26
        }
      },
      "37": {
        start: {
          line: 77,
          column: 22
        },
        end: {
          line: 77,
          column: 45
        }
      },
      "38": {
        start: {
          line: 78,
          column: 22
        },
        end: {
          line: 80,
          column: 16
        }
      },
      "39": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 85,
          column: 32
        }
      },
      "40": {
        start: {
          line: 88,
          column: 2
        },
        end: {
          line: 88,
          column: 20
        }
      },
      "41": {
        start: {
          line: 91,
          column: 0
        },
        end: {
          line: 91,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 17
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 50
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 29
      },
      "1": {
        name: "FormFields",
        decl: {
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 32,
            column: 21
          }
        },
        loc: {
          start: {
            line: 32,
            column: 29
          },
          end: {
            line: 40,
            column: 3
          }
        },
        line: 32
      },
      "2": {
        name: "componentWillMount",
        decl: {
          start: {
            line: 44,
            column: 20
          },
          end: {
            line: 44,
            column: 38
          }
        },
        loc: {
          start: {
            line: 44,
            column: 41
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 44
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 48,
            column: 21
          },
          end: {
            line: 48,
            column: 22
          }
        },
        loc: {
          start: {
            line: 48,
            column: 38
          },
          end: {
            line: 51,
            column: 7
          }
        },
        line: 48
      },
      "4": {
        name: "render",
        decl: {
          start: {
            line: 55,
            column: 20
          },
          end: {
            line: 55,
            column: 26
          }
        },
        loc: {
          start: {
            line: 55,
            column: 29
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 55
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 67,
            column: 24
          },
          end: {
            line: 67,
            column: 25
          }
        },
        loc: {
          start: {
            line: 67,
            column: 48
          },
          end: {
            line: 69,
            column: 7
          }
        },
        line: 67
      },
      "6": {
        name: "renderField",
        decl: {
          start: {
            line: 73,
            column: 20
          },
          end: {
            line: 73,
            column: 31
          }
        },
        loc: {
          start: {
            line: 73,
            column: 54
          },
          end: {
            line: 86,
            column: 5
          }
        },
        line: 73
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 47,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 47,
            column: 36
          }
        }, {
          start: {
            line: 47,
            column: 40
          },
          end: {
            line: 47,
            column: 42
          }
        }],
        line: 47
      },
      "1": {
        loc: {
          start: {
            line: 61,
            column: 19
          },
          end: {
            line: 61,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 61,
            column: 51
          },
          end: {
            line: 61,
            column: 53
          }
        }, {
          start: {
            line: 61,
            column: 56
          },
          end: {
            line: 61,
            column: 74
          }
        }],
        line: 61
      },
      "2": {
        loc: {
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 65,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 65,
            column: 7
          }
        }, {
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 65,
            column: 7
          }
        }],
        line: 63
      },
      "3": {
        loc: {
          start: {
            line: 75,
            column: 19
          },
          end: {
            line: 75,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 75,
            column: 19
          },
          end: {
            line: 75,
            column: 29
          }
        }, {
          start: {
            line: 75,
            column: 33
          },
          end: {
            line: 75,
            column: 57
          }
        }],
        line: 75
      },
      "4": {
        loc: {
          start: {
            line: 81,
            column: 13
          },
          end: {
            line: 85,
            column: 31
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 81,
            column: 28
          },
          end: {
            line: 85,
            column: 19
          }
        }, {
          start: {
            line: 85,
            column: 22
          },
          end: {
            line: 85,
            column: 31
          }
        }],
        line: 81
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  coverageData.hash = hash;
  return coverage[path] = coverageData;
}();

var _interopRequireDefault =
/* istanbul ignore next */
(cov_naa8aix9y.s[0]++, require("@babel/runtime/helpers/interopRequireDefault"));

var _extends2 =
/* istanbul ignore next */
(cov_naa8aix9y.s[1]++, _interopRequireDefault(require("@babel/runtime/helpers/extends")));

var _classCallCheck2 =
/* istanbul ignore next */
(cov_naa8aix9y.s[2]++, _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck")));

var _createClass2 =
/* istanbul ignore next */
(cov_naa8aix9y.s[3]++, _interopRequireDefault(require("@babel/runtime/helpers/createClass")));

var _possibleConstructorReturn2 =
/* istanbul ignore next */
(cov_naa8aix9y.s[4]++, _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn")));

var _getPrototypeOf2 =
/* istanbul ignore next */
(cov_naa8aix9y.s[5]++, _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf")));

var _assertThisInitialized2 =
/* istanbul ignore next */
(cov_naa8aix9y.s[6]++, _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized")));

var _inherits2 =
/* istanbul ignore next */
(cov_naa8aix9y.s[7]++, _interopRequireDefault(require("@babel/runtime/helpers/inherits")));

/* istanbul ignore next */
cov_naa8aix9y.s[8]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
var tslib_1 =
/* istanbul ignore next */
(cov_naa8aix9y.s[9]++, require("tslib"));
var react_1 =
/* istanbul ignore next */
(cov_naa8aix9y.s[10]++, tslib_1.__importDefault(require("react")));
var getFormField_1 =
/* istanbul ignore next */
(cov_naa8aix9y.s[11]++, require("./getFormField"));
var FormFields =
/* istanbul ignore next */
(cov_naa8aix9y.s[12]++, function (_react_1$default$Comp) {
  /* istanbul ignore next */
  cov_naa8aix9y.f[0]++;
  cov_naa8aix9y.s[13]++;
  (0, _inherits2.default)(FormFields, _react_1$default$Comp);

  function FormFields(props) {
    /* istanbul ignore next */
    cov_naa8aix9y.f[1]++;

    var _this;

    /* istanbul ignore next */
    cov_naa8aix9y.s[14]++;
    (0, _classCallCheck2.default)(this, FormFields);

    /* istanbul ignore next */
    cov_naa8aix9y.s[15]++;
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FormFields).call(this, props));

    /* istanbul ignore next */
    cov_naa8aix9y.s[16]++;
    _this.fields = {};

    /* istanbul ignore next */
    cov_naa8aix9y.s[17]++;
    _this.renderField = _this.renderField.bind((0, _assertThisInitialized2.default)(_this));

    /* istanbul ignore next */
    cov_naa8aix9y.s[18]++;
    return _this;
  }

  /* istanbul ignore next */
  cov_naa8aix9y.s[19]++;
  (0, _createClass2.default)(FormFields, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      /* istanbul ignore next */
      cov_naa8aix9y.f[2]++;

      var _this2 =
      /* istanbul ignore next */
      (cov_naa8aix9y.s[20]++, this);

      var fields =
      /* istanbul ignore next */
      (cov_naa8aix9y.s[21]++,
      /* istanbul ignore next */
      (cov_naa8aix9y.b[0][0]++, this.props.fields) ||
      /* istanbul ignore next */
      (cov_naa8aix9y.b[0][1]++, []));

      /* istanbul ignore next */
      cov_naa8aix9y.s[22]++;
      fields.forEach(function (field) {
        /* istanbul ignore next */
        cov_naa8aix9y.f[3]++;
        var type =
        /* istanbul ignore next */
        (cov_naa8aix9y.s[23]++, field.type);

        /* istanbul ignore next */
        cov_naa8aix9y.s[24]++;
        _this2.fields[type] = getFormField_1.getFormField(type);
      });
    }
  }, {
    key: "render",
    value: function render() {
      /* istanbul ignore next */
      cov_naa8aix9y.f[4]++;

      var _this3 =
      /* istanbul ignore next */
      (cov_naa8aix9y.s[25]++, this);

      var _this$props =
      /* istanbul ignore next */
      (cov_naa8aix9y.s[26]++, this.props),
          children =
      /* istanbul ignore next */
      (cov_naa8aix9y.s[27]++, _this$props.children),
          _this$props$fields =
      /* istanbul ignore next */
      (cov_naa8aix9y.s[28]++, _this$props.fields),
          fields =
      /* istanbul ignore next */
      (cov_naa8aix9y.s[29]++, _this$props$fields === void 0 ?
      /* istanbul ignore next */
      (cov_naa8aix9y.b[1][0]++, []) :
      /* istanbul ignore next */
      (cov_naa8aix9y.b[1][1]++, _this$props$fields));

      /* istanbul ignore next */
      cov_naa8aix9y.s[30]++;

      if (children) {
        /* istanbul ignore next */
        cov_naa8aix9y.b[2][0]++;
        cov_naa8aix9y.s[31]++;
        return children(this.renderField);
      } else
      /* istanbul ignore next */
      {
        cov_naa8aix9y.b[2][1]++;
      }

      cov_naa8aix9y.s[32]++;
      return fields.map(function (field, index) {
        /* istanbul ignore next */
        cov_naa8aix9y.f[5]++;
        cov_naa8aix9y.s[33]++;
        return _this3.renderField(field, index, _this3.props);
      });
    }
  }, {
    key: "renderField",
    value: function renderField(field, index, parent) {
      /* istanbul ignore next */
      cov_naa8aix9y.f[6]++;
      var FieldWrapper =
      /* istanbul ignore next */
      (cov_naa8aix9y.s[34]++, this.props.FieldWrapper);

      /* istanbul ignore next */
      cov_naa8aix9y.s[35]++;
      field.name =
      /* istanbul ignore next */
      (cov_naa8aix9y.b[3][0]++, field.name) ||
      /* istanbul ignore next */
      (cov_naa8aix9y.b[3][1]++, index + "-" + field.type);
      var key =
      /* istanbul ignore next */
      (cov_naa8aix9y.s[36]++, field.name);
      var Component =
      /* istanbul ignore next */
      (cov_naa8aix9y.s[37]++, this.fields[field.type]);
      var fieldNode =
      /* istanbul ignore next */
      (cov_naa8aix9y.s[38]++, react_1.default.createElement(Component, (0, _extends2.default)({
        key: key
      }, field)));

      /* istanbul ignore next */
      cov_naa8aix9y.s[39]++;
      return FieldWrapper ?
      /* istanbul ignore next */
      (cov_naa8aix9y.b[4][0]++, react_1.default.createElement(FieldWrapper, {
        key: key,
        field: field,
        parent: parent
      }, fieldNode)) :
      /* istanbul ignore next */
      (cov_naa8aix9y.b[4][1]++, fieldNode);
    }
  }]);

  /* istanbul ignore next */
  cov_naa8aix9y.s[40]++;
  return FormFields;
}(react_1.default.Component));

/* istanbul ignore next */
cov_naa8aix9y.s[41]++;
exports.FormFields = FormFields;