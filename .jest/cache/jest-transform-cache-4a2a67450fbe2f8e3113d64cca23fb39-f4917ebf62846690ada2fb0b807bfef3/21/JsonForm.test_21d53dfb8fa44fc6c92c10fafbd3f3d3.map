{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/__tests__/JsonForm.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlueBaseApp } from '@bluebase/core';\nimport { FormFieldProps } from '../Fields';\nimport { JsonForm } from '../JsonForm';\nimport Plugin from '../../index';\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport { waitForElement } from 'enzyme-async-helpers';\n\nconst fields: FormFieldProps[] = [{\n\tlabel: 'Username',\n\tname: 'username',\n\trequired: true,\n\ttype: 'text',\n}, {\n\tschema: { component: 'Text', text: 'Text Component' },\n\ttype: 'component',\n}, {\n\tlabel: 'Temp',\n\tmax: 32,\n\tmin: 16,\n\tname: 'temp',\n\tstep: 1,\n\ttype: 'range',\n}];\n\nconst initialValues = {\n\t// 'auto-login': true,\n\t// lang: 'js',\n\t// password: '',\n\t// remember: true,\n\ttemp: 26,\n\tusername: '',\n};\n\n\ndescribe('FormFields', () => {\n\n\n\tit('should render all form fields in the schema', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<JsonForm schema={{ fields, initialValues, onSubmit }} />\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, JsonForm);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\texpect(component.find('FormFields').children()).toHaveLength(3);\n\t\texpect(component.find('FormFields').childAt(0).prop('name')).toBe('username');\n\t\texpect(component.find('FormFields').childAt(1).prop('name')).toBe('1-component');\n\t\texpect(component.find('FormFields').childAt(2).prop('name')).toBe('temp');\n\t});\n\n\n\tit('should hook into the form to modify the schema', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst filter = (schema: any) => {\n\n\t\t\tschema.fields.push({\n\t\t\t\tschema: { component: 'Text', text: 'New Injected Text Component' },\n\t\t\t\ttype: 'component',\n\t\t\t});\n\n\t\t\treturn schema;\n\t\t};\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]} filters={{ 'pluggable-form': filter }}>\n\t\t\t\t<JsonForm schema={{ fields, initialValues, onSubmit }} filter=\"pluggable-form\" />\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, JsonForm);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\texpect(component.find('FormFields').children()).toHaveLength(4);\n\t\texpect(component.find('FormFields').childAt(0).prop('name')).toBe('username');\n\t\texpect(component.find('FormFields').childAt(1).prop('name')).toBe('1-component');\n\t\texpect(component.find('FormFields').childAt(2).prop('name')).toBe('temp');\n\t\texpect(component.find('FormFields').childAt(3).prop('name')).toBe('3-component');\n\t});\n\n});\n"]}