{"version":3,"sources":["/home/muzzamil/Documents/bluebase/plugin-json-schema-components/src/JsonForm/Fields/__tests__/FormTextInput.test.tsx"],"names":[],"mappings":"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","sourcesContent":["import { BlueBaseApp } from '@bluebase/core';\nimport { FormTextInput } from '../FormTextInput';\nimport { Formik } from 'formik';\nimport Plugin from '../../../index';\nimport React from 'react';\nimport { mount } from 'enzyme';\nimport { waitForElement } from 'enzyme-async-helpers';\n\nconst fieldProps = [{\n\thelperText: 'This is a helper text',\n\tlabel: 'Username',\n\tname: 'username',\n\trequired: true,\n\ttype: 'text',\n\tnumber : 123\n}, {\n\tlabel: 'Email',\n\tname: 'email',\n\trequired: true,\n\ttype: 'email',\n},{\n\tlabel: 'number',\n\tname: 'number',\n\ttype: 'number',\n}];\n\nconst initialValues = {\n\tusername: 'foo',\n};\n\n\ndescribe('FormTextInput', () => {\n\n\n\tit('should render all form fields in the schema', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormTextInput {...fieldProps[0]} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormTextInput);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\texpect(component.find('TextInput').last().prop('name')).toBe('username');\n\t\texpect(component.find('TextInput').last().prop('value')).toBe('foo');\n\t\texpect(component.find('TextInput').last().prop('type')).toBe('text');\n\t});\n\n\n\tit('should validate required fields', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormTextInput {...fieldProps[0]} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormTextInput);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\tconst validate: any = component.find('FieldInner[name=\"username\"]').last().prop('validate');\n\n\t\t// Check fields\n\t\texpect(validate('')).toBe('This field is required');\n\t\texpect(validate('foo')).toBeUndefined();\n\t});\n\n\n\tit('should validate email fields', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormTextInput {...fieldProps[1]} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormTextInput);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\tconst validate: any = component.find('FieldInner[name=\"email\"]').last().prop('validate');\n\n\t\t// Check fields\n\t\texpect(validate('foo bar')).toBe('Please enter a valid email address');\n\t\texpect(validate('foo@bar.com')).toBeUndefined();\n\t});\n\n\tit('should validate number field', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={initialValues} onSubmit={onSubmit}>\n\t\t\t\t\t<FormTextInput {...fieldProps[2]} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormTextInput);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\tconst validate: any = component.find('FieldInner[name=\"number\"]').last().prop('validate');\n\n\t\t// Check fields\n\t\texpect(validate('name')).toBe('Please enter a valid number');\n\t});\n\n\n\tit('should update field value when onChangeText callback is invoked', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={{}} onSubmit={onSubmit}>\n\t\t\t\t\t<FormTextInput {...fieldProps[0]} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormTextInput);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\texpect(component.find('TextInput').last().prop('name')).toBe('username');\n\t\texpect(component.find('TextInput').last().prop('value')).toBeUndefined();\n\t\texpect(component.find('TextInput').last().prop('type')).toBe('text');\n\t\texpect(component.find('TextInput').last().prop('helperText')).toBe('This is a helper text');\n\n\t\tconst onChangeText: any = component.find('TextInput').first().prop('onChangeText');\n\n\t\tonChangeText('bar');\n\t\tcomponent.update();\n\n\t\t// let any pending callbacks in PromiseJobs run\n\t\tawait Promise.resolve();\n\n\n\t\tsetTimeout(() => {\n\t\t\t// expect(component).toMatchSnapshot();\n\t\t\texpect(component.find('TextInput').last().prop('value')).toBe('bar');\n\t\t\t// expect(onSubmit).toHaveBeenCalledTimes(1);\n\t\t});\n\t});\n\n\n\tit('should render error state if validation fails', async () => {\n\n\t\tconst onSubmit = jest.fn();\n\n\t\tconst component = mount(\n\t\t\t<BlueBaseApp plugins={[Plugin]}>\n\t\t\t\t<Formik initialValues={{}} onSubmit={onSubmit}>\n\t\t\t\t\t<FormTextInput {...fieldProps[0]} />\n\t\t\t\t</Formik>\n\t\t\t</BlueBaseApp>\n\t\t);\n\n\t\tawait waitForElement(component as any, FormTextInput);\n\n\t\t// expect(component).toMatchSnapshot();\n\n\t\t// Check fields\n\t\texpect(component.find('TextInput').last().prop('name')).toBe('username');\n\t\texpect(component.find('TextInput').last().prop('value')).toBeUndefined();\n\t\texpect(component.find('TextInput').last().prop('type')).toBe('text');\n\t\texpect(component.find('TextInput').last().prop('helperText')).toBe('This is a helper text');\n\n\t\tconst formik: any = component.find('FieldInner').first().prop('formik');\n\t\t// expect(component).toMatchSnapshot();\n\t\tformik.setFieldValue('username', null);\n\t\tformik.validateField('username');\n\t\tformik.handleSubmit();\n\n\t\t// let any pending callbacks in PromiseJobs run\n\t\tawait Promise.resolve();\n\n\t\tcomponent.update();\n\n\t\tsetTimeout(() => {\n\t\t\texpect(component).toMatchSnapshot();\n\t\t\texpect(component.find('TextInput').last().prop('helperText')).toBe('This is a helper text');\n\t\t\t// expect(onSubmit).toHaveBeenCalledTimes(1);\n\t\t});\n\t});\n});\n"]}