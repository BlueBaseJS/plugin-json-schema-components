"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const components_1 = require("@bluebase/components");
const core_1 = require("@bluebase/core");
const index_1 = tslib_1.__importDefault(require("../../index"));
const react_1 = tslib_1.__importDefault(require("react"));
const enzyme_1 = require("enzyme");
const enzyme_async_helpers_1 = require("enzyme-async-helpers");
describe('BaseFormField', () => {
    it('should render all elements', async () => {
        const BaseFormField = components_1.getComponent('BaseFormField');
        const component = enzyme_1.mount(react_1.default.createElement(core_1.BlueBaseApp, { plugins: [index_1.default] },
            react_1.default.createElement(BaseFormField, { left: react_1.default.createElement(components_1.Text, null, "Temp"), right: react_1.default.createElement(components_1.Text, null, "26"), MainComponent: components_1.Slider, label: "Username", value: 100 })));
        await enzyme_async_helpers_1.waitForElement(component, BaseFormField);
        // expect(component).toMatchSnapshot();
        expect(component.find('[testID="base-form-field"]').last().children()).toHaveLength(3);
        expect(component.find('[testID="base-form-field-left"] Text').last().text()).toBe('Temp');
        expect(component.find('[testID="base-form-field-main"]').last().children()).toHaveLength(1);
        expect(component.find('[testID="base-form-field-right"] Text').last().text()).toBe('26');
    });
    it('should not render any elements', async () => {
        const BaseFormField = components_1.getComponent('BaseFormField');
        const component = enzyme_1.mount(react_1.default.createElement(core_1.BlueBaseApp, { plugins: [index_1.default] },
            react_1.default.createElement(BaseFormField, null)));
        await enzyme_async_helpers_1.waitForElement(component, BaseFormField);
        // expect(component).toMatchSnapshot();
        expect(component.find('[testID="base-form-field"]').last().children()).toHaveLength(0);
        expect(component.find('[testID="base-form-field-left"]')).toHaveLength(0);
        expect(component.find('[testID="base-form-field-main"]')).toHaveLength(0);
        expect(component.find('[testID="base-form-field-right"]')).toHaveLength(0);
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvbXV6emFtaWwvRG9jdW1lbnRzL2JsdWViYXNlL3BsdWdpbi1qc29uLXNjaGVtYS1jb21wb25lbnRzL3NyYy9Kc29uRm9ybS9fX3Rlc3RzX18vQmFzZUZvcm1GaWVsZC50ZXN0LnRzeCIsIm1hcHBpbmdzIjoiOzs7QUFBQSxxREFBa0U7QUFFbEUseUNBQTZDO0FBQzdDLGdFQUFpQztBQUNqQywwREFBMEI7QUFDMUIsbUNBQStCO0FBQy9CLCtEQUFzRDtBQUV0RCxRQUFRLENBQUMsZUFBZSxFQUFFLEdBQUcsRUFBRTtJQUc5QixFQUFFLENBQUMsNEJBQTRCLEVBQUUsS0FBSyxJQUFJLEVBQUU7UUFFM0MsTUFBTSxhQUFhLEdBQUcseUJBQVksQ0FBcUIsZUFBZSxDQUFDLENBQUM7UUFDeEUsTUFBTSxTQUFTLEdBQUcsY0FBSyxDQUN0Qiw4QkFBQyxrQkFBVyxJQUFDLE9BQU8sRUFBRSxDQUFDLGVBQU0sQ0FBQztZQUM3Qiw4QkFBQyxhQUFhLElBQ2IsSUFBSSxFQUFFLDhCQUFDLGlCQUFJLGVBQVksRUFDdkIsS0FBSyxFQUFFLDhCQUFDLGlCQUFJLGFBQVUsRUFDdEIsYUFBYSxFQUFFLG1CQUFNLEVBQ3JCLEtBQUssRUFBQyxVQUFVLEVBQ2hCLEtBQUssRUFBRSxHQUFHLEdBQ1QsQ0FDVyxDQUNkLENBQUM7UUFFRixNQUFNLHFDQUFjLENBQUMsU0FBZ0IsRUFBRSxhQUFhLENBQUMsQ0FBQztRQUV0RCx1Q0FBdUM7UUFFdkMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsNEJBQTRCLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN2RixNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxzQ0FBc0MsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzFGLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGlDQUFpQyxDQUFDLENBQUMsSUFBSSxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDNUYsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsdUNBQXVDLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUUxRixDQUFDLENBQUMsQ0FBQztJQUdILEVBQUUsQ0FBQyxnQ0FBZ0MsRUFBRSxLQUFLLElBQUksRUFBRTtRQUUvQyxNQUFNLGFBQWEsR0FBRyx5QkFBWSxDQUFxQixlQUFlLENBQUMsQ0FBQztRQUN4RSxNQUFNLFNBQVMsR0FBRyxjQUFLLENBQ3RCLDhCQUFDLGtCQUFXLElBQUMsT0FBTyxFQUFFLENBQUMsZUFBTSxDQUFDO1lBQzdCLDhCQUFDLGFBQWEsT0FBRyxDQUNKLENBQ2QsQ0FBQztRQUVGLE1BQU0scUNBQWMsQ0FBQyxTQUFnQixFQUFFLGFBQWEsQ0FBQyxDQUFDO1FBRXRELHVDQUF1QztRQUV2QyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3ZGLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGlDQUFpQyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDMUUsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsaUNBQWlDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxRSxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRTVFLENBQUMsQ0FBQyxDQUFDO0FBRUosQ0FBQyxDQUFDLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL2hvbWUvbXV6emFtaWwvRG9jdW1lbnRzL2JsdWViYXNlL3BsdWdpbi1qc29uLXNjaGVtYS1jb21wb25lbnRzL3NyYy9Kc29uRm9ybS9fX3Rlc3RzX18vQmFzZUZvcm1GaWVsZC50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTbGlkZXIsIFRleHQsIGdldENvbXBvbmVudCB9IGZyb20gJ0BibHVlYmFzZS9jb21wb25lbnRzJztcbmltcG9ydCB7IEJhc2VGb3JtRmllbGRQcm9wcyB9IGZyb20gJy4uJztcbmltcG9ydCB7IEJsdWVCYXNlQXBwIH0gZnJvbSAnQGJsdWViYXNlL2NvcmUnO1xuaW1wb3J0IFBsdWdpbiBmcm9tICcuLi8uLi9pbmRleCc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgbW91bnQgfSBmcm9tICdlbnp5bWUnO1xuaW1wb3J0IHsgd2FpdEZvckVsZW1lbnQgfSBmcm9tICdlbnp5bWUtYXN5bmMtaGVscGVycyc7XG5cbmRlc2NyaWJlKCdCYXNlRm9ybUZpZWxkJywgKCkgPT4ge1xuXG5cblx0aXQoJ3Nob3VsZCByZW5kZXIgYWxsIGVsZW1lbnRzJywgYXN5bmMgKCkgPT4ge1xuXG5cdFx0Y29uc3QgQmFzZUZvcm1GaWVsZCA9IGdldENvbXBvbmVudDxCYXNlRm9ybUZpZWxkUHJvcHM+KCdCYXNlRm9ybUZpZWxkJyk7XG5cdFx0Y29uc3QgY29tcG9uZW50ID0gbW91bnQoXG5cdFx0XHQ8Qmx1ZUJhc2VBcHAgcGx1Z2lucz17W1BsdWdpbl19PlxuXHRcdFx0XHQ8QmFzZUZvcm1GaWVsZFxuXHRcdFx0XHRcdGxlZnQ9ezxUZXh0PlRlbXA8L1RleHQ+fVxuXHRcdFx0XHRcdHJpZ2h0PXs8VGV4dD4yNjwvVGV4dD59XG5cdFx0XHRcdFx0TWFpbkNvbXBvbmVudD17U2xpZGVyfVxuXHRcdFx0XHRcdGxhYmVsPVwiVXNlcm5hbWVcIlxuXHRcdFx0XHRcdHZhbHVlPXsxMDB9XG5cdFx0XHRcdC8+XG5cdFx0XHQ8L0JsdWVCYXNlQXBwPlxuXHRcdCk7XG5cblx0XHRhd2FpdCB3YWl0Rm9yRWxlbWVudChjb21wb25lbnQgYXMgYW55LCBCYXNlRm9ybUZpZWxkKTtcblxuXHRcdC8vIGV4cGVjdChjb21wb25lbnQpLnRvTWF0Y2hTbmFwc2hvdCgpO1xuXG5cdFx0ZXhwZWN0KGNvbXBvbmVudC5maW5kKCdbdGVzdElEPVwiYmFzZS1mb3JtLWZpZWxkXCJdJykubGFzdCgpLmNoaWxkcmVuKCkpLnRvSGF2ZUxlbmd0aCgzKTtcblx0XHRleHBlY3QoY29tcG9uZW50LmZpbmQoJ1t0ZXN0SUQ9XCJiYXNlLWZvcm0tZmllbGQtbGVmdFwiXSBUZXh0JykubGFzdCgpLnRleHQoKSkudG9CZSgnVGVtcCcpO1xuXHRcdGV4cGVjdChjb21wb25lbnQuZmluZCgnW3Rlc3RJRD1cImJhc2UtZm9ybS1maWVsZC1tYWluXCJdJykubGFzdCgpLmNoaWxkcmVuKCkpLnRvSGF2ZUxlbmd0aCgxKTtcblx0XHRleHBlY3QoY29tcG9uZW50LmZpbmQoJ1t0ZXN0SUQ9XCJiYXNlLWZvcm0tZmllbGQtcmlnaHRcIl0gVGV4dCcpLmxhc3QoKS50ZXh0KCkpLnRvQmUoJzI2Jyk7XG5cblx0fSk7XG5cblxuXHRpdCgnc2hvdWxkIG5vdCByZW5kZXIgYW55IGVsZW1lbnRzJywgYXN5bmMgKCkgPT4ge1xuXG5cdFx0Y29uc3QgQmFzZUZvcm1GaWVsZCA9IGdldENvbXBvbmVudDxCYXNlRm9ybUZpZWxkUHJvcHM+KCdCYXNlRm9ybUZpZWxkJyk7XG5cdFx0Y29uc3QgY29tcG9uZW50ID0gbW91bnQoXG5cdFx0XHQ8Qmx1ZUJhc2VBcHAgcGx1Z2lucz17W1BsdWdpbl19PlxuXHRcdFx0XHQ8QmFzZUZvcm1GaWVsZCAvPlxuXHRcdFx0PC9CbHVlQmFzZUFwcD5cblx0XHQpO1xuXG5cdFx0YXdhaXQgd2FpdEZvckVsZW1lbnQoY29tcG9uZW50IGFzIGFueSwgQmFzZUZvcm1GaWVsZCk7XG5cblx0XHQvLyBleHBlY3QoY29tcG9uZW50KS50b01hdGNoU25hcHNob3QoKTtcblxuXHRcdGV4cGVjdChjb21wb25lbnQuZmluZCgnW3Rlc3RJRD1cImJhc2UtZm9ybS1maWVsZFwiXScpLmxhc3QoKS5jaGlsZHJlbigpKS50b0hhdmVMZW5ndGgoMCk7XG5cdFx0ZXhwZWN0KGNvbXBvbmVudC5maW5kKCdbdGVzdElEPVwiYmFzZS1mb3JtLWZpZWxkLWxlZnRcIl0nKSkudG9IYXZlTGVuZ3RoKDApO1xuXHRcdGV4cGVjdChjb21wb25lbnQuZmluZCgnW3Rlc3RJRD1cImJhc2UtZm9ybS1maWVsZC1tYWluXCJdJykpLnRvSGF2ZUxlbmd0aCgwKTtcblx0XHRleHBlY3QoY29tcG9uZW50LmZpbmQoJ1t0ZXN0SUQ9XCJiYXNlLWZvcm0tZmllbGQtcmlnaHRcIl0nKSkudG9IYXZlTGVuZ3RoKDApO1xuXG5cdH0pO1xuXG59KTtcbiJdLCJ2ZXJzaW9uIjozfQ==