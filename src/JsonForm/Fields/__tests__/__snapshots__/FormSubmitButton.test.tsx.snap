// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormSubmitButton should render all form fields in the schema nested false 1`] = `
<BlueBaseApp
  plugins={
    Array [
      Object {
        "categories": Array [
          "ui",
        ],
        "defaultConfigs": Object {},
        "description": "A utility to build pluggable components based on JSON schema!",
        "enabled": true,
        "key": "plugin-json-schema-components",
        "name": "Json Schema Components",
        "value": Object {
          "components": Object {
            "BaseFormField": [Function],
            "FormActions": [Function],
            "FormCheckboxInput": [Function],
            "FormEmailInput": [Function],
            "FormNumberInput": [Function],
            "FormPasswordInput": [Function],
            "FormPickerInput": [Function],
            "FormRadioGroupInput": [Function],
            "FormRangeInput": [Function],
            "FormResetButton": [Function],
            "FormSubmitButton": [Function],
            "FormSwitchInput": [Function],
            "FormTextInput": [Function],
            "FormUrlInput": [Function],
            "JsonForm": [Function],
            "JsonLayout": [Function],
          },
          "filters": Object {},
          "routes": undefined,
          "themes": Object {},
        },
        "version": "0.0.1",
      },
      Object {
        "categories": Array [
          "ui",
        ],
        "defaultConfigs": Object {},
        "description": "Material UI (web) comes to BlueBase!",
        "enabled": true,
        "key": "material-ui",
        "name": "Material UI",
        "value": Object {
          "components": Object {
            "Button": [Function],
            "Checkbox": Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
            "Divider": [Function],
            "DrawerItem": [Function],
            "DrawerSection": [Function],
            "ListItem": [Function],
            "ListSection": [Function],
            "ListSubheader": [Function],
            "Picker": [Function],
            "PickerItem": [Function],
            "Radio": Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
            "RadioGroup": [Function],
            "Slider": [Function],
            "Switch": Object {
              "$$typeof": Symbol(react.forward_ref),
              "render": [Function],
            },
            "TextInput": [Function],
          },
          "filters": Object {},
          "routes": undefined,
          "themes": Object {},
        },
        "version": "0.0.1",
      },
    ]
  }
>
  <BlueBaseRoot>
    <ThemeProvider>
      <ThemedComponent
        BB={
          BlueBase {
            "Analytics": Analytics {
              "BB": [Circular],
            },
            "Components": ComponentRegistry {
              "BB": [Circular],
              "data": Map {
                "BlueBaseContent" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "BlueBaseContent",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "BlueBaseContent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BlueBaseFilter" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BlueBaseFilter",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ComponentState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ComponentState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ComponentState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DataObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DataObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DynamicIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DynamicIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "EmptyState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "EmptyState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ErrorState" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ErrorState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Header" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Header",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderBackButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HeaderBackButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HeaderTitle" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HeaderTitle",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HomeScreen" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HomeScreen",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "HoverObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "HoverObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Icon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Icon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Link" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Link",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "LoadingState" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "LoadingState",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "LoadingState",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Navigation" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Navigation",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Navigation",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "NavigationActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "NavigationActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Noop" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Noop",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PluginIcon" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PluginIcon",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Redirect" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Redirect",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "StatefulComponent" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "StatefulComponent",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "WaitObserver" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "WaitObserver",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ActivityIndicator" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "ActivityIndicator",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "ActivityIndicator",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Button" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "Button",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "Button",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Image" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Image",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ImageBackground" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ImageBackground",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Picker" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Picker",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Slider" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Slider",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Switch" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Switch",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                  },
                },
                "Text" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Text",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "TextInput" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "TextInput",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "View" => Object {
                  "applyStyles": true,
                  "hocs": Array [
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                    Array [
                      [Function],
                      Object {
                        "name": "View",
                        "styles": undefined,
                      },
                    ],
                  ],
                  "isAsync": false,
                  "key": "View",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H3" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H3",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H4" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H4",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H5" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H5",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "H6" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "H6",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Subtitle2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Subtitle2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body1" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body1",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Body2" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Body2",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Caption" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Caption",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Overline" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Overline",
                  "preload": false,
                  "styles": [Function],
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "BaseFormField" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "BaseFormField",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormActions" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormActions",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormCheckboxInput" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormCheckboxInput",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormEmailInput" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormEmailInput",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormNumberInput" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormNumberInput",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormPasswordInput" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormPasswordInput",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormPickerInput" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormPickerInput",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormRadioGroupInput" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormRadioGroupInput",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormRangeInput" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormRangeInput",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormResetButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormResetButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormSubmitButton" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormSubmitButton",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormSwitchInput" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormSwitchInput",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormTextInput" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormTextInput",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "FormUrlInput" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "FormUrlInput",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonForm" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonForm",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "JsonLayout" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "JsonLayout",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Checkbox" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Checkbox",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                  },
                },
                "Divider" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Divider",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DrawerItem" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DrawerItem",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "DrawerSection" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "DrawerSection",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ListItem" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ListItem",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ListSection" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ListSection",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "ListSubheader" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "ListSubheader",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "PickerItem" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "PickerItem",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "Radio" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "Radio",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "render": [Function],
                    },
                  },
                },
                "RadioGroup" => Object {
                  "applyStyles": true,
                  "hocs": Array [],
                  "isAsync": false,
                  "key": "RadioGroup",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Configs": ConfigRegistry {
              "BB": [Circular],
              "data": Map {
                "debug" => Object {
                  "key": "debug",
                  "value": true,
                },
                "development" => Object {
                  "key": "development",
                  "value": true,
                },
                "direction" => Object {
                  "key": "direction",
                  "value": "ltr",
                },
                "locale" => Object {
                  "key": "locale",
                  "value": "en",
                },
                "pluginRoutePathPrefix" => Object {
                  "key": "pluginRoutePathPrefix",
                  "value": "p",
                },
                "theme.mode" => Object {
                  "key": "theme.mode",
                  "value": "light",
                },
                "theme.name" => Object {
                  "key": "theme.name",
                  "value": "bluebase-light",
                },
                "theme.overrides" => Object {
                  "key": "theme.overrides",
                  "value": Object {},
                },
                "title" => Object {
                  "key": "title",
                  "value": "BlueBase",
                },
              },
              "subscriptions": Map {
                "theme.name" => Map {
                  "_s3177s9" => [Function],
                },
              },
            },
            "Filters": FilterRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-boot-default" => Object {
                  "event": "bluebase.boot",
                  "key": "bluebase-boot-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "system-initialize-default" => Object {
                  "event": "bluebase.boot.start",
                  "key": "system-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-internal-default" => Object {
                  "event": "bluebase.components.register.internal",
                  "key": "bluebase-components-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-components-register-default" => Object {
                  "event": "bluebase.components.register",
                  "key": "bluebase-components-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-configs-register-default" => Object {
                  "event": "bluebase.configs.register",
                  "key": "bluebase-configs-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-register-default" => Object {
                  "event": "bluebase.plugins.register",
                  "key": "bluebase-plugins-register-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-all-default" => Object {
                  "event": "bluebase.plugins.initialize.all",
                  "key": "bluebase-plugins-initialize-all-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-plugins-initialize-default" => Object {
                  "event": "bluebase.plugins.initialize",
                  "key": "bluebase-plugins-initialize-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-root-internal-default" => Object {
                  "event": "bluebase.navigator.root",
                  "key": "bluebase-navigator-root-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-navigator-main-internal-default" => Object {
                  "event": "bluebase.navigator.main",
                  "key": "bluebase-navigator-main-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
                "bluebase-themes-register-internal-default" => Object {
                  "event": "bluebase.themes.register",
                  "key": "bluebase-themes-register-internal-default",
                  "preload": false,
                  "priority": 5,
                  "value": Promise {
                    "_40": 0,
                    "_55": [Function],
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": [Function],
                  },
                },
              },
              "subscriptions": Map {},
            },
            "Logger": Logger {
              "BB": [Circular],
            },
            "Plugins": PluginRegistry {
              "BB": [Circular],
              "data": Map {
                "plugin-json-schema-components" => Object {
                  "categories": Array [
                    "ui",
                  ],
                  "defaultConfigs": Object {},
                  "description": "A utility to build pluggable components based on JSON schema!",
                  "enabled": true,
                  "key": "plugin-json-schema-components",
                  "name": "Json Schema Components",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {
                        "BaseFormField": [Function],
                        "FormActions": [Function],
                        "FormCheckboxInput": [Function],
                        "FormEmailInput": [Function],
                        "FormNumberInput": [Function],
                        "FormPasswordInput": [Function],
                        "FormPickerInput": [Function],
                        "FormRadioGroupInput": [Function],
                        "FormRangeInput": [Function],
                        "FormResetButton": [Function],
                        "FormSubmitButton": [Function],
                        "FormSwitchInput": [Function],
                        "FormTextInput": [Function],
                        "FormUrlInput": [Function],
                        "JsonForm": [Function],
                        "JsonLayout": [Function],
                      },
                      "filters": Object {},
                      "routes": undefined,
                      "themes": Object {},
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {
                        "BaseFormField": [Function],
                        "FormActions": [Function],
                        "FormCheckboxInput": [Function],
                        "FormEmailInput": [Function],
                        "FormNumberInput": [Function],
                        "FormPasswordInput": [Function],
                        "FormPickerInput": [Function],
                        "FormRadioGroupInput": [Function],
                        "FormRangeInput": [Function],
                        "FormResetButton": [Function],
                        "FormSubmitButton": [Function],
                        "FormSwitchInput": [Function],
                        "FormTextInput": [Function],
                        "FormUrlInput": [Function],
                        "JsonForm": [Function],
                        "JsonLayout": [Function],
                      },
                      "filters": Object {},
                      "routes": undefined,
                      "themes": Object {},
                    },
                  },
                  "version": "0.0.1",
                },
                "material-ui" => Object {
                  "categories": Array [
                    "ui",
                  ],
                  "defaultConfigs": Object {},
                  "description": "Material UI (web) comes to BlueBase!",
                  "enabled": true,
                  "key": "material-ui",
                  "name": "Material UI",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {
                        "Button": [Function],
                        "Checkbox": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "Divider": [Function],
                        "DrawerItem": [Function],
                        "DrawerSection": [Function],
                        "ListItem": [Function],
                        "ListSection": [Function],
                        "ListSubheader": [Function],
                        "Picker": [Function],
                        "PickerItem": [Function],
                        "Radio": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "RadioGroup": [Function],
                        "Slider": [Function],
                        "Switch": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "TextInput": [Function],
                      },
                      "filters": Object {},
                      "routes": undefined,
                      "themes": Object {},
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {
                        "Button": [Function],
                        "Checkbox": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "Divider": [Function],
                        "DrawerItem": [Function],
                        "DrawerSection": [Function],
                        "ListItem": [Function],
                        "ListSection": [Function],
                        "ListSubheader": [Function],
                        "Picker": [Function],
                        "PickerItem": [Function],
                        "Radio": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "RadioGroup": [Function],
                        "Slider": [Function],
                        "Switch": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "TextInput": [Function],
                      },
                      "filters": Object {},
                      "routes": undefined,
                      "themes": Object {},
                    },
                  },
                  "version": "0.0.1",
                },
              },
              "subscriptions": Map {},
            },
            "Themes": ThemeRegistry {
              "BB": [Circular],
              "data": Map {
                "bluebase-light" => Object {
                  "alternate": "bluebase-dark",
                  "key": "bluebase-light",
                  "mode": "light",
                  "name": "BlueBase Light",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "rgba(0, 0, 0, 0.54)",
                          "disabled": "rgba(0, 0, 0, 0.26)",
                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                          "hover": "rgba(0, 0, 0, 0.08)",
                          "hoverOpacity": 0.08,
                          "selected": "rgba(0, 0, 0, 0.14)",
                        },
                        "background": Object {
                          "card": "#ffffff",
                          "default": "#fafafa",
                        },
                        "divider": "rgba(0, 0, 0, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(0, 0, 0, 0.38)",
                          "hint": "rgba(0, 0, 0, 0.38)",
                          "icon": "rgba(0, 0, 0, 0.38)",
                          "primary": "rgba(0, 0, 0, 0.87)",
                          "secondary": "rgba(0, 0, 0, 0.54)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "rgba(0, 0, 0, 0.87)",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
                "bluebase-dark" => Object {
                  "alternate": "bluebase-light",
                  "key": "bluebase-dark",
                  "mode": "dark",
                  "name": "BlueBase Dark",
                  "preload": false,
                  "value": Promise {
                    "_40": 0,
                    "_55": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                    "_65": 1,
                    "_72": null,
                    "isAsync": false,
                    "loaded": true,
                    "module": Object {
                      "components": Object {},
                      "elevation": [Function],
                      "palette": Object {
                        "action": Object {
                          "active": "#ffffff",
                          "disabled": "rgba(255, 255, 255, 0.3)",
                          "disabledBackground": "rgba(255, 255, 255, 0.12)",
                          "hover": "rgba(255, 255, 255, 0.1)",
                          "hoverOpacity": 0.1,
                          "selected": "rgba(255, 255, 255, 0.2)",
                        },
                        "background": Object {
                          "card": "#424242",
                          "default": "#303030",
                        },
                        "divider": "rgba(255, 255, 255, 0.12)",
                        "error": Object {
                          "contrastText": "#fff",
                          "dark": "#d32f2f",
                          "light": "#e57373",
                          "main": "#f44336",
                        },
                        "primary": Object {
                          "contrastText": "#fff",
                          "dark": "#303f9f",
                          "light": "#7986cb",
                          "main": "#3f51b5",
                        },
                        "secondary": Object {
                          "contrastText": "#fff",
                          "dark": "#c51162",
                          "light": "#ff4081",
                          "main": "#f50057",
                        },
                        "text": Object {
                          "disabled": "rgba(255, 255, 255, 0.5)",
                          "hint": "rgba(255, 255, 255, 0.5)",
                          "icon": "rgba(255, 255, 255, 0.5)",
                          "primary": "#ffffff",
                          "secondary": "rgba(255, 255, 255, 0.7)",
                        },
                      },
                      "shape": Object {
                        "borderRadius": 4,
                      },
                      "spacing": Object {
                        "unit": 8,
                      },
                      "typography": Object {
                        "body1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "body2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "400",
                        },
                        "button": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                          "textTransform": "uppercase",
                        },
                        "caption": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                        },
                        "h1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 96,
                          "fontWeight": "300",
                        },
                        "h2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 60,
                          "fontWeight": "300",
                        },
                        "h3": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 48,
                          "fontWeight": "400",
                        },
                        "h4": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 34,
                          "fontWeight": "400",
                        },
                        "h5": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 24,
                          "fontWeight": "400",
                        },
                        "h6": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 20,
                          "fontWeight": "500",
                        },
                        "overline": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 12,
                          "fontWeight": "400",
                          "textTransform": "uppercase",
                        },
                        "subtitle1": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 16,
                          "fontWeight": "400",
                        },
                        "subtitle2": Object {
                          "color": "#ffffff",
                          "fontFamily": undefined,
                          "fontSize": 14,
                          "fontWeight": "500",
                        },
                      },
                    },
                  },
                },
              },
              "subscriptions": Map {},
            },
            "bootOptions": Object {
              "children": <Formik
                enableReinitialize={false}
                initialValues={Object {}}
                isInitialValid={false}
                onSubmit={[MockFunction]}
                validateOnBlur={true}
                validateOnChange={true}
              >
                <FormikConnect(Function)
                  color="primary"
                  loading={false}
                  name="submit"
                  nested={true}
                  title="Login"
                  type="submit"
                  variant="contained"
                />
              </Formik>,
              "components": Object {},
              "configs": Object {},
              "filters": Object {},
              "plugins": Array [
                Object {
                  "categories": Array [
                    "ui",
                  ],
                  "defaultConfigs": Object {},
                  "description": "A utility to build pluggable components based on JSON schema!",
                  "enabled": true,
                  "key": "plugin-json-schema-components",
                  "name": "Json Schema Components",
                  "value": Object {
                    "components": Object {
                      "BaseFormField": [Function],
                      "FormActions": [Function],
                      "FormCheckboxInput": [Function],
                      "FormEmailInput": [Function],
                      "FormNumberInput": [Function],
                      "FormPasswordInput": [Function],
                      "FormPickerInput": [Function],
                      "FormRadioGroupInput": [Function],
                      "FormRangeInput": [Function],
                      "FormResetButton": [Function],
                      "FormSubmitButton": [Function],
                      "FormSwitchInput": [Function],
                      "FormTextInput": [Function],
                      "FormUrlInput": [Function],
                      "JsonForm": [Function],
                      "JsonLayout": [Function],
                    },
                    "filters": Object {},
                    "routes": undefined,
                    "themes": Object {},
                  },
                  "version": "0.0.1",
                },
                Object {
                  "categories": Array [
                    "ui",
                  ],
                  "defaultConfigs": Object {},
                  "description": "Material UI (web) comes to BlueBase!",
                  "enabled": true,
                  "key": "material-ui",
                  "name": "Material UI",
                  "value": Object {
                    "components": Object {
                      "Button": [Function],
                      "Checkbox": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "Divider": [Function],
                      "DrawerItem": [Function],
                      "DrawerSection": [Function],
                      "ListItem": [Function],
                      "ListSection": [Function],
                      "ListSubheader": [Function],
                      "Picker": [Function],
                      "PickerItem": [Function],
                      "Radio": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "RadioGroup": [Function],
                      "Slider": [Function],
                      "Switch": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "TextInput": [Function],
                    },
                    "filters": Object {},
                    "routes": undefined,
                    "themes": Object {},
                  },
                  "version": "0.0.1",
                },
              ],
              "themes": Array [],
            },
            "booted": true,
          }
        }
        navigator={
          Object {
            "initialRouteName": "Root",
            "routes": Array [
              Object {
                "name": "Root",
                "navigationOptions": Object {
                  "header": null,
                },
                "navigator": Object {
                  "initialRouteName": "Home",
                  "routes": Array [
                    Object {
                      "exact": true,
                      "name": "Home",
                      "navigationOptions": Object {
                        "headerLeft": null,
                        "title": "BlueBase",
                      },
                      "path": "",
                      "screen": "HomeScreen",
                    },
                  ],
                  "type": "stack",
                },
                "path": "",
              },
            ],
            "type": "stack",
          }
        }
      >
        <Component
          BB={
            BlueBase {
              "Analytics": Analytics {
                "BB": [Circular],
              },
              "Components": ComponentRegistry {
                "BB": [Circular],
                "data": Map {
                  "BlueBaseContent" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "BlueBaseContent",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "BlueBaseContent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BlueBaseFilter" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BlueBaseFilter",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ComponentState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ComponentState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ComponentState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DataObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DataObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DynamicIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DynamicIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "EmptyState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "EmptyState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ErrorState" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ErrorState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Header" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Header",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderBackButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HeaderBackButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HeaderTitle" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HeaderTitle",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HomeScreen" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HomeScreen",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "HoverObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "HoverObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Icon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Icon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Link" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Link",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "LoadingState" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "LoadingState",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "LoadingState",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Navigation" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Navigation",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Navigation",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "NavigationActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "NavigationActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Noop" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Noop",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PluginIcon" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PluginIcon",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Redirect" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Redirect",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "StatefulComponent" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "StatefulComponent",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "WaitObserver" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "WaitObserver",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ActivityIndicator" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "ActivityIndicator",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "ActivityIndicator",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Button" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "Button",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "Button",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Image" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Image",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ImageBackground" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ImageBackground",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Picker" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Picker",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Slider" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Slider",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Switch" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Switch",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                    },
                  },
                  "Text" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Text",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "TextInput" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "TextInput",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "View" => Object {
                    "applyStyles": true,
                    "hocs": Array [
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                      Array [
                        [Function],
                        Object {
                          "name": "View",
                          "styles": undefined,
                        },
                      ],
                    ],
                    "isAsync": false,
                    "key": "View",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H3" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H3",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H4" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H4",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H5" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H5",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "H6" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "H6",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Subtitle2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Subtitle2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body1" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body1",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Body2" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Body2",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Caption" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Caption",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Overline" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Overline",
                    "preload": false,
                    "styles": [Function],
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "BaseFormField" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "BaseFormField",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormActions" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormActions",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormCheckboxInput" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormCheckboxInput",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormEmailInput" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormEmailInput",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormNumberInput" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormNumberInput",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormPasswordInput" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormPasswordInput",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormPickerInput" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormPickerInput",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormRadioGroupInput" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormRadioGroupInput",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormRangeInput" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormRangeInput",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormResetButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormResetButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormSubmitButton" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormSubmitButton",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormSwitchInput" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormSwitchInput",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormTextInput" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormTextInput",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "FormUrlInput" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "FormUrlInput",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonForm" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonForm",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "JsonLayout" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "JsonLayout",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Checkbox" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Checkbox",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                    },
                  },
                  "Divider" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Divider",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DrawerItem" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DrawerItem",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "DrawerSection" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "DrawerSection",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ListItem" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ListItem",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ListSection" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ListSection",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "ListSubheader" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "ListSubheader",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "PickerItem" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "PickerItem",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "Radio" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "Radio",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "render": [Function],
                      },
                    },
                  },
                  "RadioGroup" => Object {
                    "applyStyles": true,
                    "hocs": Array [],
                    "isAsync": false,
                    "key": "RadioGroup",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Configs": ConfigRegistry {
                "BB": [Circular],
                "data": Map {
                  "debug" => Object {
                    "key": "debug",
                    "value": true,
                  },
                  "development" => Object {
                    "key": "development",
                    "value": true,
                  },
                  "direction" => Object {
                    "key": "direction",
                    "value": "ltr",
                  },
                  "locale" => Object {
                    "key": "locale",
                    "value": "en",
                  },
                  "pluginRoutePathPrefix" => Object {
                    "key": "pluginRoutePathPrefix",
                    "value": "p",
                  },
                  "theme.mode" => Object {
                    "key": "theme.mode",
                    "value": "light",
                  },
                  "theme.name" => Object {
                    "key": "theme.name",
                    "value": "bluebase-light",
                  },
                  "theme.overrides" => Object {
                    "key": "theme.overrides",
                    "value": Object {},
                  },
                  "title" => Object {
                    "key": "title",
                    "value": "BlueBase",
                  },
                },
                "subscriptions": Map {
                  "theme.name" => Map {
                    "_s3177s9" => [Function],
                  },
                },
              },
              "Filters": FilterRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-boot-default" => Object {
                    "event": "bluebase.boot",
                    "key": "bluebase-boot-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "system-initialize-default" => Object {
                    "event": "bluebase.boot.start",
                    "key": "system-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-internal-default" => Object {
                    "event": "bluebase.components.register.internal",
                    "key": "bluebase-components-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-components-register-default" => Object {
                    "event": "bluebase.components.register",
                    "key": "bluebase-components-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-configs-register-default" => Object {
                    "event": "bluebase.configs.register",
                    "key": "bluebase-configs-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-register-default" => Object {
                    "event": "bluebase.plugins.register",
                    "key": "bluebase-plugins-register-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-all-default" => Object {
                    "event": "bluebase.plugins.initialize.all",
                    "key": "bluebase-plugins-initialize-all-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-plugins-initialize-default" => Object {
                    "event": "bluebase.plugins.initialize",
                    "key": "bluebase-plugins-initialize-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-root-internal-default" => Object {
                    "event": "bluebase.navigator.root",
                    "key": "bluebase-navigator-root-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-navigator-main-internal-default" => Object {
                    "event": "bluebase.navigator.main",
                    "key": "bluebase-navigator-main-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                  "bluebase-themes-register-internal-default" => Object {
                    "event": "bluebase.themes.register",
                    "key": "bluebase-themes-register-internal-default",
                    "preload": false,
                    "priority": 5,
                    "value": Promise {
                      "_40": 0,
                      "_55": [Function],
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": [Function],
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "Logger": Logger {
                "BB": [Circular],
              },
              "Plugins": PluginRegistry {
                "BB": [Circular],
                "data": Map {
                  "plugin-json-schema-components" => Object {
                    "categories": Array [
                      "ui",
                    ],
                    "defaultConfigs": Object {},
                    "description": "A utility to build pluggable components based on JSON schema!",
                    "enabled": true,
                    "key": "plugin-json-schema-components",
                    "name": "Json Schema Components",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {
                          "BaseFormField": [Function],
                          "FormActions": [Function],
                          "FormCheckboxInput": [Function],
                          "FormEmailInput": [Function],
                          "FormNumberInput": [Function],
                          "FormPasswordInput": [Function],
                          "FormPickerInput": [Function],
                          "FormRadioGroupInput": [Function],
                          "FormRangeInput": [Function],
                          "FormResetButton": [Function],
                          "FormSubmitButton": [Function],
                          "FormSwitchInput": [Function],
                          "FormTextInput": [Function],
                          "FormUrlInput": [Function],
                          "JsonForm": [Function],
                          "JsonLayout": [Function],
                        },
                        "filters": Object {},
                        "routes": undefined,
                        "themes": Object {},
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {
                          "BaseFormField": [Function],
                          "FormActions": [Function],
                          "FormCheckboxInput": [Function],
                          "FormEmailInput": [Function],
                          "FormNumberInput": [Function],
                          "FormPasswordInput": [Function],
                          "FormPickerInput": [Function],
                          "FormRadioGroupInput": [Function],
                          "FormRangeInput": [Function],
                          "FormResetButton": [Function],
                          "FormSubmitButton": [Function],
                          "FormSwitchInput": [Function],
                          "FormTextInput": [Function],
                          "FormUrlInput": [Function],
                          "JsonForm": [Function],
                          "JsonLayout": [Function],
                        },
                        "filters": Object {},
                        "routes": undefined,
                        "themes": Object {},
                      },
                    },
                    "version": "0.0.1",
                  },
                  "material-ui" => Object {
                    "categories": Array [
                      "ui",
                    ],
                    "defaultConfigs": Object {},
                    "description": "Material UI (web) comes to BlueBase!",
                    "enabled": true,
                    "key": "material-ui",
                    "name": "Material UI",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {
                          "Button": [Function],
                          "Checkbox": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                          "Divider": [Function],
                          "DrawerItem": [Function],
                          "DrawerSection": [Function],
                          "ListItem": [Function],
                          "ListSection": [Function],
                          "ListSubheader": [Function],
                          "Picker": [Function],
                          "PickerItem": [Function],
                          "Radio": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                          "RadioGroup": [Function],
                          "Slider": [Function],
                          "Switch": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                          "TextInput": [Function],
                        },
                        "filters": Object {},
                        "routes": undefined,
                        "themes": Object {},
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {
                          "Button": [Function],
                          "Checkbox": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                          "Divider": [Function],
                          "DrawerItem": [Function],
                          "DrawerSection": [Function],
                          "ListItem": [Function],
                          "ListSection": [Function],
                          "ListSubheader": [Function],
                          "Picker": [Function],
                          "PickerItem": [Function],
                          "Radio": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                          "RadioGroup": [Function],
                          "Slider": [Function],
                          "Switch": Object {
                            "$$typeof": Symbol(react.forward_ref),
                            "render": [Function],
                          },
                          "TextInput": [Function],
                        },
                        "filters": Object {},
                        "routes": undefined,
                        "themes": Object {},
                      },
                    },
                    "version": "0.0.1",
                  },
                },
                "subscriptions": Map {},
              },
              "Themes": ThemeRegistry {
                "BB": [Circular],
                "data": Map {
                  "bluebase-light" => Object {
                    "alternate": "bluebase-dark",
                    "key": "bluebase-light",
                    "mode": "light",
                    "name": "BlueBase Light",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "rgba(0, 0, 0, 0.54)",
                            "disabled": "rgba(0, 0, 0, 0.26)",
                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                            "hover": "rgba(0, 0, 0, 0.08)",
                            "hoverOpacity": 0.08,
                            "selected": "rgba(0, 0, 0, 0.14)",
                          },
                          "background": Object {
                            "card": "#ffffff",
                            "default": "#fafafa",
                          },
                          "divider": "rgba(0, 0, 0, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(0, 0, 0, 0.38)",
                            "hint": "rgba(0, 0, 0, 0.38)",
                            "icon": "rgba(0, 0, 0, 0.38)",
                            "primary": "rgba(0, 0, 0, 0.87)",
                            "secondary": "rgba(0, 0, 0, 0.54)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "rgba(0, 0, 0, 0.87)",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                  "bluebase-dark" => Object {
                    "alternate": "bluebase-light",
                    "key": "bluebase-dark",
                    "mode": "dark",
                    "name": "BlueBase Dark",
                    "preload": false,
                    "value": Promise {
                      "_40": 0,
                      "_55": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                      "_65": 1,
                      "_72": null,
                      "isAsync": false,
                      "loaded": true,
                      "module": Object {
                        "components": Object {},
                        "elevation": [Function],
                        "palette": Object {
                          "action": Object {
                            "active": "#ffffff",
                            "disabled": "rgba(255, 255, 255, 0.3)",
                            "disabledBackground": "rgba(255, 255, 255, 0.12)",
                            "hover": "rgba(255, 255, 255, 0.1)",
                            "hoverOpacity": 0.1,
                            "selected": "rgba(255, 255, 255, 0.2)",
                          },
                          "background": Object {
                            "card": "#424242",
                            "default": "#303030",
                          },
                          "divider": "rgba(255, 255, 255, 0.12)",
                          "error": Object {
                            "contrastText": "#fff",
                            "dark": "#d32f2f",
                            "light": "#e57373",
                            "main": "#f44336",
                          },
                          "primary": Object {
                            "contrastText": "#fff",
                            "dark": "#303f9f",
                            "light": "#7986cb",
                            "main": "#3f51b5",
                          },
                          "secondary": Object {
                            "contrastText": "#fff",
                            "dark": "#c51162",
                            "light": "#ff4081",
                            "main": "#f50057",
                          },
                          "text": Object {
                            "disabled": "rgba(255, 255, 255, 0.5)",
                            "hint": "rgba(255, 255, 255, 0.5)",
                            "icon": "rgba(255, 255, 255, 0.5)",
                            "primary": "#ffffff",
                            "secondary": "rgba(255, 255, 255, 0.7)",
                          },
                        },
                        "shape": Object {
                          "borderRadius": 4,
                        },
                        "spacing": Object {
                          "unit": 8,
                        },
                        "typography": Object {
                          "body1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "body2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "400",
                          },
                          "button": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                            "textTransform": "uppercase",
                          },
                          "caption": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                          },
                          "h1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 96,
                            "fontWeight": "300",
                          },
                          "h2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 60,
                            "fontWeight": "300",
                          },
                          "h3": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 48,
                            "fontWeight": "400",
                          },
                          "h4": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 34,
                            "fontWeight": "400",
                          },
                          "h5": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 24,
                            "fontWeight": "400",
                          },
                          "h6": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 20,
                            "fontWeight": "500",
                          },
                          "overline": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 12,
                            "fontWeight": "400",
                            "textTransform": "uppercase",
                          },
                          "subtitle1": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 16,
                            "fontWeight": "400",
                          },
                          "subtitle2": Object {
                            "color": "#ffffff",
                            "fontFamily": undefined,
                            "fontSize": 14,
                            "fontWeight": "500",
                          },
                        },
                      },
                    },
                  },
                },
                "subscriptions": Map {},
              },
              "bootOptions": Object {
                "children": <Formik
                  enableReinitialize={false}
                  initialValues={Object {}}
                  isInitialValid={false}
                  onSubmit={[MockFunction]}
                  validateOnBlur={true}
                  validateOnChange={true}
                >
                  <FormikConnect(Function)
                    color="primary"
                    loading={false}
                    name="submit"
                    nested={true}
                    title="Login"
                    type="submit"
                    variant="contained"
                  />
                </Formik>,
                "components": Object {},
                "configs": Object {},
                "filters": Object {},
                "plugins": Array [
                  Object {
                    "categories": Array [
                      "ui",
                    ],
                    "defaultConfigs": Object {},
                    "description": "A utility to build pluggable components based on JSON schema!",
                    "enabled": true,
                    "key": "plugin-json-schema-components",
                    "name": "Json Schema Components",
                    "value": Object {
                      "components": Object {
                        "BaseFormField": [Function],
                        "FormActions": [Function],
                        "FormCheckboxInput": [Function],
                        "FormEmailInput": [Function],
                        "FormNumberInput": [Function],
                        "FormPasswordInput": [Function],
                        "FormPickerInput": [Function],
                        "FormRadioGroupInput": [Function],
                        "FormRangeInput": [Function],
                        "FormResetButton": [Function],
                        "FormSubmitButton": [Function],
                        "FormSwitchInput": [Function],
                        "FormTextInput": [Function],
                        "FormUrlInput": [Function],
                        "JsonForm": [Function],
                        "JsonLayout": [Function],
                      },
                      "filters": Object {},
                      "routes": undefined,
                      "themes": Object {},
                    },
                    "version": "0.0.1",
                  },
                  Object {
                    "categories": Array [
                      "ui",
                    ],
                    "defaultConfigs": Object {},
                    "description": "Material UI (web) comes to BlueBase!",
                    "enabled": true,
                    "key": "material-ui",
                    "name": "Material UI",
                    "value": Object {
                      "components": Object {
                        "Button": [Function],
                        "Checkbox": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "Divider": [Function],
                        "DrawerItem": [Function],
                        "DrawerSection": [Function],
                        "ListItem": [Function],
                        "ListSection": [Function],
                        "ListSubheader": [Function],
                        "Picker": [Function],
                        "PickerItem": [Function],
                        "Radio": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "RadioGroup": [Function],
                        "Slider": [Function],
                        "Switch": Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "render": [Function],
                        },
                        "TextInput": [Function],
                      },
                      "filters": Object {},
                      "routes": undefined,
                      "themes": Object {},
                    },
                    "version": "0.0.1",
                  },
                ],
                "themes": Array [],
              },
              "booted": true,
            }
          }
          navigator={
            Object {
              "initialRouteName": "Root",
              "routes": Array [
                Object {
                  "name": "Root",
                  "navigationOptions": Object {
                    "header": null,
                  },
                  "navigator": Object {
                    "initialRouteName": "Home",
                    "routes": Array [
                      Object {
                        "exact": true,
                        "name": "Home",
                        "navigationOptions": Object {
                          "headerLeft": null,
                          "title": "BlueBase",
                        },
                        "path": "",
                        "screen": "HomeScreen",
                      },
                    ],
                    "type": "stack",
                  },
                  "path": "",
                },
              ],
              "type": "stack",
            }
          }
        >
          <Formik
            enableReinitialize={false}
            initialValues={Object {}}
            isInitialValid={false}
            onSubmit={[MockFunction]}
            validateOnBlur={true}
            validateOnChange={true}
          >
            <FormikConnect(Function)
              color="primary"
              loading={false}
              name="submit"
              nested={true}
              title="Login"
              type="submit"
              variant="contained"
            >
              <Component
                color="primary"
                formik={
                  Object {
                    "dirty": false,
                    "errors": Object {},
                    "handleBlur": [Function],
                    "handleChange": [Function],
                    "handleReset": [Function],
                    "handleSubmit": [Function],
                    "initialValues": Object {},
                    "isSubmitting": false,
                    "isValid": false,
                    "isValidating": false,
                    "registerField": [Function],
                    "resetForm": [Function],
                    "setError": [Function],
                    "setErrors": [Function],
                    "setFieldError": [Function],
                    "setFieldTouched": [Function],
                    "setFieldValue": [Function],
                    "setFormikState": [Function],
                    "setStatus": [Function],
                    "setSubmitting": [Function],
                    "setTouched": [Function],
                    "setValues": [Function],
                    "status": undefined,
                    "submitCount": 0,
                    "submitForm": [Function],
                    "touched": Object {},
                    "unregisterField": [Function],
                    "validate": undefined,
                    "validateField": [Function],
                    "validateForm": [Function],
                    "validateOnBlur": true,
                    "validateOnChange": true,
                    "validationSchema": undefined,
                    "values": Object {},
                  }
                }
                loading={false}
                name="submit"
                nested={true}
                title="Login"
                type="submit"
                variant="contained"
              >
                <View
                  style={Object {}}
                >
                  <ThemedComponent
                    style={Object {}}
                  >
                    <ThemedComponent
                      style={Object {}}
                    >
                      <ThemedComponent
                        style={Object {}}
                      >
                        <View
                          style={Object {}}
                        >
                          <View
                            style={Object {}}
                          >
                            <Button
                              color="primary"
                              formik={
                                Object {
                                  "dirty": false,
                                  "errors": Object {},
                                  "handleBlur": [Function],
                                  "handleChange": [Function],
                                  "handleReset": [Function],
                                  "handleSubmit": [Function],
                                  "initialValues": Object {},
                                  "isSubmitting": false,
                                  "isValid": false,
                                  "isValidating": false,
                                  "registerField": [Function],
                                  "resetForm": [Function],
                                  "setError": [Function],
                                  "setErrors": [Function],
                                  "setFieldError": [Function],
                                  "setFieldTouched": [Function],
                                  "setFieldValue": [Function],
                                  "setFormikState": [Function],
                                  "setStatus": [Function],
                                  "setSubmitting": [Function],
                                  "setTouched": [Function],
                                  "setValues": [Function],
                                  "status": undefined,
                                  "submitCount": 0,
                                  "submitForm": [Function],
                                  "touched": Object {},
                                  "unregisterField": [Function],
                                  "validate": undefined,
                                  "validateField": [Function],
                                  "validateForm": [Function],
                                  "validateOnBlur": true,
                                  "validateOnChange": true,
                                  "validationSchema": undefined,
                                  "values": Object {},
                                }
                              }
                              loading={false}
                              name="submit"
                              nested={true}
                              title="Login"
                              type="submit"
                              variant="contained"
                            >
                              <ThemedComponent
                                color="primary"
                                formik={
                                  Object {
                                    "dirty": false,
                                    "errors": Object {},
                                    "handleBlur": [Function],
                                    "handleChange": [Function],
                                    "handleReset": [Function],
                                    "handleSubmit": [Function],
                                    "initialValues": Object {},
                                    "isSubmitting": false,
                                    "isValid": false,
                                    "isValidating": false,
                                    "registerField": [Function],
                                    "resetForm": [Function],
                                    "setError": [Function],
                                    "setErrors": [Function],
                                    "setFieldError": [Function],
                                    "setFieldTouched": [Function],
                                    "setFieldValue": [Function],
                                    "setFormikState": [Function],
                                    "setStatus": [Function],
                                    "setSubmitting": [Function],
                                    "setTouched": [Function],
                                    "setValues": [Function],
                                    "status": undefined,
                                    "submitCount": 0,
                                    "submitForm": [Function],
                                    "touched": Object {},
                                    "unregisterField": [Function],
                                    "validate": undefined,
                                    "validateField": [Function],
                                    "validateForm": [Function],
                                    "validateOnBlur": true,
                                    "validateOnChange": true,
                                    "validationSchema": undefined,
                                    "values": Object {},
                                  }
                                }
                                loading={false}
                                name="submit"
                                nested={true}
                                title="Login"
                                type="submit"
                                variant="contained"
                              >
                                <Component
                                  color="primary"
                                  formik={
                                    Object {
                                      "dirty": false,
                                      "errors": Object {},
                                      "handleBlur": [Function],
                                      "handleChange": [Function],
                                      "handleReset": [Function],
                                      "handleSubmit": [Function],
                                      "initialValues": Object {},
                                      "isSubmitting": false,
                                      "isValid": false,
                                      "isValidating": false,
                                      "registerField": [Function],
                                      "resetForm": [Function],
                                      "setError": [Function],
                                      "setErrors": [Function],
                                      "setFieldError": [Function],
                                      "setFieldTouched": [Function],
                                      "setFieldValue": [Function],
                                      "setFormikState": [Function],
                                      "setStatus": [Function],
                                      "setSubmitting": [Function],
                                      "setTouched": [Function],
                                      "setValues": [Function],
                                      "status": undefined,
                                      "submitCount": 0,
                                      "submitForm": [Function],
                                      "touched": Object {},
                                      "unregisterField": [Function],
                                      "validate": undefined,
                                      "validateField": [Function],
                                      "validateForm": [Function],
                                      "validateOnBlur": true,
                                      "validateOnChange": true,
                                      "validationSchema": undefined,
                                      "values": Object {},
                                    }
                                  }
                                  loading={false}
                                  name="submit"
                                  nested={true}
                                  title="Login"
                                  type="submit"
                                  variant="contained"
                                >
                                  <WithStyles(Button)
                                    color="primary"
                                    formik={
                                      Object {
                                        "dirty": false,
                                        "errors": Object {},
                                        "handleBlur": [Function],
                                        "handleChange": [Function],
                                        "handleReset": [Function],
                                        "handleSubmit": [Function],
                                        "initialValues": Object {},
                                        "isSubmitting": false,
                                        "isValid": false,
                                        "isValidating": false,
                                        "registerField": [Function],
                                        "resetForm": [Function],
                                        "setError": [Function],
                                        "setErrors": [Function],
                                        "setFieldError": [Function],
                                        "setFieldTouched": [Function],
                                        "setFieldValue": [Function],
                                        "setFormikState": [Function],
                                        "setStatus": [Function],
                                        "setSubmitting": [Function],
                                        "setTouched": [Function],
                                        "setValues": [Function],
                                        "status": undefined,
                                        "submitCount": 0,
                                        "submitForm": [Function],
                                        "touched": Object {},
                                        "unregisterField": [Function],
                                        "validate": undefined,
                                        "validateField": [Function],
                                        "validateForm": [Function],
                                        "validateOnBlur": true,
                                        "validateOnChange": true,
                                        "validationSchema": undefined,
                                        "values": Object {},
                                      }
                                    }
                                    loading={false}
                                    name="submit"
                                    nested={true}
                                    title="Login"
                                    type="submit"
                                    variant="contained"
                                  >
                                    <Button
                                      classes={
                                        Object {
                                          "colorInherit": "MuiButton-colorInherit-22",
                                          "contained": "MuiButton-contained-12",
                                          "containedPrimary": "MuiButton-containedPrimary-13",
                                          "containedSecondary": "MuiButton-containedSecondary-14",
                                          "disabled": "MuiButton-disabled-21",
                                          "extendedFab": "MuiButton-extendedFab-19",
                                          "fab": "MuiButton-fab-18",
                                          "flat": "MuiButton-flat-6",
                                          "flatPrimary": "MuiButton-flatPrimary-7",
                                          "flatSecondary": "MuiButton-flatSecondary-8",
                                          "focusVisible": "MuiButton-focusVisible-20",
                                          "fullWidth": "MuiButton-fullWidth-26",
                                          "label": "MuiButton-label-2",
                                          "mini": "MuiButton-mini-23",
                                          "outlined": "MuiButton-outlined-9",
                                          "outlinedPrimary": "MuiButton-outlinedPrimary-10",
                                          "outlinedSecondary": "MuiButton-outlinedSecondary-11",
                                          "raised": "MuiButton-raised-15",
                                          "raisedPrimary": "MuiButton-raisedPrimary-16",
                                          "raisedSecondary": "MuiButton-raisedSecondary-17",
                                          "root": "MuiButton-root-1",
                                          "sizeLarge": "MuiButton-sizeLarge-25",
                                          "sizeSmall": "MuiButton-sizeSmall-24",
                                          "text": "MuiButton-text-3",
                                          "textPrimary": "MuiButton-textPrimary-4",
                                          "textSecondary": "MuiButton-textSecondary-5",
                                        }
                                      }
                                      color="primary"
                                      component="button"
                                      disableFocusRipple={false}
                                      disabled={false}
                                      formik={
                                        Object {
                                          "dirty": false,
                                          "errors": Object {},
                                          "handleBlur": [Function],
                                          "handleChange": [Function],
                                          "handleReset": [Function],
                                          "handleSubmit": [Function],
                                          "initialValues": Object {},
                                          "isSubmitting": false,
                                          "isValid": false,
                                          "isValidating": false,
                                          "registerField": [Function],
                                          "resetForm": [Function],
                                          "setError": [Function],
                                          "setErrors": [Function],
                                          "setFieldError": [Function],
                                          "setFieldTouched": [Function],
                                          "setFieldValue": [Function],
                                          "setFormikState": [Function],
                                          "setStatus": [Function],
                                          "setSubmitting": [Function],
                                          "setTouched": [Function],
                                          "setValues": [Function],
                                          "status": undefined,
                                          "submitCount": 0,
                                          "submitForm": [Function],
                                          "touched": Object {},
                                          "unregisterField": [Function],
                                          "validate": undefined,
                                          "validateField": [Function],
                                          "validateForm": [Function],
                                          "validateOnBlur": true,
                                          "validateOnChange": true,
                                          "validationSchema": undefined,
                                          "values": Object {},
                                        }
                                      }
                                      fullWidth={false}
                                      loading={false}
                                      mini={false}
                                      name="submit"
                                      nested={true}
                                      size="medium"
                                      title="Login"
                                      type="submit"
                                      variant="contained"
                                    >
                                      <WithStyles(ButtonBase)
                                        className="MuiButton-root-1 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16"
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName="MuiButton-focusVisible-20"
                                        formik={
                                          Object {
                                            "dirty": false,
                                            "errors": Object {},
                                            "handleBlur": [Function],
                                            "handleChange": [Function],
                                            "handleReset": [Function],
                                            "handleSubmit": [Function],
                                            "initialValues": Object {},
                                            "isSubmitting": false,
                                            "isValid": false,
                                            "isValidating": false,
                                            "registerField": [Function],
                                            "resetForm": [Function],
                                            "setError": [Function],
                                            "setErrors": [Function],
                                            "setFieldError": [Function],
                                            "setFieldTouched": [Function],
                                            "setFieldValue": [Function],
                                            "setFormikState": [Function],
                                            "setStatus": [Function],
                                            "setSubmitting": [Function],
                                            "setTouched": [Function],
                                            "setValues": [Function],
                                            "status": undefined,
                                            "submitCount": 0,
                                            "submitForm": [Function],
                                            "touched": Object {},
                                            "unregisterField": [Function],
                                            "validate": undefined,
                                            "validateField": [Function],
                                            "validateForm": [Function],
                                            "validateOnBlur": true,
                                            "validateOnChange": true,
                                            "validationSchema": undefined,
                                            "values": Object {},
                                          }
                                        }
                                        loading={false}
                                        name="submit"
                                        nested={true}
                                        title="Login"
                                        type="submit"
                                      >
                                        <ButtonBase
                                          centerRipple={false}
                                          className="MuiButton-root-1 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16"
                                          classes={
                                            Object {
                                              "disabled": "MuiButtonBase-disabled-28",
                                              "focusVisible": "MuiButtonBase-focusVisible-29",
                                              "root": "MuiButtonBase-root-27",
                                            }
                                          }
                                          component="button"
                                          disableRipple={false}
                                          disableTouchRipple={false}
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName="MuiButton-focusVisible-20"
                                          formik={
                                            Object {
                                              "dirty": false,
                                              "errors": Object {},
                                              "handleBlur": [Function],
                                              "handleChange": [Function],
                                              "handleReset": [Function],
                                              "handleSubmit": [Function],
                                              "initialValues": Object {},
                                              "isSubmitting": false,
                                              "isValid": false,
                                              "isValidating": false,
                                              "registerField": [Function],
                                              "resetForm": [Function],
                                              "setError": [Function],
                                              "setErrors": [Function],
                                              "setFieldError": [Function],
                                              "setFieldTouched": [Function],
                                              "setFieldValue": [Function],
                                              "setFormikState": [Function],
                                              "setStatus": [Function],
                                              "setSubmitting": [Function],
                                              "setTouched": [Function],
                                              "setValues": [Function],
                                              "status": undefined,
                                              "submitCount": 0,
                                              "submitForm": [Function],
                                              "touched": Object {},
                                              "unregisterField": [Function],
                                              "validate": undefined,
                                              "validateField": [Function],
                                              "validateForm": [Function],
                                              "validateOnBlur": true,
                                              "validateOnChange": true,
                                              "validationSchema": undefined,
                                              "values": Object {},
                                            }
                                          }
                                          loading={false}
                                          name="submit"
                                          nested={true}
                                          tabIndex="0"
                                          title="Login"
                                          type="submit"
                                        >
                                          <button
                                            className="MuiButtonBase-root-27 MuiButton-root-1 MuiButton-contained-12 MuiButton-containedPrimary-13 MuiButton-raised-15 MuiButton-raisedPrimary-16"
                                            disabled={false}
                                            formik={
                                              Object {
                                                "dirty": false,
                                                "errors": Object {},
                                                "handleBlur": [Function],
                                                "handleChange": [Function],
                                                "handleReset": [Function],
                                                "handleSubmit": [Function],
                                                "initialValues": Object {},
                                                "isSubmitting": false,
                                                "isValid": false,
                                                "isValidating": false,
                                                "registerField": [Function],
                                                "resetForm": [Function],
                                                "setError": [Function],
                                                "setErrors": [Function],
                                                "setFieldError": [Function],
                                                "setFieldTouched": [Function],
                                                "setFieldValue": [Function],
                                                "setFormikState": [Function],
                                                "setStatus": [Function],
                                                "setSubmitting": [Function],
                                                "setTouched": [Function],
                                                "setValues": [Function],
                                                "status": undefined,
                                                "submitCount": 0,
                                                "submitForm": [Function],
                                                "touched": Object {},
                                                "unregisterField": [Function],
                                                "validate": undefined,
                                                "validateField": [Function],
                                                "validateForm": [Function],
                                                "validateOnBlur": true,
                                                "validateOnChange": true,
                                                "validationSchema": undefined,
                                                "values": Object {},
                                              }
                                            }
                                            loading={false}
                                            name="submit"
                                            nested={true}
                                            onBlur={[Function]}
                                            onContextMenu={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            tabIndex="0"
                                            title="Login"
                                            type="submit"
                                          >
                                            <span
                                              className="MuiButton-label-2"
                                            >
                                              Login
                                            </span>
                                            <NoSsr
                                              defer={false}
                                              fallback={null}
                                            >
                                              <WithStyles(TouchRipple)
                                                center={false}
                                                innerRef={[Function]}
                                              >
                                                <TouchRipple
                                                  center={false}
                                                  classes={
                                                    Object {
                                                      "child": "MuiTouchRipple-child-34",
                                                      "childLeaving": "MuiTouchRipple-childLeaving-35",
                                                      "childPulsate": "MuiTouchRipple-childPulsate-36",
                                                      "ripple": "MuiTouchRipple-ripple-31",
                                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate-33",
                                                      "rippleVisible": "MuiTouchRipple-rippleVisible-32",
                                                      "root": "MuiTouchRipple-root-30",
                                                    }
                                                  }
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    className="MuiTouchRipple-root-30"
                                                    component="span"
                                                    enter={true}
                                                    exit={true}
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root-30"
                                                    />
                                                  </TransitionGroup>
                                                </TouchRipple>
                                              </WithStyles(TouchRipple)>
                                            </NoSsr>
                                          </button>
                                        </ButtonBase>
                                      </WithStyles(ButtonBase)>
                                    </Button>
                                  </WithStyles(Button)>
                                </Component>
                              </ThemedComponent>
                            </Button>
                          </View>
                        </View>
                      </ThemedComponent>
                    </ThemedComponent>
                  </ThemedComponent>
                </View>
              </Component>
            </FormikConnect(Function)>
          </Formik>
        </Component>
      </ThemedComponent>
    </ThemeProvider>
  </BlueBaseRoot>
</BlueBaseApp>
`;
